// @generated by protoc-gen-connect-query v2.1.1
// @generated from file admin/v1/admin.proto (package blueapi.admin.v1, syntax proto3)
/* eslint-disable */

import { Admin } from "./admin_pb";

/**
 * Gets an account group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetAccountGroup
 */
export const getAccountGroup = Admin.method.getAccountGroup;

/**
 * Gets a CloudFormation launch URL for enabling the default cross-account access to your account's cost information based on type. See comments on the type for more information on what each template does.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetDefaultCostAccessTemplateUrl
 */
export const getDefaultCostAccessTemplateUrl = Admin.method.getDefaultCostAccessTemplateUrl;

/**
 * Gets the current default cross-account role attached to the input target.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetDefaultCostAccess
 */
export const getDefaultCostAccess = Admin.method.getDefaultCostAccess;

/**
 * Starts validation of a default cross-account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.
 *
 * @generated from rpc blueapi.admin.v1.Admin.CreateDefaultCostAccess
 */
export const createDefaultCostAccess = Admin.method.createDefaultCostAccess;

/**
 * Starts an update to an existing default cross-account access CloudFormation stack for template changes, if any. Only call this API if the status of your default cross-account access is 'outdated'.
 *
 * @generated from rpc blueapi.admin.v1.Admin.UpdateDefaultCostAccess
 */
export const updateDefaultCostAccess = Admin.method.updateDefaultCostAccess;

/**
 * Deletes the current default cross-account access role attached to this target account. This does not delete the CloudFormation deployment in your account.
 *
 * @generated from rpc blueapi.admin.v1.Admin.DeleteDefaultCostAccess
 */
export const deleteDefaultCostAccess = Admin.method.deleteDefaultCostAccess;

/**
 * WORK-IN-PROGRESS: Gets a CloudFormation launch URL for enabling CloudWatch metrics streaming on a target account.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetCloudWatchMetricsStreamTemplateUrl
 */
export const getCloudWatchMetricsStreamTemplateUrl = Admin.method.getCloudWatchMetricsStreamTemplateUrl;

/**
 * WORK-IN-PROGRESS: Starts validation of a CloudWatch Metrics streaming stack deployment.
 *
 * @generated from rpc blueapi.admin.v1.Admin.CreateCloudWatchMetricsStream
 */
export const createCloudWatchMetricsStream = Admin.method.createCloudWatchMetricsStream;

/**
 * WORK-IN-PROGRESS: Configure AWS Proforma Cost and Usage Report.
 *
 * @generated from rpc blueapi.admin.v1.Admin.CreateProformaCur
 */
export const createProformaCur = Admin.method.createProformaCur;

/**
 * Get notification settings for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetNotificationSettings
 */
export const getNotificationSettings = Admin.method.getNotificationSettings;

/**
 * Creates or updates notification settings for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.SaveNotificationSettings
 */
export const saveNotificationSettings = Admin.method.saveNotificationSettings;

/**
 * Lists all notification channels for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.ListNotificationChannels
 */
export const listNotificationChannels = Admin.method.listNotificationChannels;

/**
 * Gets notification channel for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetNotificationChannel
 */
export const getNotificationChannel = Admin.method.getNotificationChannel;

/**
 * WORK-IN-PROGRESS: Creates notification settings for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.CreateNotificationChannel
 */
export const createNotificationChannel = Admin.method.createNotificationChannel;

/**
 * Creates a default notification channel of type email based on the caller's primary email address.
 *
 * @generated from rpc blueapi.admin.v1.Admin.CreateDefaultNotificationChannel
 */
export const createDefaultNotificationChannel = Admin.method.createDefaultNotificationChannel;

/**
 * WORK-IN-PROGRESS: Updates notification settings for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.UpdateNotificationChannel
 */
export const updateNotificationChannel = Admin.method.updateNotificationChannel;

/**
 * Deletes notification settings for login user's organization or group.
 *
 * @generated from rpc blueapi.admin.v1.Admin.DeleteNotificationChannel
 */
export const deleteNotificationChannel = Admin.method.deleteNotificationChannel;

/**
 * WORK-IN-PROGRESS: List all notification for login user's organization.
 *
 * @generated from rpc blueapi.admin.v1.Admin.ListNotifications
 */
export const listNotifications = Admin.method.listNotifications;

/**
 * WORK-IN-PROGRESS: Get notifications for login user's organization.
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetNotification
 */
export const getNotification = Admin.method.getNotification;

/**
 * WORK-IN-PROGRESS: Creates notification for login user's organization.
 *
 * @generated from rpc blueapi.admin.v1.Admin.CreateNotification
 */
export const createNotification = Admin.method.createNotification;

/**
 * WORK-IN-PROGRESS: Updates notification for login user's organization.
 *
 * @generated from rpc blueapi.admin.v1.Admin.UpdateNotification
 */
export const updateNotification = Admin.method.updateNotification;

/**
 * WORK-IN-PROGRESS: Deletes notification for login user's organization.
 *
 * @generated from rpc blueapi.admin.v1.Admin.DeleteNotification
 */
export const deleteNotification = Admin.method.deleteNotification;

/**
 * WORK-IN-PROGRESS: Exports audit logs for login user's organization.
 *
 * @generated from rpc blueapi.admin.v1.Admin.ExportAuditLogs
 */
export const exportAuditLogs = Admin.method.exportAuditLogs;

/**
 * WORK-IN-PROGRESS: Get settings value for wave features management per organization
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetWaveFeatures
 */
export const getWaveFeatures = Admin.method.getWaveFeatures;

/**
 * WORK-IN-PROGRESS: Updates the wave feature management default value per organization
 *
 * @generated from rpc blueapi.admin.v1.Admin.UpdateWaveFeatureSetting
 */
export const updateWaveFeatureSetting = Admin.method.updateWaveFeatureSetting;

/**
 * WORK-IN-PROGRESS: Fetch the default meta saved per organization
 *
 * @generated from rpc blueapi.admin.v1.Admin.GetMSPDefaultMeta
 */
export const getMSPDefaultMeta = Admin.method.getMSPDefaultMeta;

/**
 * WORK-IN-PROGRESS: Set the default meta saved per organization
 *
 * @generated from rpc blueapi.admin.v1.Admin.UpdateMSPDefaultMeta
 */
export const updateMSPDefaultMeta = Admin.method.updateMSPDefaultMeta;
