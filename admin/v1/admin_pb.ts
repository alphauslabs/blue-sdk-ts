// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file admin/v1/admin.proto (package blueapi.admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { AccountGroup } from "../../api/accountgroup_pb";
import { file_api_accountgroup } from "../../api/accountgroup_pb";
import type { EmailChannel, MSTeamsChannel, Notification, NotificationChannel, NotificationChannelSchema, NotificationSchema, NotificationSettingsSchema, SlackChannel } from "../../api/notification_pb";
import { file_api_notification } from "../../api/notification_pb";
import type { AuditExportSchema } from "../../api/audit_pb";
import { file_api_audit } from "../../api/audit_pb";
import type { OperationSchema } from "../../protos/operation_pb";
import { file_protos_operation } from "../../protos/operation_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../protoc-gen-openapiv2/options/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file admin/v1/admin.proto.
 */
export const file_admin_v1_admin: GenFile = /*@__PURE__*/
  fileDesc("", [file_api_accountgroup, file_api_notification, file_api_audit, file_protos_operation, file_google_api_annotations, file_google_protobuf_empty, file_protoc_gen_openapiv2_options_annotations, file_google_protobuf_field_mask]);

/**
 * Request message for the Admin.ListAccountGroups rpc.
 *
 * @generated from message blueapi.admin.v1.ListAccountGroupsRequest
 */
export type ListAccountGroupsRequest = Message<"blueapi.admin.v1.ListAccountGroupsRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.ListAccountGroupsRequest.
 * Use `create(ListAccountGroupsRequestSchema)` to create a new message.
 */
export const ListAccountGroupsRequestSchema: GenMessage<ListAccountGroupsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 0);

/**
 * Response message for the Admin.ListAccountGroups rpc.
 *
 * @generated from message blueapi.admin.v1.ListAccountGroupsResponse
 */
export type ListAccountGroupsResponse = Message<"blueapi.admin.v1.ListAccountGroupsResponse"> & {
  /**
   * @generated from field: repeated blueapi.api.AccountGroup accountGroups = 1;
   */
  accountGroups: AccountGroup[];
};

/**
 * Describes the message blueapi.admin.v1.ListAccountGroupsResponse.
 * Use `create(ListAccountGroupsResponseSchema)` to create a new message.
 */
export const ListAccountGroupsResponseSchema: GenMessage<ListAccountGroupsResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 1);

/**
 * Request message for the Admin.GetAccountGroup rpc.
 *
 * @generated from message blueapi.admin.v1.GetAccountGroupRequest
 */
export type GetAccountGroupRequest = Message<"blueapi.admin.v1.GetAccountGroupRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.admin.v1.GetAccountGroupRequest.
 * Use `create(GetAccountGroupRequestSchema)` to create a new message.
 */
export const GetAccountGroupRequestSchema: GenMessage<GetAccountGroupRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 2);

/**
 * Response message for the Admin.GetAccountGroup rpc.
 *
 * @generated from message blueapi.admin.v1.GetAccountGroupResponse
 */
export type GetAccountGroupResponse = Message<"blueapi.admin.v1.GetAccountGroupResponse"> & {
  /**
   * @generated from field: blueapi.api.AccountGroup acctGroup = 1;
   */
  acctGroup?: AccountGroup;
};

/**
 * Describes the message blueapi.admin.v1.GetAccountGroupResponse.
 * Use `create(GetAccountGroupResponseSchema)` to create a new message.
 */
export const GetAccountGroupResponseSchema: GenMessage<GetAccountGroupResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 3);

/**
 * Request message for the Admin.GetDefaultCostAccessTemplateUrl rpc.
 *
 * @generated from message blueapi.admin.v1.GetDefaultCostAccessTemplateUrlRequest
 */
export type GetDefaultCostAccessTemplateUrlRequest = Message<"blueapi.admin.v1.GetDefaultCostAccessTemplateUrlRequest"> & {
  /**
   * Optional. Valid values are `default`, `s3only`, and `apionly`. Defaults to `default` if empty.
   *
   * `default` - Template for setting up both CUR export and read-only access to cost information. If selected, you need to deploy this template to `us-east-1` region as CloudFormation only supports the `AWS::CUR::ReportDefinition` in that region at the moment. The target S3 bucket will also be created in that region. If you prefer your S3 bucket to be located in a different region, you can use the template from this API by setting the type to `s3only`. After your S3 bucket is ready, call this API again (type is `default`) and set the `CurS3BucketOption` parameter to `USE_EXISTING`, then set your bucket name and region accordingly. This is the default for Ripple, unless specified otherwise.
   *
   * `apionly` - Template for setting up ready-only access to cost information. Handy if you already have exported your CUR to Alphaus through other means (i.e. manual setup). This template is the same as the `default` type but without the CUR export definitions. Although not required, we recommend you to deploy this template to allow us to query your cost-related information such as Reserved Instances, Saving Plans, etc. through the AWS API. At the moment, we only rely on CUR data which is a best-effort basis and sometimes not accurate. This is the default for Wave(Pro), unless specified otherwise.
   *
   * `s3only` - A helper template for creating an S3 bucket to be used for CUR export.
   *
   * `default-2.0`- For default cur 2.0 templates. 
   *
   * `s3only-2.0` - For s3only cur 2.0 templates.
   *
   * All templates are publicly available from the reponse link (`templateUrl`) if you want to audit the included permissions.
   *
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message blueapi.admin.v1.GetDefaultCostAccessTemplateUrlRequest.
 * Use `create(GetDefaultCostAccessTemplateUrlRequestSchema)` to create a new message.
 */
export const GetDefaultCostAccessTemplateUrlRequestSchema: GenMessage<GetDefaultCostAccessTemplateUrlRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 4);

/**
 * Response message for the Admin.GetDefaultCostAccessTemplateUrl rpc.
 *
 * @generated from message blueapi.admin.v1.GetDefaultCostAccessTemplateUrlResponse
 */
export type GetDefaultCostAccessTemplateUrlResponse = Message<"blueapi.admin.v1.GetDefaultCostAccessTemplateUrlResponse"> & {
  /**
   * The CloudFormation launch url. Open it in your browser.
   *
   * @generated from field: string launchUrl = 1;
   */
  launchUrl: string;

  /**
   * The latest CloudFormation template. The version is included in the filename.
   *
   * @generated from field: string templateUrl = 2;
   */
  templateUrl: string;

  /**
   * The default stack name used. Can be modified.
   *
   * @generated from field: string stackName = 3;
   */
  stackName: string;

  /**
   * The AWS account that will receive the access. Do not change.
   *
   * @generated from field: string principal = 4;
   */
  principal: string;

  /**
   * The external id for this role. Do not change.
   *
   * @generated from field: string externalId = 5;
   */
  externalId: string;
};

/**
 * Describes the message blueapi.admin.v1.GetDefaultCostAccessTemplateUrlResponse.
 * Use `create(GetDefaultCostAccessTemplateUrlResponseSchema)` to create a new message.
 */
export const GetDefaultCostAccessTemplateUrlResponseSchema: GenMessage<GetDefaultCostAccessTemplateUrlResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 5);

/**
 * Request message for the Admin.ListDefaultCostAccess rpc.
 *
 * @generated from message blueapi.admin.v1.ListDefaultCostAccessRequest
 */
export type ListDefaultCostAccessRequest = Message<"blueapi.admin.v1.ListDefaultCostAccessRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.ListDefaultCostAccessRequest.
 * Use `create(ListDefaultCostAccessRequestSchema)` to create a new message.
 */
export const ListDefaultCostAccessRequestSchema: GenMessage<ListDefaultCostAccessRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 6);

/**
 * Request message for the Admin.GetDefaultCostAccess rpc.
 *
 * @generated from message blueapi.admin.v1.GetDefaultCostAccessRequest
 */
export type GetDefaultCostAccessRequest = Message<"blueapi.admin.v1.GetDefaultCostAccessRequest"> & {
  /**
   * Required. The target AWS account to query.
   *
   * @generated from field: string target = 1;
   */
  target: string;
};

/**
 * Describes the message blueapi.admin.v1.GetDefaultCostAccessRequest.
 * Use `create(GetDefaultCostAccessRequestSchema)` to create a new message.
 */
export const GetDefaultCostAccessRequestSchema: GenMessage<GetDefaultCostAccessRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 7);

/**
 * Response message for the Admin.GetDefaultCostAccess, Admin.CreateDefaultCostAccess rpc.
 *
 * @generated from message blueapi.admin.v1.DefaultCostAccess
 */
export type DefaultCostAccess = Message<"blueapi.admin.v1.DefaultCostAccess"> & {
  /**
   * The queried target account.
   *
   * @generated from field: string target = 1;
   */
  target: string;

  /**
   * The role ARN that provides the cross-account access permissions.
   *
   * @generated from field: string roleArn = 2;
   */
  roleArn: string;

  /**
   * The external id for this role.
   *
   * @generated from field: string externalId = 3;
   */
  externalId: string;

  /**
   * The id of the CloudFormation stack deployed in the target account.
   *
   * @generated from field: string stackId = 4;
   */
  stackId: string;

  /**
   * The region where the stack is deployed.
   *
   * @generated from field: string stackRegion = 5;
   */
  stackRegion: string;

  /**
   * The latest template used to deploy the stack.
   *
   * @generated from field: string templateUrl = 6;
   */
  templateUrl: string;

  /**
   * This can be `latest`, `outdated`, or some error information.
   *
   * @generated from field: string status = 7;
   */
  status: string;

  /**
   * The last updated timestamp, RFC3339 UTC.
   *
   * @generated from field: string lastUpdated = 8;
   */
  lastUpdated: string;
};

/**
 * Describes the message blueapi.admin.v1.DefaultCostAccess.
 * Use `create(DefaultCostAccessSchema)` to create a new message.
 */
export const DefaultCostAccessSchema: GenMessage<DefaultCostAccess> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 8);

/**
 * Request message for the Admin.CreateDefaultCostAccess rpc.
 *
 * @generated from message blueapi.admin.v1.CreateDefaultCostAccessRequest
 */
export type CreateDefaultCostAccessRequest = Message<"blueapi.admin.v1.CreateDefaultCostAccessRequest"> & {
  /**
   * Required. The target AWS account to validate.
   *
   * @generated from field: string target = 1;
   */
  target: string;

  /**
   * Optional. The CUR type. Values should be either 'legacy' or '2.0'. Defaults to 'legacy' if empty.
   *
   * @generated from field: string curType = 2;
   */
  curType: string;
};

/**
 * Describes the message blueapi.admin.v1.CreateDefaultCostAccessRequest.
 * Use `create(CreateDefaultCostAccessRequestSchema)` to create a new message.
 */
export const CreateDefaultCostAccessRequestSchema: GenMessage<CreateDefaultCostAccessRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 9);

/**
 * Request message for the Admin.UpdateDefaultCostAccess rpc.
 *
 * @generated from message blueapi.admin.v1.UpdateDefaultCostAccessRequest
 */
export type UpdateDefaultCostAccessRequest = Message<"blueapi.admin.v1.UpdateDefaultCostAccessRequest"> & {
  /**
   * Required. The target AWS account to update.
   *
   * @generated from field: string target = 1;
   */
  target: string;
};

/**
 * Describes the message blueapi.admin.v1.UpdateDefaultCostAccessRequest.
 * Use `create(UpdateDefaultCostAccessRequestSchema)` to create a new message.
 */
export const UpdateDefaultCostAccessRequestSchema: GenMessage<UpdateDefaultCostAccessRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 10);

/**
 * Request message for the Admin.DeleteDefaultCostAccess rpc.
 *
 * @generated from message blueapi.admin.v1.DeleteDefaultCostAccessRequest
 */
export type DeleteDefaultCostAccessRequest = Message<"blueapi.admin.v1.DeleteDefaultCostAccessRequest"> & {
  /**
   * Required. The target AWS account to delete.
   *
   * @generated from field: string target = 1;
   */
  target: string;
};

/**
 * Describes the message blueapi.admin.v1.DeleteDefaultCostAccessRequest.
 * Use `create(DeleteDefaultCostAccessRequestSchema)` to create a new message.
 */
export const DeleteDefaultCostAccessRequestSchema: GenMessage<DeleteDefaultCostAccessRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 11);

/**
 * Request message for the Admin.GetCloudWatchMetricsStreamTemplateUrl rpc.
 *
 * @generated from message blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlRequest
 */
export type GetCloudWatchMetricsStreamTemplateUrlRequest = Message<"blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlRequest.
 * Use `create(GetCloudWatchMetricsStreamTemplateUrlRequestSchema)` to create a new message.
 */
export const GetCloudWatchMetricsStreamTemplateUrlRequestSchema: GenMessage<GetCloudWatchMetricsStreamTemplateUrlRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 12);

/**
 * Response message for the Admin.GetCloudWatchMetricsStreamTemplateUrl rpc.
 *
 * @generated from message blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlResponse
 */
export type GetCloudWatchMetricsStreamTemplateUrlResponse = Message<"blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlResponse"> & {
  /**
   * The CloudFormation launch url. Open it in your browser.
   *
   * @generated from field: string launchUrl = 1;
   */
  launchUrl: string;

  /**
   * The latest CloudFormation template. The version is included in the filename.
   *
   * @generated from field: string templateUrl = 2;
   */
  templateUrl: string;

  /**
   * The default stack name used. Can be modified.
   *
   * @generated from field: string stackName = 3;
   */
  stackName: string;

  /**
   * The external id for this role. Do not change.
   *
   * @generated from field: string externalId = 4;
   */
  externalId: string;
};

/**
 * Describes the message blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlResponse.
 * Use `create(GetCloudWatchMetricsStreamTemplateUrlResponseSchema)` to create a new message.
 */
export const GetCloudWatchMetricsStreamTemplateUrlResponseSchema: GenMessage<GetCloudWatchMetricsStreamTemplateUrlResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 13);

/**
 * Request message for the Admin.CreateCloudWatchMetricsStream rpc.
 *
 * @generated from message blueapi.admin.v1.CreateCloudWatchMetricsStreamRequest
 */
export type CreateCloudWatchMetricsStreamRequest = Message<"blueapi.admin.v1.CreateCloudWatchMetricsStreamRequest"> & {
  /**
   * Required. The target AWS account to validate.
   *
   * @generated from field: string target = 1;
   */
  target: string;
};

/**
 * Describes the message blueapi.admin.v1.CreateCloudWatchMetricsStreamRequest.
 * Use `create(CreateCloudWatchMetricsStreamRequestSchema)` to create a new message.
 */
export const CreateCloudWatchMetricsStreamRequestSchema: GenMessage<CreateCloudWatchMetricsStreamRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 14);

/**
 * Response message for the Admin.CreateCloudWatchMetricsStream rpc.
 *
 * @generated from message blueapi.admin.v1.CloudWatchMetricsStream
 */
export type CloudWatchMetricsStream = Message<"blueapi.admin.v1.CloudWatchMetricsStream"> & {
  /**
   * The queried target account.
   *
   * @generated from field: string target = 1;
   */
  target: string;

  /**
   * The external id for this role.
   *
   * @generated from field: string externalId = 2;
   */
  externalId: string;

  /**
   * The id of the CloudFormation stack deployed in the target account.
   *
   * @generated from field: string stackId = 3;
   */
  stackId: string;

  /**
   * The region where the stack is deployed.
   *
   * @generated from field: string stackRegion = 4;
   */
  stackRegion: string;

  /**
   * The latest template used to deploy the stack.
   *
   * @generated from field: string templateUrl = 5;
   */
  templateUrl: string;

  /**
   * This can be `latest`, `outdated`, or some error information.
   *
   * @generated from field: string status = 6;
   */
  status: string;

  /**
   * The last updated timestamp, RFC3339 UTC.
   *
   * @generated from field: string lastUpdated = 7;
   */
  lastUpdated: string;
};

/**
 * Describes the message blueapi.admin.v1.CloudWatchMetricsStream.
 * Use `create(CloudWatchMetricsStreamSchema)` to create a new message.
 */
export const CloudWatchMetricsStreamSchema: GenMessage<CloudWatchMetricsStream> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 15);

/**
 * Request message for the Admin.GetNotificationSettings rpc.
 *
 * @generated from message blueapi.admin.v1.GetNotificationSettingsRequest
 */
export type GetNotificationSettingsRequest = Message<"blueapi.admin.v1.GetNotificationSettingsRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.GetNotificationSettingsRequest.
 * Use `create(GetNotificationSettingsRequestSchema)` to create a new message.
 */
export const GetNotificationSettingsRequestSchema: GenMessage<GetNotificationSettingsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 16);

/**
 * Request message for the Admin.SaveNotificationSettings rpc.
 *
 * @generated from message blueapi.admin.v1.SaveNotificationSettingsRequest
 */
export type SaveNotificationSettingsRequest = Message<"blueapi.admin.v1.SaveNotificationSettingsRequest"> & {
  /**
   * Required. Enable or disable notifications globally.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Optional. If non-empty, set this notification channel id as the default channel.
   *
   * @generated from field: string defaultChannel = 2;
   */
  defaultChannel: string;
};

/**
 * Describes the message blueapi.admin.v1.SaveNotificationSettingsRequest.
 * Use `create(SaveNotificationSettingsRequestSchema)` to create a new message.
 */
export const SaveNotificationSettingsRequestSchema: GenMessage<SaveNotificationSettingsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 17);

/**
 * Request message for the Admin.ListNotificationChannels rpc.
 *
 * @generated from message blueapi.admin.v1.ListNotificationChannelsRequest
 */
export type ListNotificationChannelsRequest = Message<"blueapi.admin.v1.ListNotificationChannelsRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.ListNotificationChannelsRequest.
 * Use `create(ListNotificationChannelsRequestSchema)` to create a new message.
 */
export const ListNotificationChannelsRequestSchema: GenMessage<ListNotificationChannelsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 18);

/**
 * Response message for the Admin.ListNotificationChannels rpc.
 *
 * @generated from message blueapi.admin.v1.ListNotificationChannelsResponse
 */
export type ListNotificationChannelsResponse = Message<"blueapi.admin.v1.ListNotificationChannelsResponse"> & {
  /**
   * @generated from field: repeated blueapi.api.NotificationChannel channels = 1;
   */
  channels: NotificationChannel[];
};

/**
 * Describes the message blueapi.admin.v1.ListNotificationChannelsResponse.
 * Use `create(ListNotificationChannelsResponseSchema)` to create a new message.
 */
export const ListNotificationChannelsResponseSchema: GenMessage<ListNotificationChannelsResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 19);

/**
 * Request message for the Admin.GetNotificationChannel rpc.
 *
 * @generated from message blueapi.admin.v1.GetNotificationChannelRequest
 */
export type GetNotificationChannelRequest = Message<"blueapi.admin.v1.GetNotificationChannelRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 2;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message blueapi.admin.v1.GetNotificationChannelRequest.
 * Use `create(GetNotificationChannelRequestSchema)` to create a new message.
 */
export const GetNotificationChannelRequestSchema: GenMessage<GetNotificationChannelRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 20);

/**
 * Request message for the Admin.CreateNotificationChannel rpc.
 *
 * @generated from message blueapi.admin.v1.CreateNotificationChannelRequest
 */
export type CreateNotificationChannelRequest = Message<"blueapi.admin.v1.CreateNotificationChannelRequest"> & {
  /**
   * Required. Name of the notification channel.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Valid values: `email`, `slack`, `msteams`.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Required if type = `email`.
   *
   * @generated from field: blueapi.api.EmailChannel email = 3;
   */
  email?: EmailChannel;

  /**
   * Required if type = `slack`.
   *
   * @generated from field: blueapi.api.SlackChannel slack = 4;
   */
  slack?: SlackChannel;

  /**
   * Required if type = `msteams`.
   *
   * @generated from field: blueapi.api.MSTeamsChannel msteams = 5;
   */
  msteams?: MSTeamsChannel;

  /**
   * Optional. For Octo use only: `octo`.
   *
   * @generated from field: string product = 6;
   */
  product: string;
};

/**
 * Describes the message blueapi.admin.v1.CreateNotificationChannelRequest.
 * Use `create(CreateNotificationChannelRequestSchema)` to create a new message.
 */
export const CreateNotificationChannelRequestSchema: GenMessage<CreateNotificationChannelRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 21);

/**
 * Request message for the Admin.CreateDefaultNotificationChannel rpc.
 *
 * @generated from message blueapi.admin.v1.CreateDefaultNotificationChannelRequest
 */
export type CreateDefaultNotificationChannelRequest = Message<"blueapi.admin.v1.CreateDefaultNotificationChannelRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.CreateDefaultNotificationChannelRequest.
 * Use `create(CreateDefaultNotificationChannelRequestSchema)` to create a new message.
 */
export const CreateDefaultNotificationChannelRequestSchema: GenMessage<CreateDefaultNotificationChannelRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 22);

/**
 * Request message for the Admin.UpdateNotificationChannel rpc.
 *
 * @generated from message blueapi.admin.v1.UpdateNotificationChannelRequest
 */
export type UpdateNotificationChannelRequest = Message<"blueapi.admin.v1.UpdateNotificationChannelRequest"> & {
  /**
   * Required. ID of the notification channel to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. Name of the notification channel.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Required. Valid values: `email`, `slack`, `msteams`.
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * Required if type = `email`.
   *
   * @generated from field: blueapi.api.EmailChannel email = 4;
   */
  email?: EmailChannel;

  /**
   * Required if type = `slack`.
   *
   * @generated from field: blueapi.api.SlackChannel slack = 5;
   */
  slack?: SlackChannel;

  /**
   * Required if type = `msteams`.
   *
   * @generated from field: blueapi.api.MSTeamsChannel msteams = 6;
   */
  msteams?: MSTeamsChannel;

  /**
   * Optional. For Octo use only: `octo`.
   *
   * @generated from field: string product = 7;
   */
  product: string;
};

/**
 * Describes the message blueapi.admin.v1.UpdateNotificationChannelRequest.
 * Use `create(UpdateNotificationChannelRequestSchema)` to create a new message.
 */
export const UpdateNotificationChannelRequestSchema: GenMessage<UpdateNotificationChannelRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 23);

/**
 * Request message for the Admin.DeleteNotificationChannel rpc.
 *
 * @generated from message blueapi.admin.v1.DeleteNotificationChannelRequest
 */
export type DeleteNotificationChannelRequest = Message<"blueapi.admin.v1.DeleteNotificationChannelRequest"> & {
  /**
   * Required. ID of the notification channel to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.admin.v1.DeleteNotificationChannelRequest.
 * Use `create(DeleteNotificationChannelRequestSchema)` to create a new message.
 */
export const DeleteNotificationChannelRequestSchema: GenMessage<DeleteNotificationChannelRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 24);

/**
 * Request message for the Admin.ListNotifications rpc.
 *
 * @generated from message blueapi.admin.v1.ListNotificationsRequest
 */
export type ListNotificationsRequest = Message<"blueapi.admin.v1.ListNotificationsRequest"> & {
};

/**
 * Describes the message blueapi.admin.v1.ListNotificationsRequest.
 * Use `create(ListNotificationsRequestSchema)` to create a new message.
 */
export const ListNotificationsRequestSchema: GenMessage<ListNotificationsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 25);

/**
 * Response message for the Admin.ListNotifications rpc.
 *
 * @generated from message blueapi.admin.v1.ListNotificationsResponse
 */
export type ListNotificationsResponse = Message<"blueapi.admin.v1.ListNotificationsResponse"> & {
  /**
   * @generated from field: repeated blueapi.api.Notification notifications = 1;
   */
  notifications: Notification[];
};

/**
 * Describes the message blueapi.admin.v1.ListNotificationsResponse.
 * Use `create(ListNotificationsResponseSchema)` to create a new message.
 */
export const ListNotificationsResponseSchema: GenMessage<ListNotificationsResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 26);

/**
 * @generated from message blueapi.admin.v1.NotificationAccount
 */
export type NotificationAccount = Message<"blueapi.admin.v1.NotificationAccount"> & {
  /**
   * Required.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required.
   *
   * @generated from field: string accountId = 2;
   */
  accountId: string;
};

/**
 * Describes the message blueapi.admin.v1.NotificationAccount.
 * Use `create(NotificationAccountSchema)` to create a new message.
 */
export const NotificationAccountSchema: GenMessage<NotificationAccount> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 27);

/**
 * Request message for the Admin.GetNotificationTypeChannels rpc.
 *
 * @generated from message blueapi.admin.v1.GetNotificationRequest
 */
export type GetNotificationRequest = Message<"blueapi.admin.v1.GetNotificationRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   * Valid values:
   * `InvoiceCalculationStarted`,
   * `InvoiceCalculationFinished`,
   * `CurUpdatedAfterInvoice`.
   * `AccountBudgetAlert`.
   *
   * @generated from field: string notificationType = 2;
   */
  notificationType: string;
};

/**
 * Describes the message blueapi.admin.v1.GetNotificationRequest.
 * Use `create(GetNotificationRequestSchema)` to create a new message.
 */
export const GetNotificationRequestSchema: GenMessage<GetNotificationRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 28);

/**
 * Request message for the Admin.CreateNotificationTypeChannels rpc.
 *
 * @generated from message blueapi.admin.v1.CreateNotificationRequest
 */
export type CreateNotificationRequest = Message<"blueapi.admin.v1.CreateNotificationRequest"> & {
  /**
   * Required
   * Valid values:
   * `InvoiceCalculationStarted`,
   * `InvoiceCalculationFinished`,
   * `CurUpdatedAfterInvoice`.
   * `AccountBudgetAlert`.
   *
   * @generated from field: string notificationType = 1;
   */
  notificationType: string;

  /**
   * Required
   *
   * @generated from field: repeated string channels = 2;
   */
  channels: string[];

  /**
   * Required
   *
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;

  /**
   * Optional. only available Wave(Pro).
   *
   * @generated from field: blueapi.admin.v1.NotificationAccount account = 4;
   */
  account?: NotificationAccount;
};

/**
 * Describes the message blueapi.admin.v1.CreateNotificationRequest.
 * Use `create(CreateNotificationRequestSchema)` to create a new message.
 */
export const CreateNotificationRequestSchema: GenMessage<CreateNotificationRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 29);

/**
 * Request message for the Admin.UpdateNotificationTypeChannels rpc.
 *
 * @generated from message blueapi.admin.v1.UpdateNotificationRequest
 */
export type UpdateNotificationRequest = Message<"blueapi.admin.v1.UpdateNotificationRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   *
   * @generated from field: repeated string channels = 2;
   */
  channels: string[];

  /**
   * Required
   *
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;

  /**
   * Required
   * Valid values:
   * `InvoiceCalculationStarted`,
   * `InvoiceCalculationFinished`,
   * `CurUpdatedAfterInvoice`.
   * `AccountBudgetAlert`.
   *
   * @generated from field: string notificationType = 4;
   */
  notificationType: string;

  /**
   * Optional. only available Wave(Pro).
   *
   * @generated from field: blueapi.admin.v1.NotificationAccount account = 5;
   */
  account?: NotificationAccount;
};

/**
 * Describes the message blueapi.admin.v1.UpdateNotificationRequest.
 * Use `create(UpdateNotificationRequestSchema)` to create a new message.
 */
export const UpdateNotificationRequestSchema: GenMessage<UpdateNotificationRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 30);

/**
 * Request message for the Admin.DeleteNotification rpc.
 *
 * @generated from message blueapi.admin.v1.DeleteNotificationRequest
 */
export type DeleteNotificationRequest = Message<"blueapi.admin.v1.DeleteNotificationRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   * Valid values:
   * `InvoiceCalculationStarted`,
   * `InvoiceCalculationFinished`,
   * `CurUpdatedAfterInvoice`.
   * `AccountBudgetAlert`.
   *
   * @generated from field: string notificationType = 2;
   */
  notificationType: string;
};

/**
 * Describes the message blueapi.admin.v1.DeleteNotificationRequest.
 * Use `create(DeleteNotificationRequestSchema)` to create a new message.
 */
export const DeleteNotificationRequestSchema: GenMessage<DeleteNotificationRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 31);

/**
 * Request message for Admin.CreateProformaCur rpc
 *
 * @generated from message blueapi.admin.v1.CreateProformaCurRequest
 */
export type CreateProformaCurRequest = Message<"blueapi.admin.v1.CreateProformaCurRequest"> & {
  /**
   * Required.
   *
   * @generated from field: string payerId = 1;
   */
  payerId: string;

  /**
   * Required.
   *
   * @generated from field: string billingInternalId = 2;
   */
  billingInternalId: string;

  /**
   * Required.
   *
   * @generated from field: string reportName = 3;
   */
  reportName: string;

  /**
   * Optional. Default value: `alphaus-proforma-cur-export`
   *
   * @generated from field: string s3BucketName = 4;
   */
  s3BucketName: string;

  /**
   * Optional. Default value: `pre`
   *
   * @generated from field: string s3Prefix = 5;
   */
  s3Prefix: string;

  /**
   * Optional. Default value: `us-east-1`
   *
   * @generated from field: string s3Region = 6;
   */
  s3Region: string;
};

/**
 * Describes the message blueapi.admin.v1.CreateProformaCurRequest.
 * Use `create(CreateProformaCurRequestSchema)` to create a new message.
 */
export const CreateProformaCurRequestSchema: GenMessage<CreateProformaCurRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 32);

/**
 * @generated from message blueapi.admin.v1.ProformaCur
 */
export type ProformaCur = Message<"blueapi.admin.v1.ProformaCur"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: string payerId = 2;
   */
  payerId: string;

  /**
   * @generated from field: string billingInternalId = 3;
   */
  billingInternalId: string;

  /**
   * @generated from field: string reportName = 4;
   */
  reportName: string;

  /**
   * @generated from field: string bucketName = 5;
   */
  bucketName: string;

  /**
   * @generated from field: string prefix = 6;
   */
  prefix: string;

  /**
   * @generated from field: string timeCreated = 7;
   */
  timeCreated: string;
};

/**
 * Describes the message blueapi.admin.v1.ProformaCur.
 * Use `create(ProformaCurSchema)` to create a new message.
 */
export const ProformaCurSchema: GenMessage<ProformaCur> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 33);

/**
 * Request message for the ExportAuditLogs rpc.
 *
 * @generated from message blueapi.admin.v1.ExportAuditLogsRequest
 */
export type ExportAuditLogsRequest = Message<"blueapi.admin.v1.ExportAuditLogsRequest"> & {
  /**
   * Required. At the moment, `CSV`,`JSON` is supported.
   *
   * @generated from field: string format = 1;
   */
  format: string;

  /**
   * Required. The UTC date to start data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string startTime = 2;
   */
  startTime: string;

  /**
   * Required. The UTC date to end data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 3;
   */
  endTime: string;
};

/**
 * Describes the message blueapi.admin.v1.ExportAuditLogsRequest.
 * Use `create(ExportAuditLogsRequestSchema)` to create a new message.
 */
export const ExportAuditLogsRequestSchema: GenMessage<ExportAuditLogsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 34);

/**
 * for wave features settings data maping
 *
 * @generated from message blueapi.admin.v1.WaveFeature
 */
export type WaveFeature = Message<"blueapi.admin.v1.WaveFeature"> & {
  /**
   * @generated from field: string label = 1;
   */
  label: string;

  /**
   * @generated from field: string featureId = 2;
   */
  featureId: string;

  /**
   * @generated from field: bool isEnabled = 5;
   */
  isEnabled: boolean;

  /**
   * @generated from field: string tickStrategy = 3;
   */
  tickStrategy: string;

  /**
   * @generated from field: string condition = 4;
   */
  condition: string;

  /**
   * @generated from field: string flag = 6;
   */
  flag: string;

  /**
   * @generated from field: repeated blueapi.admin.v1.WaveFeature children = 7;
   */
  children: WaveFeature[];
};

/**
 * Describes the message blueapi.admin.v1.WaveFeature.
 * Use `create(WaveFeatureSchema)` to create a new message.
 */
export const WaveFeatureSchema: GenMessage<WaveFeature> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 35);

/**
 * @generated from message blueapi.admin.v1.GetWaveFeaturesResponse
 */
export type GetWaveFeaturesResponse = Message<"blueapi.admin.v1.GetWaveFeaturesResponse"> & {
  /**
   * @generated from field: repeated blueapi.admin.v1.WaveFeature settings = 1;
   */
  settings: WaveFeature[];
};

/**
 * Describes the message blueapi.admin.v1.GetWaveFeaturesResponse.
 * Use `create(GetWaveFeaturesResponseSchema)` to create a new message.
 */
export const GetWaveFeaturesResponseSchema: GenMessage<GetWaveFeaturesResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 36);

/**
 * @generated from message blueapi.admin.v1.GetWaveFeaturesRequest
 */
export type GetWaveFeaturesRequest = Message<"blueapi.admin.v1.GetWaveFeaturesRequest"> & {
  /**
   * @generated from field: string lang = 1;
   */
  lang: string;
};

/**
 * Describes the message blueapi.admin.v1.GetWaveFeaturesRequest.
 * Use `create(GetWaveFeaturesRequestSchema)` to create a new message.
 */
export const GetWaveFeaturesRequestSchema: GenMessage<GetWaveFeaturesRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 37);

/**
 * For rpc UpdateWaveFeature
 *
 * @generated from message blueapi.admin.v1.FeatureSetting
 */
export type FeatureSetting = Message<"blueapi.admin.v1.FeatureSetting"> & {
  /**
   * @generated from field: string featureId = 1;
   */
  featureId: string;

  /**
   * @generated from field: bool isEnabled = 2;
   */
  isEnabled: boolean;
};

/**
 * Describes the message blueapi.admin.v1.FeatureSetting.
 * Use `create(FeatureSettingSchema)` to create a new message.
 */
export const FeatureSettingSchema: GenMessage<FeatureSetting> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 38);

/**
 * @generated from message blueapi.admin.v1.UpdateWaveFeatureSettingRequest
 */
export type UpdateWaveFeatureSettingRequest = Message<"blueapi.admin.v1.UpdateWaveFeatureSettingRequest"> & {
  /**
   * @generated from field: string lang = 2;
   */
  lang: string;

  /**
   * @generated from field: repeated blueapi.admin.v1.FeatureSetting featureSetting = 1;
   */
  featureSetting: FeatureSetting[];
};

/**
 * Describes the message blueapi.admin.v1.UpdateWaveFeatureSettingRequest.
 * Use `create(UpdateWaveFeatureSettingRequestSchema)` to create a new message.
 */
export const UpdateWaveFeatureSettingRequestSchema: GenMessage<UpdateWaveFeatureSettingRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 39);

/**
 * @generated from message blueapi.admin.v1.GetMSPDefaultMetaRequest
 */
export type GetMSPDefaultMetaRequest = Message<"blueapi.admin.v1.GetMSPDefaultMetaRequest"> & {
  /**
   * @generated from field: string mspId = 1;
   */
  mspId: string;
};

/**
 * Describes the message blueapi.admin.v1.GetMSPDefaultMetaRequest.
 * Use `create(GetMSPDefaultMetaRequestSchema)` to create a new message.
 */
export const GetMSPDefaultMetaRequestSchema: GenMessage<GetMSPDefaultMetaRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 40);

/**
 * @generated from message blueapi.admin.v1.GetMSPDefaultMetaResponse
 */
export type GetMSPDefaultMetaResponse = Message<"blueapi.admin.v1.GetMSPDefaultMetaResponse"> & {
  /**
   * @generated from field: repeated string defaultMeta = 1;
   */
  defaultMeta: string[];
};

/**
 * Describes the message blueapi.admin.v1.GetMSPDefaultMetaResponse.
 * Use `create(GetMSPDefaultMetaResponseSchema)` to create a new message.
 */
export const GetMSPDefaultMetaResponseSchema: GenMessage<GetMSPDefaultMetaResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 41);

/**
 * @generated from message blueapi.admin.v1.UpdateMSPDefaultMetaRequest
 */
export type UpdateMSPDefaultMetaRequest = Message<"blueapi.admin.v1.UpdateMSPDefaultMetaRequest"> & {
  /**
   * @generated from field: string mspId = 1;
   */
  mspId: string;

  /**
   * @generated from field: repeated string defaultMeta = 2;
   */
  defaultMeta: string[];
};

/**
 * Describes the message blueapi.admin.v1.UpdateMSPDefaultMetaRequest.
 * Use `create(UpdateMSPDefaultMetaRequestSchema)` to create a new message.
 */
export const UpdateMSPDefaultMetaRequestSchema: GenMessage<UpdateMSPDefaultMetaRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_admin, 42);

/**
 * Admin service definition.
 *
 * @generated from service blueapi.admin.v1.Admin
 */
export const Admin: GenService<{
  /**
   * Lists all account groups.
   *
   * @generated from rpc blueapi.admin.v1.Admin.ListAccountGroups
   */
  listAccountGroups: {
    methodKind: "server_streaming";
    input: typeof ListAccountGroupsRequestSchema;
    output: typeof ListAccountGroupsResponseSchema;
  },
  /**
   * Gets an account group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetAccountGroup
   */
  getAccountGroup: {
    methodKind: "unary";
    input: typeof GetAccountGroupRequestSchema;
    output: typeof GetAccountGroupResponseSchema;
  },
  /**
   * Gets a CloudFormation launch URL for enabling the default cross-account access to your account's cost information based on type. See comments on the type for more information on what each template does.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetDefaultCostAccessTemplateUrl
   */
  getDefaultCostAccessTemplateUrl: {
    methodKind: "unary";
    input: typeof GetDefaultCostAccessTemplateUrlRequestSchema;
    output: typeof GetDefaultCostAccessTemplateUrlResponseSchema;
  },
  /**
   * Lists the default cross-account access role(s) attached to accounts under caller.
   *
   * @generated from rpc blueapi.admin.v1.Admin.ListDefaultCostAccess
   */
  listDefaultCostAccess: {
    methodKind: "server_streaming";
    input: typeof ListDefaultCostAccessRequestSchema;
    output: typeof DefaultCostAccessSchema;
  },
  /**
   * Gets the current default cross-account role attached to the input target.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetDefaultCostAccess
   */
  getDefaultCostAccess: {
    methodKind: "unary";
    input: typeof GetDefaultCostAccessRequestSchema;
    output: typeof DefaultCostAccessSchema;
  },
  /**
   * Starts validation of a default cross-account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.
   *
   * @generated from rpc blueapi.admin.v1.Admin.CreateDefaultCostAccess
   */
  createDefaultCostAccess: {
    methodKind: "unary";
    input: typeof CreateDefaultCostAccessRequestSchema;
    output: typeof DefaultCostAccessSchema;
  },
  /**
   * Starts an update to an existing default cross-account access CloudFormation stack for template changes, if any. Only call this API if the status of your default cross-account access is 'outdated'.
   *
   * @generated from rpc blueapi.admin.v1.Admin.UpdateDefaultCostAccess
   */
  updateDefaultCostAccess: {
    methodKind: "unary";
    input: typeof UpdateDefaultCostAccessRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the current default cross-account access role attached to this target account. This does not delete the CloudFormation deployment in your account.
   *
   * @generated from rpc blueapi.admin.v1.Admin.DeleteDefaultCostAccess
   */
  deleteDefaultCostAccess: {
    methodKind: "unary";
    input: typeof DeleteDefaultCostAccessRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Gets a CloudFormation launch URL for enabling CloudWatch metrics streaming on a target account.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetCloudWatchMetricsStreamTemplateUrl
   */
  getCloudWatchMetricsStreamTemplateUrl: {
    methodKind: "unary";
    input: typeof GetCloudWatchMetricsStreamTemplateUrlRequestSchema;
    output: typeof GetCloudWatchMetricsStreamTemplateUrlResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Starts validation of a CloudWatch Metrics streaming stack deployment.
   *
   * @generated from rpc blueapi.admin.v1.Admin.CreateCloudWatchMetricsStream
   */
  createCloudWatchMetricsStream: {
    methodKind: "unary";
    input: typeof CreateCloudWatchMetricsStreamRequestSchema;
    output: typeof CloudWatchMetricsStreamSchema;
  },
  /**
   * WORK-IN-PROGRESS: Configure AWS Proforma Cost and Usage Report.
   *
   * @generated from rpc blueapi.admin.v1.Admin.CreateProformaCur
   */
  createProformaCur: {
    methodKind: "unary";
    input: typeof CreateProformaCurRequestSchema;
    output: typeof ProformaCurSchema;
  },
  /**
   * Get notification settings for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetNotificationSettings
   */
  getNotificationSettings: {
    methodKind: "unary";
    input: typeof GetNotificationSettingsRequestSchema;
    output: typeof NotificationSettingsSchema;
  },
  /**
   * Creates or updates notification settings for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.SaveNotificationSettings
   */
  saveNotificationSettings: {
    methodKind: "unary";
    input: typeof SaveNotificationSettingsRequestSchema;
    output: typeof NotificationSettingsSchema;
  },
  /**
   * Lists all notification channels for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.ListNotificationChannels
   */
  listNotificationChannels: {
    methodKind: "unary";
    input: typeof ListNotificationChannelsRequestSchema;
    output: typeof ListNotificationChannelsResponseSchema;
  },
  /**
   * Gets notification channel for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetNotificationChannel
   */
  getNotificationChannel: {
    methodKind: "unary";
    input: typeof GetNotificationChannelRequestSchema;
    output: typeof NotificationChannelSchema;
  },
  /**
   * WORK-IN-PROGRESS: Creates notification settings for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.CreateNotificationChannel
   */
  createNotificationChannel: {
    methodKind: "unary";
    input: typeof CreateNotificationChannelRequestSchema;
    output: typeof NotificationChannelSchema;
  },
  /**
   * Creates a default notification channel of type email based on the caller's primary email address.
   *
   * @generated from rpc blueapi.admin.v1.Admin.CreateDefaultNotificationChannel
   */
  createDefaultNotificationChannel: {
    methodKind: "unary";
    input: typeof CreateDefaultNotificationChannelRequestSchema;
    output: typeof NotificationChannelSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates notification settings for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.UpdateNotificationChannel
   */
  updateNotificationChannel: {
    methodKind: "unary";
    input: typeof UpdateNotificationChannelRequestSchema;
    output: typeof NotificationChannelSchema;
  },
  /**
   * Deletes notification settings for login user's organization or group.
   *
   * @generated from rpc blueapi.admin.v1.Admin.DeleteNotificationChannel
   */
  deleteNotificationChannel: {
    methodKind: "unary";
    input: typeof DeleteNotificationChannelRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: List all notification for login user's organization.
   *
   * @generated from rpc blueapi.admin.v1.Admin.ListNotifications
   */
  listNotifications: {
    methodKind: "unary";
    input: typeof ListNotificationsRequestSchema;
    output: typeof ListNotificationsResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Get notifications for login user's organization.
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetNotification
   */
  getNotification: {
    methodKind: "unary";
    input: typeof GetNotificationRequestSchema;
    output: typeof NotificationSchema;
  },
  /**
   * WORK-IN-PROGRESS: Creates notification for login user's organization.
   *
   * @generated from rpc blueapi.admin.v1.Admin.CreateNotification
   */
  createNotification: {
    methodKind: "unary";
    input: typeof CreateNotificationRequestSchema;
    output: typeof NotificationSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates notification for login user's organization.
   *
   * @generated from rpc blueapi.admin.v1.Admin.UpdateNotification
   */
  updateNotification: {
    methodKind: "unary";
    input: typeof UpdateNotificationRequestSchema;
    output: typeof NotificationSchema;
  },
  /**
   * WORK-IN-PROGRESS: Deletes notification for login user's organization.
   *
   * @generated from rpc blueapi.admin.v1.Admin.DeleteNotification
   */
  deleteNotification: {
    methodKind: "unary";
    input: typeof DeleteNotificationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Exports audit logs for login user's organization.
   *
   * @generated from rpc blueapi.admin.v1.Admin.ExportAuditLogs
   */
  exportAuditLogs: {
    methodKind: "unary";
    input: typeof ExportAuditLogsRequestSchema;
    output: typeof AuditExportSchema;
  },
  /**
   * WORK-IN-PROGRESS: Get settings value for wave features management per organization
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetWaveFeatures
   */
  getWaveFeatures: {
    methodKind: "unary";
    input: typeof GetWaveFeaturesRequestSchema;
    output: typeof GetWaveFeaturesResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates the wave feature management default value per organization
   *
   * @generated from rpc blueapi.admin.v1.Admin.UpdateWaveFeatureSetting
   */
  updateWaveFeatureSetting: {
    methodKind: "unary";
    input: typeof UpdateWaveFeatureSettingRequestSchema;
    output: typeof GetWaveFeaturesResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Fetch the default meta saved per organization
   *
   * @generated from rpc blueapi.admin.v1.Admin.GetMSPDefaultMeta
   */
  getMSPDefaultMeta: {
    methodKind: "unary";
    input: typeof GetMSPDefaultMetaRequestSchema;
    output: typeof GetMSPDefaultMetaResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Set the default meta saved per organization
   *
   * @generated from rpc blueapi.admin.v1.Admin.UpdateMSPDefaultMeta
   */
  updateMSPDefaultMeta: {
    methodKind: "unary";
    input: typeof UpdateMSPDefaultMetaRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_admin_v1_admin, 0);

