// @generated by protoc-gen-es v2.7.0
// @generated from file api/aws/recommendation.proto (package blueapi.api.aws, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/aws/recommendation.proto.
 */
export declare const file_api_aws_recommendation: GenFile;

/**
 * @generated from message blueapi.api.aws.AwsRecommendations
 */
export declare type AwsRecommendations = Message<"blueapi.api.aws.AwsRecommendations"> & {
  /**
   * @generated from field: blueapi.api.aws.ReservationRecommendationSummary summary = 1;
   */
  summary?: ReservationRecommendationSummary;

  /**
   * @generated from field: repeated blueapi.api.aws.RiRecommendation riRecommendations = 2;
   */
  riRecommendations: RiRecommendation[];

  /**
   * @generated from field: repeated blueapi.api.aws.SpRecommendation spRecommendations = 3;
   */
  spRecommendations: SpRecommendation[];

  /**
   * @generated from field: repeated blueapi.api.aws.ReservationEstimatedCoverage estimatedCoverage = 4;
   */
  estimatedCoverage: ReservationEstimatedCoverage[];
};

/**
 * Describes the message blueapi.api.aws.AwsRecommendations.
 * Use `create(AwsRecommendationsSchema)` to create a new message.
 */
export declare const AwsRecommendationsSchema: GenMessage<AwsRecommendations>;

/**
 * @generated from message blueapi.api.aws.RiRecommendation
 */
export declare type RiRecommendation = Message<"blueapi.api.aws.RiRecommendation"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string productCode = 2;
   */
  productCode: string;

  /**
   * @generated from field: string location = 3;
   */
  location: string;

  /**
   * @generated from field: string instanceType = 4;
   */
  instanceType: string;

  /**
   * @generated from field: int64 quantity = 5;
   */
  quantity: bigint;

  /**
   * @generated from field: double normalizedUnit = 6;
   */
  normalizedUnit: number;

  /**
   * for amazon ec2 only
   *
   * @generated from field: string operatingSystem = 7;
   */
  operatingSystem: string;

  /**
   * @generated from field: string preInstalledSW = 8;
   */
  preInstalledSW: string;

  /**
   * @generated from field: string tenancy = 9;
   */
  tenancy: string;

  /**
   * for amazon rds only
   *
   * @generated from field: string dbEngine = 10;
   */
  dbEngine: string;

  /**
   * @generated from field: string deploymentOption = 22;
   */
  deploymentOption: string;

  /**
   * @generated from field: double ondemandCost = 11;
   */
  ondemandCost: number;

  /**
   * @generated from field: double ondemandrate = 12;
   */
  ondemandrate: number;

  /**
   * @generated from field: double riRate = 13;
   */
  riRate: number;

  /**
   * @generated from field: double upfrontCost = 14;
   */
  upfrontCost: number;

  /**
   * @generated from field: double discountedCost = 15;
   */
  discountedCost: number;

  /**
   * @generated from field: double monthlyAmortizedCost = 16;
   */
  monthlyAmortizedCost: number;

  /**
   * @generated from field: double monthlyRecurringCost = 17;
   */
  monthlyRecurringCost: number;

  /**
   * @generated from field: double yearlyDiscountedCost = 18;
   */
  yearlyDiscountedCost: number;

  /**
   * @generated from field: double reductionRate = 19;
   */
  reductionRate: number;

  /**
   * @generated from field: double estimatedMonthlySavings = 20;
   */
  estimatedMonthlySavings: number;

  /**
   * @generated from field: double daysBeforeBreakEven = 21;
   */
  daysBeforeBreakEven: number;
};

/**
 * Describes the message blueapi.api.aws.RiRecommendation.
 * Use `create(RiRecommendationSchema)` to create a new message.
 */
export declare const RiRecommendationSchema: GenMessage<RiRecommendation>;

/**
 * @generated from message blueapi.api.aws.SpRecommendation
 */
export declare type SpRecommendation = Message<"blueapi.api.aws.SpRecommendation"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string spProductFamily = 2;
   */
  spProductFamily: string;

  /**
   * @generated from field: string location = 3;
   */
  location: string;

  /**
   * @generated from field: string instanceFamily = 4;
   */
  instanceFamily: string;

  /**
   * @generated from field: double ondemandCost = 5;
   */
  ondemandCost: number;

  /**
   * @generated from field: double commitment = 6;
   */
  commitment: number;

  /**
   * @generated from field: double normalizedUnit = 7;
   */
  normalizedUnit: number;

  /**
   * @generated from field: double discountedCost = 8;
   */
  discountedCost: number;

  /**
   * @generated from field: double monthlyDiscountedCost = 9;
   */
  monthlyDiscountedCost: number;

  /**
   * @generated from field: double yearlyDiscountedCost = 10;
   */
  yearlyDiscountedCost: number;

  /**
   * @generated from field: double estimatedMonthlySavings = 11;
   */
  estimatedMonthlySavings: number;

  /**
   * @generated from field: double reductionRate = 12;
   */
  reductionRate: number;

  /**
   * @generated from field: double daysBeforeBreakEven = 13;
   */
  daysBeforeBreakEven: number;
};

/**
 * Describes the message blueapi.api.aws.SpRecommendation.
 * Use `create(SpRecommendationSchema)` to create a new message.
 */
export declare const SpRecommendationSchema: GenMessage<SpRecommendation>;

/**
 * @generated from message blueapi.api.aws.ReservationRecommendationSummary
 */
export declare type ReservationRecommendationSummary = Message<"blueapi.api.aws.ReservationRecommendationSummary"> & {
  /**
   * @generated from field: double totalMonthlyOnDemandCost = 1;
   */
  totalMonthlyOnDemandCost: number;

  /**
   * @generated from field: double totalEstimatedMonthlySavings = 2;
   */
  totalEstimatedMonthlySavings: number;

  /**
   * @generated from field: double totalMonthlyDiscountedCost = 3;
   */
  totalMonthlyDiscountedCost: number;

  /**
   * @generated from field: double reductionRate = 4;
   */
  reductionRate: number;

  /**
   * @generated from field: double totalUpfrontCost = 5;
   */
  totalUpfrontCost: number;

  /**
   * @generated from field: double totalRecurringMonthlyCost = 6;
   */
  totalRecurringMonthlyCost: number;
};

/**
 * Describes the message blueapi.api.aws.ReservationRecommendationSummary.
 * Use `create(ReservationRecommendationSummarySchema)` to create a new message.
 */
export declare const ReservationRecommendationSummarySchema: GenMessage<ReservationRecommendationSummary>;

/**
 * @generated from message blueapi.api.aws.ReservationEstimatedCoverage
 */
export declare type ReservationEstimatedCoverage = Message<"blueapi.api.aws.ReservationEstimatedCoverage"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string productCode = 2;
   */
  productCode: string;

  /**
   * @generated from field: string instanceFamily = 3;
   */
  instanceFamily: string;

  /**
   * @generated from field: double riUsageCoverage = 4;
   */
  riUsageCoverage: number;

  /**
   * @generated from field: double ec2SpUsageCoverage = 5;
   */
  ec2SpUsageCoverage: number;

  /**
   * @generated from field: double computeSpOnDemandCost = 6;
   */
  computeSpOnDemandCost: number;

  /**
   * @generated from field: double computeSpDiscountedCost = 7;
   */
  computeSpDiscountedCost: number;
};

/**
 * Describes the message blueapi.api.aws.ReservationEstimatedCoverage.
 * Use `create(ReservationEstimatedCoverageSchema)` to create a new message.
 */
export declare const ReservationEstimatedCoverageSchema: GenMessage<ReservationEstimatedCoverage>;

