// @generated by protoc-gen-es v2.7.0
// @generated from file api/azure/cost.proto (package blueapi.api.azure, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/azure/cost.proto.
 */
export declare const file_api_azure_cost: GenFile;

/**
 * @generated from message blueapi.api.azure.Cost
 */
export declare type Cost = Message<"blueapi.api.azure.Cost"> & {
  /**
   * The account being queried.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * The group id the account is associated with during the query.
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`.
   *
   * @generated from field: string date = 3;
   */
  date: string;

  /**
   * The service name, such as `Software License`, `Cognosys`, `SendGrid`, `New-Commerce ERP Software License`, etc.
   *
   * @generated from field: string serviceName = 4;
   */
  serviceName: string;

  /**
   * The product code for an Azure service, such as `Dsv4 Series Windows VM`, `CentOS 7.6`, etc.
   *
   * @generated from field: string productName = 5;
   */
  productName: string;

  /**
   * The region of lineitem, if applicable.
   *
   * @generated from field: string region = 6;
   */
  region: string;

  /**
   * The charge type of lineitem, if applicable. Such as `New`, `CycleCharge`, `Prorate fees when cancel`, etc.
   *
   * @generated from field: string chargeType = 7;
   */
  chargeType: string;

  /**
   * The description of lineitem, if applicable.
   *
   * @generated from field: string description = 8;
   */
  description: string;

  /**
   * The billable quantity of lineitem, if applicable.
   *
   * @generated from field: double billableQuantity = 9;
   */
  billableQuantity: number;

  /**
   * The effective unit price of lineitem, if applicable.
   *
   * @generated from field: double effectiveUnitPrice = 10;
   */
  effectiveUnitPrice: number;

  /**
   * The true cost (calculated) for this lineitem.
   *
   * @generated from field: double cost = 11;
   */
  cost: number;

  /**
   * The base currency for `cost`.
   *
   * @generated from field: string baseCurrency = 12;
   */
  baseCurrency: string;

  /**
   * The exchange rate used to convert `baseCurrency` to `targetCurrency`.
   *
   * @generated from field: double exchangeRate = 13;
   */
  exchangeRate: number;

  /**
   * Converted `cost`.
   *
   * @generated from field: double targetCost = 14;
   */
  targetCost: number;

  /**
   * The currency set by `toCurrency`.
   *
   * @generated from field: string targetCurrency = 15;
   */
  targetCurrency: string;

  /**
   * The time interval of lineitem, if applicable. Format is `yyyy-MM-ddThh:MM:ssZ/yyyy-mm-ddTHH:mm:ssZ` (for example 2020-09-16T00:00:00Z/2021-09-24T00:00:00Z).
   *
   * @generated from field: string timeInterval = 16;
   */
  timeInterval: string;

  /**
   * The billing type of lineitem, if applicable. Such as `MARKETPLACE`, `UPFRONT`, `Refund`, `Credit` and `OTHERS`.
   *
   * @generated from field: string billingType = 17;
   */
  billingType: string;

  /**
   * The alternate ID of lineitem, if applicable.
   *
   * @generated from field: string alternateId = 18;
   */
  alternateId: string;

  /**
   * The domain name of lineitem, if applicable.
   *
   * @generated from field: string domainName = 19;
   */
  domainName: string;

  /**
   * The operation of lineitem, if applicable. Such as `Cool LRS Write Operations`, `Cool LRS Data Write`, `Standard Data Transfer Out`, etc.
   *
   * @generated from field: string operation = 20;
   */
  operation: string;

  /**
   * The usage type of lineitem, if applicable. Such as `Standard HDD Managed Disks`, `Tables`, `Blob Storage`, etc.
   *
   * @generated from field: string usageType = 21;
   */
  usageType: string;

  /**
   * The instance type of lineitem, if applicable. Such as `Gateway`, `Standard_B2s`, `Standard_D4s_v3`, etc.
   *
   * @generated from field: string instanceType = 22;
   */
  instanceType: string;

  /**
   * The category of lineitem, if applicable. Such as `Software License`, `Marketplace`, `RI`, `Other`, etc.
   *
   * @generated from field: string category = 23;
   */
  category: string;

  /**
   * The subscription id.
   *
   * @generated from field: string subscriptionId = 24;
   */
  subscriptionId: string;

  /**
   * The entitlement id.
   *
   * @generated from field: string entitlementId = 25;
   */
  entitlementId: string;
};

/**
 * Describes the message blueapi.api.azure.Cost.
 * Use `create(CostSchema)` to create a new message.
 */
export declare const CostSchema: GenMessage<Cost>;

/**
 * @generated from message blueapi.api.azure.CostAttribute
 */
export declare type CostAttribute = Message<"blueapi.api.azure.CostAttribute"> & {
  /**
   * @generated from field: string customerId = 1;
   */
  customerId: string;

  /**
   * @generated from field: string subscriptionId = 2;
   */
  subscriptionId: string;

  /**
   * @generated from field: string entitlementId = 3;
   */
  entitlementId: string;

  /**
   * @generated from field: string groupId = 4;
   */
  groupId: string;

  /**
   * @generated from field: string productId = 5;
   */
  productId: string;

  /**
   * @generated from field: string productName = 6;
   */
  productName: string;

  /**
   * @generated from field: string skuId = 7;
   */
  skuId: string;

  /**
   * @generated from field: string skuName = 8;
   */
  skuName: string;

  /**
   * @generated from field: string description = 9;
   */
  description: string;

  /**
   * @generated from field: string category = 10;
   */
  category: string;

  /**
   * @generated from field: string domainName = 11;
   */
  domainName: string;
};

/**
 * Describes the message blueapi.api.azure.CostAttribute.
 * Use `create(CostAttributeSchema)` to create a new message.
 */
export declare const CostAttributeSchema: GenMessage<CostAttribute>;

