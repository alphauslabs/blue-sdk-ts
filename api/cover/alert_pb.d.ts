// @generated by protoc-gen-es v2.7.0
// @generated from file api/cover/alert.proto (package blueapi.api.cover, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/cover/alert.proto.
 */
export declare const file_api_cover_alert: GenFile;

/**
 * @generated from message blueapi.api.cover.AlertData
 */
export declare type AlertData = Message<"blueapi.api.cover.AlertData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string granularity = 3;
   */
  granularity: string;

  /**
   * @generated from field: repeated blueapi.api.cover.AlertCostGroup costGroups = 4;
   */
  costGroups: AlertCostGroup[];

  /**
   * @generated from field: blueapi.api.cover.AlertChannels channels = 5;
   */
  channels?: AlertChannels;

  /**
   * @generated from field: string createdBy = 6;
   */
  createdBy: string;

  /**
   * @generated from field: string createdAt = 7;
   */
  createdAt: string;

  /**
   * @generated from field: string updatedAt = 8;
   */
  updatedAt: string;

  /**
   * @generated from field: float fixedAmount = 9;
   */
  fixedAmount: number;

  /**
   * @generated from field: float percentage = 10;
   */
  percentage: number;
};

/**
 * Describes the message blueapi.api.cover.AlertData.
 * Use `create(AlertDataSchema)` to create a new message.
 */
export declare const AlertDataSchema: GenMessage<AlertData>;

/**
 * @generated from message blueapi.api.cover.ChannelData
 */
export declare type ChannelData = Message<"blueapi.api.cover.ChannelData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * actual email value of channel name in slack or ms teams
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * email, slack, msteams
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * @generated from field: string webhookUrl = 4;
   */
  webhookUrl: string;
};

/**
 * Describes the message blueapi.api.cover.ChannelData.
 * Use `create(ChannelDataSchema)` to create a new message.
 */
export declare const ChannelDataSchema: GenMessage<ChannelData>;

/**
 * @generated from message blueapi.api.cover.AlertChannels
 */
export declare type AlertChannels = Message<"blueapi.api.cover.AlertChannels"> & {
  /**
   * @generated from field: repeated blueapi.api.cover.AlertChannel email = 1;
   */
  email: AlertChannel[];

  /**
   * @generated from field: repeated blueapi.api.cover.AlertChannel slack = 2;
   */
  slack: AlertChannel[];

  /**
   * @generated from field: repeated blueapi.api.cover.AlertChannel msteams = 3;
   */
  msteams: AlertChannel[];
};

/**
 * Describes the message blueapi.api.cover.AlertChannels.
 * Use `create(AlertChannelsSchema)` to create a new message.
 */
export declare const AlertChannelsSchema: GenMessage<AlertChannels>;

/**
 * @generated from message blueapi.api.cover.AlertChannel
 */
export declare type AlertChannel = Message<"blueapi.api.cover.AlertChannel"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message blueapi.api.cover.AlertChannel.
 * Use `create(AlertChannelSchema)` to create a new message.
 */
export declare const AlertChannelSchema: GenMessage<AlertChannel>;

/**
 * @generated from message blueapi.api.cover.AlertCostGroup
 */
export declare type AlertCostGroup = Message<"blueapi.api.cover.AlertCostGroup"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message blueapi.api.cover.AlertCostGroup.
 * Use `create(AlertCostGroupSchema)` to create a new message.
 */
export declare const AlertCostGroupSchema: GenMessage<AlertCostGroup>;

