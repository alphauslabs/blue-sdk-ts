// @generated by protoc-gen-es v2.7.0
// @generated from file api/cover/asset.proto (package blueapi.api.cover, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/cover/asset.proto.
 */
export declare const file_api_cover_asset: GenFile;

/**
 * @generated from message blueapi.api.cover.Asset
 */
export declare type Asset = Message<"blueapi.api.cover.Asset"> & {
  /**
   * Possible values: `account`, `subscription` or `project`
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: map<string, string> attributes = 2;
   */
  attributes: { [key: string]: string };
};

/**
 * Describes the message blueapi.api.cover.Asset.
 * Use `create(AssetSchema)` to create a new message.
 */
export declare const AssetSchema: GenMessage<Asset>;

/**
 * @generated from message blueapi.api.cover.EC2Instance
 */
export declare type EC2Instance = Message<"blueapi.api.cover.EC2Instance"> & {
  /**
   * The ID of the Capacity Reservation.
   *
   * @generated from field: string capacityReservationId = 1;
   */
  capacityReservationId: string;

  /**
   * Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
   * provides dedicated throughput to Amazon EBS and an optimized configuration
   * stack to provide optimal I/O performance. This optimization isn't available
   * with all instance types. Additional usage charges apply when using an EBS
   * Optimized instance.
   *
   * @generated from field: bool ebsOptimized = 2;
   */
  ebsOptimized: boolean;

  /**
   * The ID of the AMI used to launch the instance.
   *
   * @generated from field: string imageId = 3;
   */
  imageId: string;

  /**
   * The ID of the instance.
   *
   * @generated from field: string instanceId = 4;
   */
  instanceId: string;

  /**
   * Indicates whether this is a Spot Instance or a Scheduled Instance.
   *
   * @generated from field: string instanceLifecycle = 5;
   */
  instanceLifecycle: string;

  /**
   * The instance type.
   *
   * @generated from field: string instanceType = 6;
   */
  instanceType: string;

  /**
   * The IPv6 address assigned to the instance.
   *
   * @generated from field: string ipv6Address = 7;
   */
  ipv6Address: string;

  /**
   * The kernel associated with this instance, if applicable.
   *
   * @generated from field: string kernelId = 8;
   */
  kernelId: string;

  /**
   * The name of the key pair, if this instance was launched with an associated key pair.
   *
   * @generated from field: string keyName = 9;
   */
  keyName: string;

  /**
   * The time the instance was launched.
   *
   * @generated from field: string launchTime = 10;
   */
  launchTime: string;

  /**
   * The Amazon Resource Name (ARN) of the Outpost.
   *
   * @generated from field: string outpostArn = 11;
   */
  outpostArn: string;

  /**
   * The value is Windows for Windows instances; otherwise blank.
   *
   * @generated from field: string platform = 12;
   */
  platform: string;

  /**
   * The platform details value for the instance. For more information, see AMI
   * billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html)
   * in the Amazon EC2 User Guide.
   *
   * @generated from field: string platformDetails = 13;
   */
  platformDetails: string;

  /**
   * (IPv4 only) The private DNS hostname name assigned to the instance. This
   * DNS hostname can only be used inside the Amazon EC2 network. This name is
   * not available until the instance enters the running state.
   *
   * [EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private
   * DNS hostnames if you've enabled DNS resolution and DNS hostnames in your
   * VPC. If you are not using the Amazon-provided DNS server in your VPC, your
   * custom domain name servers must resolve the hostname as appropriate.
   *
   * @generated from field: string privateDnsName = 14;
   */
  privateDnsName: string;

  /**
   * The private IPv4 address assigned to the instance.
   *
   * @generated from field: string privateIpAddress = 15;
   */
  privateIpAddress: string;

  /**
   * (IPv4 only) The public DNS name assigned to the instance. This name is not
   * available until the instance enters the running state. For EC2-VPC, this
   * name is only available if you've enabled DNS hostnames for your VPC.
   *
   * @generated from field: string publicDnsName = 16;
   */
  publicDnsName: string;

  /**
   * The public IPv4 address, or the Carrier IP address assigned to the instance,
   * if applicable.
   *
   * A Carrier IP address only applies to an instance launched in a subnet associated
   * with a Wavelength Zone.
   *
   * @generated from field: string publicIpAddress = 17;
   */
  publicIpAddress: string;

  /**
   * The RAM disk associated with this instance, if applicable.
   *
   * @generated from field: string ramdiskId = 18;
   */
  ramdiskId: string;

  /**
   * The device name of the root device volume (for example, /dev/sda1).
   *
   * @generated from field: string rootDeviceName = 19;
   */
  rootDeviceName: string;

  /**
   * The root device type used by the AMI. The AMI can use an EBS volume or an
   * instance store volume.
   *
   * @generated from field: string rootDeviceType = 20;
   */
  rootDeviceType: string;

  /**
   * Indicates whether source/destination checking is enabled.
   *
   * @generated from field: bool sourceDestCheck = 21;
   */
  sourceDestCheck: boolean;

  /**
   * If the request is a Spot Instance request, the ID of the request.
   *
   * @generated from field: string spotInstanceRequestId = 22;
   */
  spotInstanceRequestId: string;

  /**
   * Specifies whether enhanced networking with the Intel 82599 Virtual Function
   * interface is enabled.
   *
   * @generated from field: string sriovNetSupport = 23;
   */
  sriovNetSupport: string;

  /**
   * The current state of the instance.
   *
   * @generated from field: string state = 24;
   */
  state: string;

  /**
   * [EC2-VPC] The ID of the subnet in which the instance is running.
   *
   * @generated from field: string subnetId = 25;
   */
  subnetId: string;

  /**
   * Any tags assigned to the instance.
   *
   * @generated from field: repeated blueapi.api.cover.Tag tags = 26;
   */
  tags: Tag[];

  /**
   * The usage operation value for the instance. For more information, see AMI
   * billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html)
   * in the Amazon EC2 User Guide.
   *
   * @generated from field: string usageOperation = 27;
   */
  usageOperation: string;

  /**
   * The virtualization type of the instance.
   *
   * @generated from field: string virtualizationType = 28;
   */
  virtualizationType: string;

  /**
   * [EC2-VPC] The ID of the VPC in which the instance is running.
   *
   * @generated from field: string vpcId = 29;
   */
  vpcId: string;

  /**
   * Format: `yyyy-mm`
   *
   * @generated from field: string date = 30;
   */
  date: string;
};

/**
 * Describes the message blueapi.api.cover.EC2Instance.
 * Use `create(EC2InstanceSchema)` to create a new message.
 */
export declare const EC2InstanceSchema: GenMessage<EC2Instance>;

/**
 * @generated from message blueapi.api.cover.Tag
 */
export declare type Tag = Message<"blueapi.api.cover.Tag"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message blueapi.api.cover.Tag.
 * Use `create(TagSchema)` to create a new message.
 */
export declare const TagSchema: GenMessage<Tag>;

