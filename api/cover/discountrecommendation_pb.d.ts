// @generated by protoc-gen-es v2.7.0
// @generated from file api/cover/discountrecommendation.proto (package blueapi.api.cover, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/cover/discountrecommendation.proto.
 */
export declare const file_api_cover_discountrecommendation: GenFile;

/**
 * @generated from message blueapi.api.cover.AwsInputs
 */
export declare type AwsInputs = Message<"blueapi.api.cover.AwsInputs"> & {
  /**
   * Supported values are the following: ('STANDARD', 'CONVERTIBLE') -> for RI only
   *
   * @generated from field: string offeringClass = 1;
   */
  offeringClass: string;

  /**
   * Supported values are the following: ('ALL_UPFRONT', 'PARTIAL_UPFRONT', 'NO_UPFRONT')
   *
   * @generated from field: string paymentOption = 2;
   */
  paymentOption: string;

  /**
   * Supported values are the following:('ONE_YEAR', 'THREE_YEARS')
   *
   * @generated from field: string termInYears = 3;
   */
  termInYears: string;

  /**
   * Supported values are the following:('SEVEN_DAYS', 'THIRTY_DAYS', 'SIXTY_DAYS')
   *
   * @generated from field: string basedOnThePast = 4;
   */
  basedOnThePast: string;
};

/**
 * Describes the message blueapi.api.cover.AwsInputs.
 * Use `create(AwsInputsSchema)` to create a new message.
 */
export declare const AwsInputsSchema: GenMessage<AwsInputs>;

/**
 * @generated from message blueapi.api.cover.GcpInputs
 */
export declare type GcpInputs = Message<"blueapi.api.cover.GcpInputs"> & {
};

/**
 * Describes the message blueapi.api.cover.GcpInputs.
 * Use `create(GcpInputsSchema)` to create a new message.
 */
export declare const GcpInputsSchema: GenMessage<GcpInputs>;

/**
 * @generated from message blueapi.api.cover.AzureInputs
 */
export declare type AzureInputs = Message<"blueapi.api.cover.AzureInputs"> & {
};

/**
 * Describes the message blueapi.api.cover.AzureInputs.
 * Use `create(AzureInputsSchema)` to create a new message.
 */
export declare const AzureInputsSchema: GenMessage<AzureInputs>;

/**
 * @generated from message blueapi.api.cover.EC2Options
 */
export declare type EC2Options = Message<"blueapi.api.cover.EC2Options"> & {
  /**
   * @generated from field: string instanceType = 1;
   */
  instanceType: string;

  /**
   * @generated from field: string tenancy = 2;
   */
  tenancy: string;

  /**
   * @generated from field: string family = 3;
   */
  family: string;

  /**
   * @generated from field: string platform = 4;
   */
  platform: string;
};

/**
 * Describes the message blueapi.api.cover.EC2Options.
 * Use `create(EC2OptionsSchema)` to create a new message.
 */
export declare const EC2OptionsSchema: GenMessage<EC2Options>;

/**
 * @generated from message blueapi.api.cover.ElasticCacheOptions
 */
export declare type ElasticCacheOptions = Message<"blueapi.api.cover.ElasticCacheOptions"> & {
  /**
   * @generated from field: string family = 1;
   */
  family: string;

  /**
   * @generated from field: string nodeType = 2;
   */
  nodeType: string;

  /**
   * @generated from field: string productDescription = 3;
   */
  productDescription: string;
};

/**
 * Describes the message blueapi.api.cover.ElasticCacheOptions.
 * Use `create(ElasticCacheOptionsSchema)` to create a new message.
 */
export declare const ElasticCacheOptionsSchema: GenMessage<ElasticCacheOptions>;

/**
 * @generated from message blueapi.api.cover.ESOptions
 */
export declare type ESOptions = Message<"blueapi.api.cover.ESOptions"> & {
  /**
   * @generated from field: string instanceClass = 1;
   */
  instanceClass: string;

  /**
   * @generated from field: string instanceSize = 2;
   */
  instanceSize: string;
};

/**
 * Describes the message blueapi.api.cover.ESOptions.
 * Use `create(ESOptionsSchema)` to create a new message.
 */
export declare const ESOptionsSchema: GenMessage<ESOptions>;

/**
 * @generated from message blueapi.api.cover.RDSOptions
 */
export declare type RDSOptions = Message<"blueapi.api.cover.RDSOptions"> & {
  /**
   * @generated from field: string dbEdition = 1;
   */
  dbEdition: string;

  /**
   * @generated from field: string dbEngine = 2;
   */
  dbEngine: string;

  /**
   * @generated from field: string deploymentOptions = 3;
   */
  deploymentOptions: string;

  /**
   * @generated from field: string family = 4;
   */
  family: string;

  /**
   * @generated from field: string instanceType = 5;
   */
  instanceType: string;

  /**
   * @generated from field: string licenseModel = 6;
   */
  licenseModel: string;
};

/**
 * Describes the message blueapi.api.cover.RDSOptions.
 * Use `create(RDSOptionsSchema)` to create a new message.
 */
export declare const RDSOptionsSchema: GenMessage<RDSOptions>;

/**
 * @generated from message blueapi.api.cover.RedshiftOptions
 */
export declare type RedshiftOptions = Message<"blueapi.api.cover.RedshiftOptions"> & {
  /**
   * @generated from field: string family = 1;
   */
  family: string;

  /**
   * @generated from field: string nodeType = 2;
   */
  nodeType: string;
};

/**
 * Describes the message blueapi.api.cover.RedshiftOptions.
 * Use `create(RedshiftOptionsSchema)` to create a new message.
 */
export declare const RedshiftOptionsSchema: GenMessage<RedshiftOptions>;

/**
 * @generated from message blueapi.api.cover.RiRecommendationDetails
 */
export declare type RiRecommendationDetails = Message<"blueapi.api.cover.RiRecommendationDetails"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string recommendedNumberOfInstanceToPurchase = 2;
   */
  recommendedNumberOfInstanceToPurchase: string;

  /**
   * @generated from field: string currencyCode = 3;
   */
  currencyCode: string;

  /**
   * @generated from field: blueapi.api.cover.EC2Options ec2Options = 4;
   */
  ec2Options?: EC2Options;

  /**
   * @generated from field: blueapi.api.cover.ElasticCacheOptions elasticCacheOptions = 5;
   */
  elasticCacheOptions?: ElasticCacheOptions;

  /**
   * @generated from field: blueapi.api.cover.ESOptions esOptions = 6;
   */
  esOptions?: ESOptions;

  /**
   * @generated from field: blueapi.api.cover.RDSOptions rdsOptions = 7;
   */
  rdsOptions?: RDSOptions;

  /**
   * @generated from field: blueapi.api.cover.RedshiftOptions redshiftOptions = 8;
   */
  redshiftOptions?: RedshiftOptions;

  /**
   * @generated from field: string region = 9;
   */
  region: string;

  /**
   * @generated from field: bool sizeFlexEligible = 10;
   */
  sizeFlexEligible: boolean;

  /**
   * @generated from field: bool currentGeneration = 11;
   */
  currentGeneration: boolean;

  /**
   * @generated from field: double upfrontCost = 12;
   */
  upfrontCost: number;

  /**
   * @generated from field: double estimatedMonthlySavings = 13;
   */
  estimatedMonthlySavings: number;
};

/**
 * Describes the message blueapi.api.cover.RiRecommendationDetails.
 * Use `create(RiRecommendationDetailsSchema)` to create a new message.
 */
export declare const RiRecommendationDetailsSchema: GenMessage<RiRecommendationDetails>;

/**
 * @generated from message blueapi.api.cover.RiSummary
 */
export declare type RiSummary = Message<"blueapi.api.cover.RiSummary"> & {
  /**
   * @generated from field: int64 totalPurchaseRecommendations = 1;
   */
  totalPurchaseRecommendations: bigint;

  /**
   * @generated from field: double estimatedMonthlySavings = 2;
   */
  estimatedMonthlySavings: number;

  /**
   * @generated from field: double estimatedSavingsVSOnDemandRates = 3;
   */
  estimatedSavingsVSOnDemandRates: number;
};

/**
 * Describes the message blueapi.api.cover.RiSummary.
 * Use `create(RiSummarySchema)` to create a new message.
 */
export declare const RiSummarySchema: GenMessage<RiSummary>;

/**
 * @generated from message blueapi.api.cover.RiRecommendationResults
 */
export declare type RiRecommendationResults = Message<"blueapi.api.cover.RiRecommendationResults"> & {
  /**
   * @generated from field: blueapi.api.cover.RiSummary riSummary = 1;
   */
  riSummary?: RiSummary;

  /**
   * @generated from field: repeated blueapi.api.cover.RiRecommendationDetails riRecommendationDetails = 2;
   */
  riRecommendationDetails: RiRecommendationDetails[];
};

/**
 * Describes the message blueapi.api.cover.RiRecommendationResults.
 * Use `create(RiRecommendationResultsSchema)` to create a new message.
 */
export declare const RiRecommendationResultsSchema: GenMessage<RiRecommendationResults>;

/**
 * @generated from message blueapi.api.cover.SpRecommendationDetails
 */
export declare type SpRecommendationDetails = Message<"blueapi.api.cover.SpRecommendationDetails"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string currencyCode = 2;
   */
  currencyCode: string;

  /**
   * @generated from field: double hourlyCommitmentToPurchase = 3;
   */
  hourlyCommitmentToPurchase: number;

  /**
   * @generated from field: double estimatedMonthlySavingsAmount = 4;
   */
  estimatedMonthlySavingsAmount: number;

  /**
   * @generated from field: double estimatedSavingsPercentage = 5;
   */
  estimatedSavingsPercentage: number;

  /**
   * @generated from field: double estimatedAverageCoverage = 6;
   */
  estimatedAverageCoverage: number;

  /**
   * @generated from field: double estimatedAverageUtilization = 7;
   */
  estimatedAverageUtilization: number;
};

/**
 * Describes the message blueapi.api.cover.SpRecommendationDetails.
 * Use `create(SpRecommendationDetailsSchema)` to create a new message.
 */
export declare const SpRecommendationDetailsSchema: GenMessage<SpRecommendationDetails>;

/**
 * @generated from message blueapi.api.cover.SpSummary
 */
export declare type SpSummary = Message<"blueapi.api.cover.SpSummary"> & {
  /**
   * @generated from field: double currentOnDemandSpend = 1;
   */
  currentOnDemandSpend: number;

  /**
   * @generated from field: double estimatedMonthlySpend = 2;
   */
  estimatedMonthlySpend: number;

  /**
   * @generated from field: double estimatedMonthlySavings = 3;
   */
  estimatedMonthlySavings: number;

  /**
   * @generated from field: int64 totalRecommendationCount = 4;
   */
  totalRecommendationCount: bigint;
};

/**
 * Describes the message blueapi.api.cover.SpSummary.
 * Use `create(SpSummarySchema)` to create a new message.
 */
export declare const SpSummarySchema: GenMessage<SpSummary>;

/**
 * @generated from message blueapi.api.cover.SpRecommendationResults
 */
export declare type SpRecommendationResults = Message<"blueapi.api.cover.SpRecommendationResults"> & {
  /**
   * @generated from field: blueapi.api.cover.SpSummary spSummary = 1;
   */
  spSummary?: SpSummary;

  /**
   * @generated from field: repeated blueapi.api.cover.SpRecommendationDetails spRecommendationDetails = 2;
   */
  spRecommendationDetails: SpRecommendationDetails[];
};

/**
 * Describes the message blueapi.api.cover.SpRecommendationResults.
 * Use `create(SpRecommendationResultsSchema)` to create a new message.
 */
export declare const SpRecommendationResultsSchema: GenMessage<SpRecommendationResults>;

/**
 * @generated from message blueapi.api.cover.AwsDiscountRecommendations
 */
export declare type AwsDiscountRecommendations = Message<"blueapi.api.cover.AwsDiscountRecommendations"> & {
  /**
   * @generated from field: repeated blueapi.api.cover.RiRecommendationResults riRecommendations = 1;
   */
  riRecommendations: RiRecommendationResults[];

  /**
   * @generated from field: repeated blueapi.api.cover.SpRecommendationResults spRecommendations = 2;
   */
  spRecommendations: SpRecommendationResults[];
};

/**
 * Describes the message blueapi.api.cover.AwsDiscountRecommendations.
 * Use `create(AwsDiscountRecommendationsSchema)` to create a new message.
 */
export declare const AwsDiscountRecommendationsSchema: GenMessage<AwsDiscountRecommendations>;

/**
 * @generated from message blueapi.api.cover.GcpDiscountRecommendations
 */
export declare type GcpDiscountRecommendations = Message<"blueapi.api.cover.GcpDiscountRecommendations"> & {
};

/**
 * Describes the message blueapi.api.cover.GcpDiscountRecommendations.
 * Use `create(GcpDiscountRecommendationsSchema)` to create a new message.
 */
export declare const GcpDiscountRecommendationsSchema: GenMessage<GcpDiscountRecommendations>;

/**
 * @generated from message blueapi.api.cover.AzureDiscountRecommendations
 */
export declare type AzureDiscountRecommendations = Message<"blueapi.api.cover.AzureDiscountRecommendations"> & {
};

/**
 * Describes the message blueapi.api.cover.AzureDiscountRecommendations.
 * Use `create(AzureDiscountRecommendationsSchema)` to create a new message.
 */
export declare const AzureDiscountRecommendationsSchema: GenMessage<AzureDiscountRecommendations>;

