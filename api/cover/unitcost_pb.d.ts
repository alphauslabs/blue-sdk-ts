// @generated by protoc-gen-es v2.7.0
// @generated from file api/cover/unitcost.proto (package blueapi.api.cover, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { CostGroupAwsOptions, CostGroupAzureCspOptions, CostGroupAzureOptions, CostGroupGcpOptions } from "./costgroup_pb";

/**
 * Describes the file api/cover/unitcost.proto.
 */
export declare const file_api_cover_unitcost: GenFile;

/**
 * @generated from message blueapi.api.cover.UnitCostData
 */
export declare type UnitCostData = Message<"blueapi.api.cover.UnitCostData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string unitName = 2;
   */
  unitName: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: repeated blueapi.api.cover.UnitItem unitItems = 4;
   */
  unitItems: UnitItem[];

  /**
   * @generated from field: repeated string vendors = 5;
   */
  vendors: string[];

  /**
   * @generated from field: repeated blueapi.api.cover.SharedResourcesCombination sharedResources = 6;
   */
  sharedResources: SharedResourcesCombination[];

  /**
   * @generated from field: string createdBy = 7;
   */
  createdBy: string;

  /**
   * @generated from field: string createTime = 8;
   */
  createTime: string;

  /**
   * @generated from field: string lastUpdatedAt = 9;
   */
  lastUpdatedAt: string;
};

/**
 * Describes the message blueapi.api.cover.UnitCostData.
 * Use `create(UnitCostDataSchema)` to create a new message.
 */
export declare const UnitCostDataSchema: GenMessage<UnitCostData>;

/**
 * @generated from message blueapi.api.cover.UnitItem
 */
export declare type UnitItem = Message<"blueapi.api.cover.UnitItem"> & {
  /**
   * @generated from field: string itemName = 1;
   */
  itemName: string;

  /**
   * @generated from field: double distribution = 2;
   */
  distribution: number;

  /**
   * @generated from field: blueapi.api.cover.ResourcesCombinations dedicatedResourcesCombinations = 3;
   */
  dedicatedResourcesCombinations?: ResourcesCombinations;

  /**
   * @generated from field: repeated string vendors = 4;
   */
  vendors: string[];

  /**
   * @generated from field: string createTime = 5;
   */
  createTime: string;

  /**
   * @generated from field: string lastUpdatedAt = 6;
   */
  lastUpdatedAt: string;
};

/**
 * Describes the message blueapi.api.cover.UnitItem.
 * Use `create(UnitItemSchema)` to create a new message.
 */
export declare const UnitItemSchema: GenMessage<UnitItem>;

/**
 * @generated from message blueapi.api.cover.SharedResourcesCombination
 */
export declare type SharedResourcesCombination = Message<"blueapi.api.cover.SharedResourcesCombination"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string combinationName = 2;
   */
  combinationName: string;

  /**
   * @generated from field: blueapi.api.cover.ResourcesCombinations sharedResourcesCombinations = 3;
   */
  sharedResourcesCombinations?: ResourcesCombinations;

  /**
   * List the unit items and their corresponding percentages.
   *
   * @generated from field: map<string, double> distribution = 4;
   */
  distribution: { [key: string]: number };

  /**
   * @generated from field: double allocated = 5;
   */
  allocated: number;

  /**
   * @generated from field: double unallocated = 6;
   */
  unallocated: number;
};

/**
 * Describes the message blueapi.api.cover.SharedResourcesCombination.
 * Use `create(SharedResourcesCombinationSchema)` to create a new message.
 */
export declare const SharedResourcesCombinationSchema: GenMessage<SharedResourcesCombination>;

/**
 * @generated from message blueapi.api.cover.ResourcesCombinations
 */
export declare type ResourcesCombinations = Message<"blueapi.api.cover.ResourcesCombinations"> & {
  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.api.cover.CostGroupAwsOptions awsOptions = 1;
   */
  awsOptions?: CostGroupAwsOptions;

  /**
   * Optional. Valid only for the `azure` vendor. Azure-specific options.
   *
   * @generated from field: blueapi.api.cover.CostGroupAzureOptions azureOptions = 2;
   */
  azureOptions?: CostGroupAzureOptions;

  /**
   * Optional. Valid only for the `gcp` vendor. GCP-specific options.
   *
   * @generated from field: blueapi.api.cover.CostGroupGcpOptions gcpOptions = 3;
   */
  gcpOptions?: CostGroupGcpOptions;

  /**
   * Optional. Valid only for the `azurecsp` vendor. AzureCSP-specific options.
   *
   * @generated from field: blueapi.api.cover.CostGroupAzureCspOptions azurecspOptions = 4;
   */
  azurecspOptions?: CostGroupAzureCspOptions;
};

/**
 * Describes the message blueapi.api.cover.ResourcesCombinations.
 * Use `create(ResourcesCombinationsSchema)` to create a new message.
 */
export declare const ResourcesCombinationsSchema: GenMessage<ResourcesCombinations>;

/**
 * @generated from message blueapi.api.cover.SuggestedUnit
 */
export declare type SuggestedUnit = Message<"blueapi.api.cover.SuggestedUnit"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string vendor = 2;
   */
  vendor: string;

  /**
   * @generated from field: string potentialUnitName = 3;
   */
  potentialUnitName: string;

  /**
   * @generated from field: repeated blueapi.api.cover.PotentialUnitItem potentialUnitItems = 4;
   */
  potentialUnitItems: PotentialUnitItem[];
};

/**
 * Describes the message blueapi.api.cover.SuggestedUnit.
 * Use `create(SuggestedUnitSchema)` to create a new message.
 */
export declare const SuggestedUnitSchema: GenMessage<SuggestedUnit>;

/**
 * @generated from message blueapi.api.cover.PotentialUnitItem
 */
export declare type PotentialUnitItem = Message<"blueapi.api.cover.PotentialUnitItem"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string itemName = 2;
   */
  itemName: string;

  /**
   * @generated from field: string vendor = 3;
   */
  vendor: string;

  /**
   * @generated from field: map<string, string> tag = 4;
   */
  tag: { [key: string]: string };
};

/**
 * Describes the message blueapi.api.cover.PotentialUnitItem.
 * Use `create(PotentialUnitItemSchema)` to create a new message.
 */
export declare const PotentialUnitItemSchema: GenMessage<PotentialUnitItem>;

/**
 * @generated from message blueapi.api.cover.UnitMetric
 */
export declare type UnitMetric = Message<"blueapi.api.cover.UnitMetric"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * @generated from field: string metricName = 3;
   */
  metricName: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string aggregationMethod = 5;
   */
  aggregationMethod: string;

  /**
   * @generated from field: string dataSource = 6;
   */
  dataSource: string;

  /**
   * @generated from field: string status = 7;
   */
  status: string;

  /**
   * @generated from field: repeated string costgroupId = 8;
   */
  costgroupId: string[];

  /**
   * @generated from field: blueapi.api.cover.SourceInfo sourceInfo = 9;
   */
  sourceInfo?: SourceInfo;

  /**
   * @generated from field: string createdBy = 10;
   */
  createdBy: string;

  /**
   * @generated from field: string createTime = 11;
   */
  createTime: string;

  /**
   * @generated from field: string lastUpdatedAt = 12;
   */
  lastUpdatedAt: string;
};

/**
 * Describes the message blueapi.api.cover.UnitMetric.
 * Use `create(UnitMetricSchema)` to create a new message.
 */
export declare const UnitMetricSchema: GenMessage<UnitMetric>;

/**
 * @generated from message blueapi.api.cover.SourceInfo
 */
export declare type SourceInfo = Message<"blueapi.api.cover.SourceInfo"> & {
  /**
   * @generated from field: string dataSource = 1;
   */
  dataSource: string;

  /**
   * @generated from oneof blueapi.api.cover.SourceInfo.source
   */
  source: {
    /**
     * @generated from field: blueapi.api.cover.CsvInfo csv = 2;
     */
    value: CsvInfo;
    case: "csv";
  } | {
    /**
     * @generated from field: blueapi.api.cover.GoogleSheetInfo googleSheet = 3;
     */
    value: GoogleSheetInfo;
    case: "googleSheet";
  } | {
    /**
     * @generated from field: blueapi.api.cover.CloudWatchInfo cloudWatch = 4;
     */
    value: CloudWatchInfo;
    case: "cloudWatch";
  } | {
    /**
     * @generated from field: blueapi.api.cover.TelemetryInfo telemetry = 5;
     */
    value: TelemetryInfo;
    case: "telemetry";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message blueapi.api.cover.SourceInfo.
 * Use `create(SourceInfoSchema)` to create a new message.
 */
export declare const SourceInfoSchema: GenMessage<SourceInfo>;

/**
 * @generated from message blueapi.api.cover.CsvInfo
 */
export declare type CsvInfo = Message<"blueapi.api.cover.CsvInfo"> & {
  /**
   * The S3 key of the CSV file.
   * For example, "path/to/file.csv"
   *
   * @generated from field: string s3key = 1;
   */
  s3key: string;

  /**
   * The URL of the CSV file.
   * For example, "https://s3.amazonaws.com/bucket/path/to/file.csv"
   *
   * @generated from field: string s3url = 2;
   */
  s3url: string;

  /**
   * @generated from field: blueapi.api.cover.RequiredColumns requiredColumns = 3;
   */
  requiredColumns?: RequiredColumns;
};

/**
 * Describes the message blueapi.api.cover.CsvInfo.
 * Use `create(CsvInfoSchema)` to create a new message.
 */
export declare const CsvInfoSchema: GenMessage<CsvInfo>;

/**
 * @generated from message blueapi.api.cover.GoogleSheetInfo
 */
export declare type GoogleSheetInfo = Message<"blueapi.api.cover.GoogleSheetInfo"> & {
  /**
   * The ID of the Google Sheet.
   * For example, "1BxiMVs0XRA5nFMd29P8v4g"
   *
   * @generated from field: string googleSheetId = 1;
   */
  googleSheetId: string;

  /**
   * The URL of the Google Sheet.
   * For example, "https://docs.google.com/spreadsheets/d/1BxiMVs0XRA5nFMd29P8v4g/edit"
   *
   * @generated from field: string sheetUrl = 2;
   */
  sheetUrl: string;

  /**
   * The name of the sheet within the Google Sheet
   * For example, "Sheet1" 
   *
   * @generated from field: string sheetName = 3;
   */
  sheetName: string;

  /**
   * The range of cells to read from the sheet.
   * For example, "A1:D10" to read cells A1 to D10
   *
   * @generated from field: string sheetRange = 4;
   */
  sheetRange: string;

  /**
   * The required columns in the Google Sheet.
   *
   * @generated from field: blueapi.api.cover.RequiredColumns requiredColumns = 5;
   */
  requiredColumns?: RequiredColumns;
};

/**
 * Describes the message blueapi.api.cover.GoogleSheetInfo.
 * Use `create(GoogleSheetInfoSchema)` to create a new message.
 */
export declare const GoogleSheetInfoSchema: GenMessage<GoogleSheetInfo>;

/**
 * @generated from message blueapi.api.cover.CloudWatchInfo
 */
export declare type CloudWatchInfo = Message<"blueapi.api.cover.CloudWatchInfo"> & {
  /**
   * The AWS region where the CloudWatch metric is located.
   *
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * The account ID of the AWS account where the CloudWatch metric is located
   *
   * @generated from field: string accountId = 2;
   */
  accountId: string;

  /**
   * The namespace of the CloudWatch metric.
   * For example, "AWS/EC2" for EC2 metrics.
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * The name of the CloudWatch metric.
   * For example, "CPUUtilization" for EC2 CPU utilization
   *
   * @generated from field: string metricName = 4;
   */
  metricName: string;

  /**
   * The dimensions of the CloudWatch metric.
   * For example, "InstanceId" for EC2 instance metrics.
   * The dimensions are represented as key-value pairs.
   * For example, {"InstanceId": "i-1234567890abcdef0"} for a specific EC2 instance.
   *
   * @generated from field: map<string, string> dimensions = 5;
   */
  dimensions: { [key: string]: string };

  /**
   * The aggregation method to use for the CloudWatch metric
   *
   * @generated from field: string aggregationMethod = 6;
   */
  aggregationMethod: string;
};

/**
 * Describes the message blueapi.api.cover.CloudWatchInfo.
 * Use `create(CloudWatchInfoSchema)` to create a new message.
 */
export declare const CloudWatchInfoSchema: GenMessage<CloudWatchInfo>;

/**
 * @generated from message blueapi.api.cover.TelemetryInfo
 */
export declare type TelemetryInfo = Message<"blueapi.api.cover.TelemetryInfo"> & {
};

/**
 * Describes the message blueapi.api.cover.TelemetryInfo.
 * Use `create(TelemetryInfoSchema)` to create a new message.
 */
export declare const TelemetryInfoSchema: GenMessage<TelemetryInfo>;

/**
 * @generated from message blueapi.api.cover.RequiredColumns
 */
export declare type RequiredColumns = Message<"blueapi.api.cover.RequiredColumns"> & {
  /**
   * @generated from field: string dateColumn = 1;
   */
  dateColumn: string;

  /**
   * @generated from field: string amountColumn = 2;
   */
  amountColumn: string;
};

/**
 * Describes the message blueapi.api.cover.RequiredColumns.
 * Use `create(RequiredColumnsSchema)` to create a new message.
 */
export declare const RequiredColumnsSchema: GenMessage<RequiredColumns>;

/**
 * @generated from message blueapi.api.cover.RowData
 */
export declare type RowData = Message<"blueapi.api.cover.RowData"> & {
  /**
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };
};

/**
 * Describes the message blueapi.api.cover.RowData.
 * Use `create(RowDataSchema)` to create a new message.
 */
export declare const RowDataSchema: GenMessage<RowData>;

