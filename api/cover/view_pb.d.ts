// @generated by protoc-gen-es v2.7.0
// @generated from file api/cover/view.proto (package blueapi.api.cover, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { MemberUserData } from "./user_pb";

/**
 * Describes the file api/cover/view.proto.
 */
export declare const file_api_cover_view: GenFile;

/**
 * @generated from message blueapi.api.cover.ViewData
 */
export declare type ViewData = Message<"blueapi.api.cover.ViewData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: bool isPrivate = 4;
   */
  isPrivate: boolean;

  /**
   * @generated from field: bool isEditable = 5;
   */
  isEditable: boolean;

  /**
   * @generated from field: string icon = 6;
   */
  icon: string;

  /**
   * @generated from field: blueapi.api.cover.MemberUserData createdBy = 7;
   */
  createdBy?: MemberUserData;

  /**
   * @generated from field: string createdAt = 8;
   */
  createdAt: string;

  /**
   * @generated from field: blueapi.api.cover.MemberUserData updatedBy = 9;
   */
  updatedBy?: MemberUserData;

  /**
   * @generated from field: string updatedAt = 10;
   */
  updatedAt: string;

  /**
   * @generated from field: repeated blueapi.api.cover.WidgetData layout = 11;
   */
  layout: WidgetData[];

  /**
   * @generated from field: blueapi.api.cover.SideMenu sideMenu = 12;
   */
  sideMenu?: SideMenu;

  /**
   * @generated from field: string reportType = 13;
   */
  reportType: string;

  /**
   * @generated from field: string colorTheme = 14;
   */
  colorTheme: string;

  /**
   * @generated from field: string currency = 15;
   */
  currency: string;

  /**
   * @generated from field: string reportPeriod = 16;
   */
  reportPeriod: string;
};

/**
 * Describes the message blueapi.api.cover.ViewData.
 * Use `create(ViewDataSchema)` to create a new message.
 */
export declare const ViewDataSchema: GenMessage<ViewData>;

/**
 * @generated from message blueapi.api.cover.ViewList
 */
export declare type ViewList = Message<"blueapi.api.cover.ViewList"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: bool isPrivate = 4;
   */
  isPrivate: boolean;

  /**
   * @generated from field: bool isEditable = 5;
   */
  isEditable: boolean;

  /**
   * @generated from field: string icon = 6;
   */
  icon: string;

  /**
   * @generated from field: string createdAt = 7;
   */
  createdAt: string;

  /**
   * @generated from field: string updatedAt = 8;
   */
  updatedAt: string;

  /**
   * @generated from field: string colorTheme = 9;
   */
  colorTheme: string;

  /**
   * @generated from field: string reportType = 10;
   */
  reportType: string;

  /**
   * @generated from field: string reportPeriod = 11;
   */
  reportPeriod: string;
};

/**
 * Describes the message blueapi.api.cover.ViewList.
 * Use `create(ViewListSchema)` to create a new message.
 */
export declare const ViewListSchema: GenMessage<ViewList>;

/**
 * @generated from message blueapi.api.cover.ViewLayout
 */
export declare type ViewLayout = Message<"blueapi.api.cover.ViewLayout"> & {
  /**
   * @generated from field: string widgetId = 1;
   */
  widgetId: string;

  /**
   * @generated from field: blueapi.api.cover.WidgetData widgetData = 2;
   */
  widgetData?: WidgetData;
};

/**
 * Describes the message blueapi.api.cover.ViewLayout.
 * Use `create(ViewLayoutSchema)` to create a new message.
 */
export declare const ViewLayoutSchema: GenMessage<ViewLayout>;

/**
 * @generated from message blueapi.api.cover.WidgetData
 */
export declare type WidgetData = Message<"blueapi.api.cover.WidgetData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: double x = 2;
   */
  x: number;

  /**
   * @generated from field: double y = 3;
   */
  y: number;

  /**
   * @generated from field: string componentId = 4;
   */
  componentId: string;

  /**
   * @generated from field: google.protobuf.Struct options = 5;
   */
  options?: JsonObject;

  /**
   * @generated from field: repeated blueapi.api.cover.LayoutRequests requests = 6;
   */
  requests: LayoutRequests[];
};

/**
 * Describes the message blueapi.api.cover.WidgetData.
 * Use `create(WidgetDataSchema)` to create a new message.
 */
export declare const WidgetDataSchema: GenMessage<WidgetData>;

/**
 * @generated from message blueapi.api.cover.SideMenu
 */
export declare type SideMenu = Message<"blueapi.api.cover.SideMenu"> & {
  /**
   * @generated from field: repeated string favorite = 1;
   */
  favorite: string[];

  /**
   * @generated from field: bool isOpenedAdmin = 2;
   */
  isOpenedAdmin: boolean;

  /**
   * @generated from field: bool isOpenedFeatures = 3;
   */
  isOpenedFeatures: boolean;

  /**
   * @generated from field: bool isOpenedCostGroups = 4;
   */
  isOpenedCostGroups: boolean;
};

/**
 * Describes the message blueapi.api.cover.SideMenu.
 * Use `create(SideMenuSchema)` to create a new message.
 */
export declare const SideMenuSchema: GenMessage<SideMenu>;

/**
 * @generated from message blueapi.api.cover.LayoutRequests
 */
export declare type LayoutRequests = Message<"blueapi.api.cover.LayoutRequests"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * @generated from field: google.protobuf.Struct params = 4;
   */
  params?: JsonObject;

  /**
   * @generated from field: string hash = 5;
   */
  hash: string;
};

/**
 * Describes the message blueapi.api.cover.LayoutRequests.
 * Use `create(LayoutRequestsSchema)` to create a new message.
 */
export declare const LayoutRequestsSchema: GenMessage<LayoutRequests>;

/**
 * @generated from message blueapi.api.cover.Favorites
 */
export declare type Favorites = Message<"blueapi.api.cover.Favorites"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: bool isPrivate = 4;
   */
  isPrivate: boolean;

  /**
   * @generated from field: string icon = 5;
   */
  icon: string;

  /**
   * @generated from field: string createdAt = 6;
   */
  createdAt: string;

  /**
   * @generated from field: string updatedAt = 7;
   */
  updatedAt: string;

  /**
   * @generated from field: string colorTheme = 8;
   */
  colorTheme: string;

  /**
   * @generated from field: string reportType = 9;
   */
  reportType: string;

  /**
   * @generated from field: string reportPeriod = 10;
   */
  reportPeriod: string;
};

/**
 * Describes the message blueapi.api.cover.Favorites.
 * Use `create(FavoritesSchema)` to create a new message.
 */
export declare const FavoritesSchema: GenMessage<Favorites>;

/**
 * @generated from message blueapi.api.cover.SideMenuState
 */
export declare type SideMenuState = Message<"blueapi.api.cover.SideMenuState"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: bool value = 2;
   */
  value: boolean;
};

/**
 * Describes the message blueapi.api.cover.SideMenuState.
 * Use `create(SideMenuStateSchema)` to create a new message.
 */
export declare const SideMenuStateSchema: GenMessage<SideMenuState>;

