// @generated by protoc-gen-es v2.7.0
// @generated from file api/forecast.proto (package blueapi.api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/forecast.proto.
 */
export declare const file_api_forecast: GenFile;

/**
 * @generated from message blueapi.api.ForecastData
 */
export declare type ForecastData = Message<"blueapi.api.ForecastData"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string productCategory = 2;
   */
  productCategory: string;

  /**
   * @generated from field: string productCode = 3;
   */
  productCode: string;

  /**
   * daily, monthly
   *
   * @generated from field: string frequency = 4;
   */
  frequency: string;

  /**
   * @generated from field: string date = 5;
   */
  date: string;

  /**
   * @generated from field: double historicalCost = 6;
   */
  historicalCost: number;

  /**
   * @generated from field: double forecastedCost = 7;
   */
  forecastedCost: number;

  /**
   * @generated from field: double upperBound = 8;
   */
  upperBound: number;

  /**
   * @generated from field: double lowerBound = 9;
   */
  lowerBound: number;
};

/**
 * Describes the message blueapi.api.ForecastData.
 * Use `create(ForecastDataSchema)` to create a new message.
 */
export declare const ForecastDataSchema: GenMessage<ForecastData>;

/**
 * @generated from message blueapi.api.AccountGroupForecast
 */
export declare type AccountGroupForecast = Message<"blueapi.api.AccountGroupForecast"> & {
  /**
   * @generated from field: string groupId = 1;
   */
  groupId: string;

  /**
   * @generated from field: repeated blueapi.api.ForecastData data = 2;
   */
  data: ForecastData[];
};

/**
 * Describes the message blueapi.api.AccountGroupForecast.
 * Use `create(AccountGroupForecastSchema)` to create a new message.
 */
export declare const AccountGroupForecastSchema: GenMessage<AccountGroupForecast>;

/**
 * @generated from message blueapi.api.BillingGroupForecast
 */
export declare type BillingGroupForecast = Message<"blueapi.api.BillingGroupForecast"> & {
  /**
   * @generated from field: string billingInternalId = 1;
   */
  billingInternalId: string;

  /**
   * @generated from field: repeated blueapi.api.ForecastData data = 2;
   */
  data: ForecastData[];
};

/**
 * Describes the message blueapi.api.BillingGroupForecast.
 * Use `create(BillingGroupForecastSchema)` to create a new message.
 */
export declare const BillingGroupForecastSchema: GenMessage<BillingGroupForecast>;

/**
 * @generated from message blueapi.api.OrgForecast
 */
export declare type OrgForecast = Message<"blueapi.api.OrgForecast"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: repeated blueapi.api.BillingGroupForecast data = 2;
   */
  data: BillingGroupForecast[];
};

/**
 * Describes the message blueapi.api.OrgForecast.
 * Use `create(OrgForecastSchema)` to create a new message.
 */
export declare const OrgForecastSchema: GenMessage<OrgForecast>;

/**
 * @generated from message blueapi.api.MonthToDateForecastData
 */
export declare type MonthToDateForecastData = Message<"blueapi.api.MonthToDateForecastData"> & {
  /**
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * @generated from field: string productCategory = 2;
   */
  productCategory: string;

  /**
   * @generated from field: string productCode = 3;
   */
  productCode: string;

  /**
   * @generated from field: string date = 4;
   */
  date: string;

  /**
   * @generated from field: double accumulatedCost = 5;
   */
  accumulatedCost: number;

  /**
   * @generated from field: double forecastCost = 6;
   */
  forecastCost: number;

  /**
   * @generated from field: double budget = 7;
   */
  budget: number;
};

/**
 * Describes the message blueapi.api.MonthToDateForecastData.
 * Use `create(MonthToDateForecastDataSchema)` to create a new message.
 */
export declare const MonthToDateForecastDataSchema: GenMessage<MonthToDateForecastData>;

/**
 * @generated from message blueapi.api.BillingGroupMonthToDateForecast
 */
export declare type BillingGroupMonthToDateForecast = Message<"blueapi.api.BillingGroupMonthToDateForecast"> & {
  /**
   * @generated from field: string billingInternalId = 1;
   */
  billingInternalId: string;

  /**
   * @generated from field: repeated blueapi.api.MonthToDateForecastData data = 2;
   */
  data: MonthToDateForecastData[];
};

/**
 * Describes the message blueapi.api.BillingGroupMonthToDateForecast.
 * Use `create(BillingGroupMonthToDateForecastSchema)` to create a new message.
 */
export declare const BillingGroupMonthToDateForecastSchema: GenMessage<BillingGroupMonthToDateForecast>;

/**
 * @generated from message blueapi.api.OrgMonthToDateForecast
 */
export declare type OrgMonthToDateForecast = Message<"blueapi.api.OrgMonthToDateForecast"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: repeated blueapi.api.BillingGroupMonthToDateForecast data = 2;
   */
  data: BillingGroupMonthToDateForecast[];
};

/**
 * Describes the message blueapi.api.OrgMonthToDateForecast.
 * Use `create(OrgMonthToDateForecastSchema)` to create a new message.
 */
export declare const OrgMonthToDateForecastSchema: GenMessage<OrgMonthToDateForecast>;

/**
 * @generated from message blueapi.api.MonthlyCostForecast
 */
export declare type MonthlyCostForecast = Message<"blueapi.api.MonthlyCostForecast"> & {
  /**
   * @generated from field: string date = 1;
   */
  date: string;

  /**
   * @generated from field: double costActual = 2;
   */
  costActual: number;

  /**
   * @generated from field: double costForecast = 3;
   */
  costForecast: number;

  /**
   * @generated from field: double budget = 4;
   */
  budget: number;

  /**
   * @generated from field: double upperBound = 5;
   */
  upperBound: number;

  /**
   * @generated from field: double lowerBound = 6;
   */
  lowerBound: number;
};

/**
 * Describes the message blueapi.api.MonthlyCostForecast.
 * Use `create(MonthlyCostForecastSchema)` to create a new message.
 */
export declare const MonthlyCostForecastSchema: GenMessage<MonthlyCostForecast>;

/**
 * @generated from message blueapi.api.MonthOnMonthCostForecast
 */
export declare type MonthOnMonthCostForecast = Message<"blueapi.api.MonthOnMonthCostForecast"> & {
  /**
   * @generated from field: string category = 1;
   */
  category: string;

  /**
   * @generated from field: double costCurrent = 2;
   */
  costCurrent: number;

  /**
   * @generated from field: double costPrev = 3;
   */
  costPrev: number;

  /**
   * @generated from field: double costForecast = 4;
   */
  costForecast: number;
};

/**
 * Describes the message blueapi.api.MonthOnMonthCostForecast.
 * Use `create(MonthOnMonthCostForecastSchema)` to create a new message.
 */
export declare const MonthOnMonthCostForecastSchema: GenMessage<MonthOnMonthCostForecast>;

/**
 * @generated from message blueapi.api.MonthToDateCostForecast
 */
export declare type MonthToDateCostForecast = Message<"blueapi.api.MonthToDateCostForecast"> & {
  /**
   * @generated from field: string date = 1;
   */
  date: string;

  /**
   * @generated from field: double costPrev = 2;
   */
  costPrev: number;

  /**
   * @generated from field: double costAccumulated = 3;
   */
  costAccumulated: number;

  /**
   * @generated from field: double costForecast = 4;
   */
  costForecast: number;

  /**
   * @generated from field: double upperBound = 5;
   */
  upperBound: number;

  /**
   * @generated from field: double lowerBound = 6;
   */
  lowerBound: number;
};

/**
 * Describes the message blueapi.api.MonthToDateCostForecast.
 * Use `create(MonthToDateCostForecastSchema)` to create a new message.
 */
export declare const MonthToDateCostForecastSchema: GenMessage<MonthToDateCostForecast>;

