// @generated by protoc-gen-es v2.7.0
// @generated from file api/invoice.proto (package blueapi.api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/invoice.proto.
 */
export declare const file_api_invoice: GenFile;

/**
 * InvoiceMessage resource definition.
 *
 * @generated from message blueapi.api.InvoiceMessage
 */
export declare type InvoiceMessage = Message<"blueapi.api.InvoiceMessage"> & {
  /**
   * invoice generate request id
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * invoice generate request status
   *
   * done: Invoicing is complete.
   * running: Invoicing in progress.
   * failed: Invoicing is failure.
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * status timestamp in UTC, RFC3339.
   *
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;
};

/**
 * Describes the message blueapi.api.InvoiceMessage.
 * Use `create(InvoiceMessageSchema)` to create a new message.
 */
export declare const InvoiceMessageSchema: GenMessage<InvoiceMessage>;

/**
 * Invoice resource definition.
 *
 * @generated from message blueapi.api.Invoice
 */
export declare type Invoice = Message<"blueapi.api.Invoice"> & {
  /**
   * Invoice vendor detail by 'aws'
   *
   * @generated from field: blueapi.api.VendorDetail aws = 1;
   */
  aws?: VendorDetail;

  /**
   * Invoice vendor detail by 'gcp'
   *
   * @generated from field: blueapi.api.VendorDetail gcp = 2;
   */
  gcp?: VendorDetail;

  /**
   * Invoice vendor detail by 'azure'
   *
   * @generated from field: blueapi.api.VendorDetail azure = 3;
   */
  azure?: VendorDetail;
};

/**
 * Describes the message blueapi.api.Invoice.
 * Use `create(InvoiceSchema)` to create a new message.
 */
export declare const InvoiceSchema: GenMessage<Invoice>;

/**
 * VendorDetail resource definition.
 *
 * @generated from message blueapi.api.VendorDetail
 */
export declare type VendorDetail = Message<"blueapi.api.VendorDetail"> & {
  /**
   * details: Includes account-by-account details
   *
   * @generated from field: repeated blueapi.api.AccountDetails details = 1;
   */
  details: AccountDetails[];

  /**
   * groupDetails: Includes account-by-account details(fee item data). 
   *
   * @generated from field: repeated blueapi.api.GroupDetails groupDetails = 2;
   */
  groupDetails: GroupDetails[];

  /**
   * groupCustomDetails: Includes account-by-account details(custom service and additional item data). 
   *
   * @generated from field: repeated blueapi.api.GroupCustomDetails groupCustomDetails = 5;
   */
  groupCustomDetails: GroupCustomDetails[];

  /**
   * total: Includes data on billing totals
   *
   * @generated from field: repeated blueapi.api.InvoiceTotal total = 3;
   */
  total: InvoiceTotal[];

  /**
   * settings: Includes settings related to billing
   *
   * @generated from field: blueapi.api.InvoiceSettings settings = 4;
   */
  settings?: InvoiceSettings;
};

/**
 * Describes the message blueapi.api.VendorDetail.
 * Use `create(VendorDetailSchema)` to create a new message.
 */
export declare const VendorDetailSchema: GenMessage<VendorDetail>;

/**
 * AccountDetails resource definition.
 *
 * @generated from message blueapi.api.AccountDetails
 */
export declare type AccountDetails = Message<"blueapi.api.AccountDetails"> & {
  /**
   * Resource Id. 
   *
   * if account, customer id.
   *
   * if tag, tag resource id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Resource Name. 
   *
   * if account, customer name.
   *
   * if tag, tag resources.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * details: Vendor service fees included
   *
   * @generated from field: repeated blueapi.api.UsageDetails details = 3;
   */
  details: UsageDetails[];

  /**
   * customDetails: Includes details of custom service and additional item data
   *
   * @generated from field: repeated blueapi.api.CustomDetails customDetails = 4;
   */
  customDetails: CustomDetails[];

  /**
   * feeDetails: Includes details of re-caluclated fee data
   *
   * @generated from field: repeated blueapi.api.FeeDetails feeDetails = 5;
   */
  feeDetails: FeeDetails[];

  /**
   * The keys included in the account total column have the following values
   *
   * substitution:
   *    Total amount of agency fee costs
   *
   * supportFee:
   *    Total amount of Support Fee costs
   *
   * usageOnlyTotal:
   *    Total amount of vendor usage fee only costs
   *
   * usageTotal:
   *    Total amount of vendor usage fee costs
   *
   * marketplace:
   *    Total amount of vendor marketplace usage costs
   *
   * marketplaceFees:
   *    Total amount of vendor marketplace fee costs
   *
   * @generated from field: repeated blueapi.api.AccountTotal total = 6;
   */
  total: AccountTotal[];
};

/**
 * Describes the message blueapi.api.AccountDetails.
 * Use `create(AccountDetailsSchema)` to create a new message.
 */
export declare const AccountDetailsSchema: GenMessage<AccountDetails>;

/**
 * UsageDetails resource definition.
 *
 * @generated from message blueapi.api.UsageDetails
 */
export declare type UsageDetails = Message<"blueapi.api.UsageDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.UsageDetails.
 * Use `create(UsageDetailsSchema)` to create a new message.
 */
export declare const UsageDetailsSchema: GenMessage<UsageDetails>;

/**
 * CustomDetails resource definition.
 *
 * @generated from message blueapi.api.CustomDetails
 */
export declare type CustomDetails = Message<"blueapi.api.CustomDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.CustomDetails.
 * Use `create(CustomDetailsSchema)` to create a new message.
 */
export declare const CustomDetailsSchema: GenMessage<CustomDetails>;

/**
 * FeeDetails resource definition.
 *
 * @generated from message blueapi.api.FeeDetails
 */
export declare type FeeDetails = Message<"blueapi.api.FeeDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.FeeDetails.
 * Use `create(FeeDetailsSchema)` to create a new message.
 */
export declare const FeeDetailsSchema: GenMessage<FeeDetails>;

/**
 * AccountTotal resource definition.
 *
 * @generated from message blueapi.api.AccountTotal
 */
export declare type AccountTotal = Message<"blueapi.api.AccountTotal"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.AccountTotal.
 * Use `create(AccountTotalSchema)` to create a new message.
 */
export declare const AccountTotalSchema: GenMessage<AccountTotal>;

/**
 * InvoiceTotal resource definition.
 *
 * @generated from message blueapi.api.InvoiceTotal
 */
export declare type InvoiceTotal = Message<"blueapi.api.InvoiceTotal"> & {
  /**
   * Key names related to the total. Each key is described in the following detail
   *
   * supportFee: 
   *    Total amount of Support Fee costs
   *
   * substitution: 
   *    Total amount of agency fee costs
   *
   * chargeOnly: 
   *    Total amount of vendor usage fee only costs
   *
   * marketplace: 
   *    Total amount of vendor marketplace usage costs
   *
   * marketplaceFees: 
   *    Total amount of vendor marketplace fee costs
   *
   * charge: 
   *    Total amount of vendor usage fee costs
   *
   * discount: 
   *    Total amount after discounts. Inculuded Support fee costs
   *
   * discountWithSubstitution: 
   *    Total Discounts plus agency fee costs
   *
   * chargeTaxFree: 
   *    Amounts not included in consumption tax
   *
   * additionalItem: 
   *    Total amount of additional item costs 
   *
   * customService: 
   *    Total amount of custom service item costs 
   *
   * sumOfBeforeTax: 
   *    Total amount before consumption tax
   *
   * tax: 
   *    Consumption tax amount on the total amount
   *
   * total: 
   *    Total billing amount including tax
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.InvoiceTotal.
 * Use `create(InvoiceTotalSchema)` to create a new message.
 */
export declare const InvoiceTotalSchema: GenMessage<InvoiceTotal>;

/**
 * GroupDetails resource definition.
 *
 * @generated from message blueapi.api.GroupDetails
 */
export declare type GroupDetails = Message<"blueapi.api.GroupDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.GroupDetails.
 * Use `create(GroupDetailsSchema)` to create a new message.
 */
export declare const GroupDetailsSchema: GenMessage<GroupDetails>;

/**
 * GroupCustomDetails resource definition.
 *
 * @generated from message blueapi.api.GroupCustomDetails
 */
export declare type GroupCustomDetails = Message<"blueapi.api.GroupCustomDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.GroupCustomDetails.
 * Use `create(GroupCustomDetailsSchema)` to create a new message.
 */
export declare const GroupCustomDetailsSchema: GenMessage<GroupCustomDetails>;

/**
 * GroupUsageDetails resource definition.
 *
 * @generated from message blueapi.api.GroupUsageDetails
 */
export declare type GroupUsageDetails = Message<"blueapi.api.GroupUsageDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string currency = 2;
   */
  currency: string;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;
};

/**
 * Describes the message blueapi.api.GroupUsageDetails.
 * Use `create(GroupUsageDetailsSchema)` to create a new message.
 */
export declare const GroupUsageDetailsSchema: GenMessage<GroupUsageDetails>;

/**
 * InvoiceSettings resource definition.
 *
 * @generated from message blueapi.api.InvoiceSettings
 */
export declare type InvoiceSettings = Message<"blueapi.api.InvoiceSettings"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * @generated from field: string groupName = 3;
   */
  groupName: string;

  /**
   * @generated from field: string contact = 4;
   */
  contact: string;

  /**
   * @generated from field: string currency = 5;
   */
  currency: string;

  /**
   * @generated from field: string dueDate = 6;
   */
  dueDate: string;

  /**
   * @generated from field: double dueDateCustomDay = 7;
   */
  dueDateCustomDay: number;

  /**
   * @generated from field: string dueDateDay = 8;
   */
  dueDateDay: string;

  /**
   * @generated from field: string dueDateMonth = 9;
   */
  dueDateMonth: string;

  /**
   * @generated from field: double exchangeRate = 10;
   */
  exchangeRate: number;

  /**
   * @generated from field: string invoiceNo = 11;
   */
  invoiceNo: string;

  /**
   * @generated from field: string language = 12;
   */
  language: string;

  /**
   * @generated from field: string phone = 13;
   */
  phone: string;

  /**
   * @generated from field: string postal = 14;
   */
  postal: string;

  /**
   * @generated from field: string title = 15;
   */
  title: string;
};

/**
 * Describes the message blueapi.api.InvoiceSettings.
 * Use `create(InvoiceSettingsSchema)` to create a new message.
 */
export declare const InvoiceSettingsSchema: GenMessage<InvoiceSettings>;

/**
 * InvoiceSettingsAll resource definition.
 *
 * @generated from message blueapi.api.InvoiceSettingsAll
 */
export declare type InvoiceSettingsAll = Message<"blueapi.api.InvoiceSettingsAll"> & {
  /**
   * @generated from field: blueapi.api.AccountSupportPlan accountSupportPlan = 1;
   */
  accountSupportPlan?: AccountSupportPlan;

  /**
   * @generated from field: repeated blueapi.api.AdditionalItems additionalItems = 2;
   */
  additionalItems: AdditionalItems[];

  /**
   * @generated from field: string address = 3;
   */
  address: string;

  /**
   * @generated from field: blueapi.api.AccountSupportPlanSettings asps = 4;
   */
  asps?: AccountSupportPlanSettings;

  /**
   * @generated from field: string groupId = 5;
   */
  groupId: string;

  /**
   * @generated from field: string groupName = 6;
   */
  groupName: string;

  /**
   * @generated from field: string calculationType = 7;
   */
  calculationType: string;

  /**
   * @generated from field: string contact = 8;
   */
  contact: string;

  /**
   * @generated from field: string currency = 9;
   */
  currency: string;

  /**
   * @generated from field: string discountCalcLogic = 10;
   */
  discountCalcLogic: string;

  /**
   * @generated from field: double discountRate = 11;
   */
  discountRate: number;

  /**
   * @generated from field: string discountTargetUsage = 12;
   */
  discountTargetUsage: string;

  /**
   * @generated from field: string displayCost = 13;
   */
  displayCost: string;

  /**
   * @generated from field: string dueDate = 14;
   */
  dueDate: string;

  /**
   * @generated from field: double dueDateCustomDay = 15;
   */
  dueDateCustomDay: number;

  /**
   * @generated from field: string dueDateDay = 16;
   */
  dueDateDay: string;

  /**
   * @generated from field: string dueDateMonth = 17;
   */
  dueDateMonth: string;

  /**
   * @generated from field: double exchangeRate = 18;
   */
  exchangeRate: number;

  /**
   * @generated from field: string exchangeRateType = 19;
   */
  exchangeRateType: string;

  /**
   * @generated from field: string imageUrl = 20;
   */
  imageUrl: string;

  /**
   * @generated from field: string invoiceNo = 21;
   */
  invoiceNo: string;

  /**
   * @generated from field: string language = 22;
   */
  language: string;

  /**
   * @generated from field: string memo = 23;
   */
  memo: string;

  /**
   * @generated from field: string name = 24;
   */
  name: string;

  /**
   * @generated from field: string phone = 25;
   */
  phone: string;

  /**
   * @generated from field: string postal = 26;
   */
  postal: string;

  /**
   * @generated from field: string projectCode = 27;
   */
  projectCode: string;

  /**
   * @generated from field: string projectCurrency = 28;
   */
  projectCurrency: string;

  /**
   * @generated from field: string projectId = 29;
   */
  projectId: string;

  /**
   * @generated from field: string projectLabel = 30;
   */
  projectLabel: string;

  /**
   * @generated from field: string remarks = 31;
   */
  remarks: string;

  /**
   * @generated from field: string substitutionFee = 32;
   */
  substitutionFee: string;

  /**
   * @generated from field: string substitutionFeeCalcTarget = 33;
   */
  substitutionFeeCalcTarget: string;

  /**
   * @generated from field: string substitutionFeeCalcType = 34;
   */
  substitutionFeeCalcType: string;

  /**
   * @generated from field: string substitutionFeeTargetUsage = 35;
   */
  substitutionFeeTargetUsage: string;

  /**
   * @generated from field: double substitutionFix = 36;
   */
  substitutionFix: number;

  /**
   * @generated from field: double substitutionRate = 37;
   */
  substitutionRate: number;

  /**
   * @generated from field: string supportFee = 38;
   */
  supportFee: string;

  /**
   * @generated from field: string supportFeeCalcTarget = 39;
   */
  supportFeeCalcTarget: string;

  /**
   * @generated from field: double supportFix = 40;
   */
  supportFix: number;

  /**
   * @generated from field: double supportRate = 41;
   */
  supportRate: number;

  /**
   * @generated from field: double taxRate = 42;
   */
  taxRate: number;

  /**
   * @generated from field: string title = 43;
   */
  title: string;
};

/**
 * Describes the message blueapi.api.InvoiceSettingsAll.
 * Use `create(InvoiceSettingsAllSchema)` to create a new message.
 */
export declare const InvoiceSettingsAllSchema: GenMessage<InvoiceSettingsAll>;

/**
 * AccountSupportPlan resource definition.
 *
 * @generated from message blueapi.api.AccountSupportPlan
 */
export declare type AccountSupportPlan = Message<"blueapi.api.AccountSupportPlan"> & {
  /**
   * @generated from field: bool awsEnterpriseOnRamp = 1;
   */
  awsEnterpriseOnRamp: boolean;

  /**
   * @generated from field: bool awsBusiness = 2;
   */
  awsBusiness: boolean;

  /**
   * @generated from field: bool noSupport = 3;
   */
  noSupport: boolean;

  /**
   * @generated from field: bool awsDeveloper = 4;
   */
  awsDeveloper: boolean;
};

/**
 * Describes the message blueapi.api.AccountSupportPlan.
 * Use `create(AccountSupportPlanSchema)` to create a new message.
 */
export declare const AccountSupportPlanSchema: GenMessage<AccountSupportPlan>;

/**
 * AdditionalItems resource definition.
 *
 * @generated from message blueapi.api.AdditionalItems
 */
export declare type AdditionalItems = Message<"blueapi.api.AdditionalItems"> & {
  /**
   * @generated from field: string label = 1;
   */
  label: string;

  /**
   * @generated from field: double unitCost = 2;
   */
  unitCost: number;

  /**
   * @generated from field: double total = 3;
   */
  total: number;

  /**
   * @generated from field: double quantity = 4;
   */
  quantity: number;
};

/**
 * Describes the message blueapi.api.AdditionalItems.
 * Use `create(AdditionalItemsSchema)` to create a new message.
 */
export declare const AdditionalItemsSchema: GenMessage<AdditionalItems>;

/**
 * AccountSupportPlanSettings resource definition.
 *
 * @generated from message blueapi.api.AccountSupportPlanSettings
 */
export declare type AccountSupportPlanSettings = Message<"blueapi.api.AccountSupportPlanSettings"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: map<string, string> accounts = 2;
   */
  accounts: { [key: string]: string };
};

/**
 * Describes the message blueapi.api.AccountSupportPlanSettings.
 * Use `create(AccountSupportPlanSettingsSchema)` to create a new message.
 */
export declare const AccountSupportPlanSettingsSchema: GenMessage<AccountSupportPlanSettings>;

