// @generated by protoc-gen-es v2.7.0
// @generated from file api/notification.proto (package blueapi.api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/notification.proto.
 */
export declare const file_api_notification: GenFile;

/**
 * @generated from message blueapi.api.NotificationSettings
 */
export declare type NotificationSettings = Message<"blueapi.api.NotificationSettings"> & {
  /**
   * Indicates whether notification is enabled for this account globally.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The id of the default notification channel.
   *
   * @generated from field: string defaultChannel = 2;
   */
  defaultChannel: string;
};

/**
 * Describes the message blueapi.api.NotificationSettings.
 * Use `create(NotificationSettingsSchema)` to create a new message.
 */
export declare const NotificationSettingsSchema: GenMessage<NotificationSettings>;

/**
 * @generated from message blueapi.api.NotificationChannel
 */
export declare type NotificationChannel = Message<"blueapi.api.NotificationChannel"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: blueapi.api.EmailChannel email = 5;
   */
  email?: EmailChannel;

  /**
   * @generated from field: blueapi.api.SlackChannel slack = 6;
   */
  slack?: SlackChannel;

  /**
   * @generated from field: blueapi.api.MSTeamsChannel msteams = 7;
   */
  msteams?: MSTeamsChannel;

  /**
   * @generated from field: string product = 8;
   */
  product: string;
};

/**
 * Describes the message blueapi.api.NotificationChannel.
 * Use `create(NotificationChannelSchema)` to create a new message.
 */
export declare const NotificationChannelSchema: GenMessage<NotificationChannel>;

/**
 * @generated from message blueapi.api.EmailChannel
 */
export declare type EmailChannel = Message<"blueapi.api.EmailChannel"> & {
  /**
   * @generated from field: string format = 1;
   */
  format: string;

  /**
   * @generated from field: repeated string recipients = 2;
   */
  recipients: string[];
};

/**
 * Describes the message blueapi.api.EmailChannel.
 * Use `create(EmailChannelSchema)` to create a new message.
 */
export declare const EmailChannelSchema: GenMessage<EmailChannel>;

/**
 * @generated from message blueapi.api.SlackChannel
 */
export declare type SlackChannel = Message<"blueapi.api.SlackChannel"> & {
  /**
   * @generated from field: string webhookUrl = 1;
   */
  webhookUrl: string;

  /**
   * @generated from field: string channelId = 2;
   */
  channelId: string;

  /**
   * @generated from field: string channel = 3;
   */
  channel: string;

  /**
   * @generated from field: string configurationUrl = 4;
   */
  configurationUrl: string;

  /**
   * @generated from field: string code = 5;
   */
  code: string;

  /**
   * @generated from field: string redirectUri = 6;
   */
  redirectUri: string;
};

/**
 * Describes the message blueapi.api.SlackChannel.
 * Use `create(SlackChannelSchema)` to create a new message.
 */
export declare const SlackChannelSchema: GenMessage<SlackChannel>;

/**
 * @generated from message blueapi.api.MSTeamsChannel
 */
export declare type MSTeamsChannel = Message<"blueapi.api.MSTeamsChannel"> & {
  /**
   * @generated from field: string webhookUrl = 1;
   */
  webhookUrl: string;
};

/**
 * Describes the message blueapi.api.MSTeamsChannel.
 * Use `create(MSTeamsChannelSchema)` to create a new message.
 */
export declare const MSTeamsChannelSchema: GenMessage<MSTeamsChannel>;

/**
 * @generated from message blueapi.api.Notification
 */
export declare type Notification = Message<"blueapi.api.Notification"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string notificationType = 2;
   */
  notificationType: string;

  /**
   * @generated from field: repeated string channels = 3;
   */
  channels: string[];

  /**
   * @generated from field: bool enabled = 4;
   */
  enabled: boolean;

  /**
   * @generated from field: blueapi.api.NotificationAccount account = 5;
   */
  account?: NotificationAccount;
};

/**
 * Describes the message blueapi.api.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export declare const NotificationSchema: GenMessage<Notification>;

/**
 * @generated from message blueapi.api.NotificationAccount
 */
export declare type NotificationAccount = Message<"blueapi.api.NotificationAccount"> & {
  /**
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * @generated from field: string accountId = 2;
   */
  accountId: string;
};

/**
 * Describes the message blueapi.api.NotificationAccount.
 * Use `create(NotificationAccountSchema)` to create a new message.
 */
export declare const NotificationAccountSchema: GenMessage<NotificationAccount>;

