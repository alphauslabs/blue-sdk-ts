// @generated by protoc-gen-es v2.7.0
// @generated from file api/ripple/org.proto (package blueapi.api.ripple, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/ripple/org.proto.
 */
export declare const file_api_ripple_org: GenFile;

/**
 * Org resource definition.
 *
 * @generated from message blueapi.api.ripple.Org
 */
export declare type Org = Message<"blueapi.api.ripple.Org"> & {
  /**
   * The unique name (or id) of the organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The registered email of the organization.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * The metadata (key/value pair) of the organization. If hierarchy is supported, it will be
   * separated by '/', such as 'metakey/subkey=value'. See https://alphauslabs.github.io/blueapi/
   * for the list of supported attributes.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message blueapi.api.ripple.Org.
 * Use `create(OrgSchema)` to create a new message.
 */
export declare const OrgSchema: GenMessage<Org>;

