// @generated by protoc-gen-es v2.7.0
// @generated from file api/ripple/v1/adjustmententry.proto (package blueapi.api.ripple.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/ripple/v1/adjustmententry.proto.
 */
export declare const file_api_ripple_v1_adjustmententry: GenFile;

/**
 * AdjustmentEntry resource definition.
 *
 * @generated from message blueapi.api.ripple.v1.AdjustmentEntry
 */
export declare type AdjustmentEntry = Message<"blueapi.api.ripple.v1.AdjustmentEntry"> & {
  /**
   * The adjustment entry ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The adjustment entry name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Account info.
   *
   * @generated from field: blueapi.api.ripple.v1.AdjustmentEntryAccountInfo account = 3;
   */
  account?: AdjustmentEntryAccountInfo;

  /**
   * Adjustment entry info.
   *
   * @generated from field: blueapi.api.ripple.v1.AdjustmentEntryInfo entry = 4;
   */
  entry?: AdjustmentEntryInfo;

  /**
   * Adjustment entry setting.
   *
   * @generated from field: blueapi.api.ripple.v1.AdjustmentEntrySetting setting = 5;
   */
  setting?: AdjustmentEntrySetting;
};

/**
 * Describes the message blueapi.api.ripple.v1.AdjustmentEntry.
 * Use `create(AdjustmentEntrySchema)` to create a new message.
 */
export declare const AdjustmentEntrySchema: GenMessage<AdjustmentEntry>;

/**
 * AdjustmentEntryAccountInfo resource definition.
 *
 * @generated from message blueapi.api.ripple.v1.AdjustmentEntryAccountInfo
 */
export declare type AdjustmentEntryAccountInfo = Message<"blueapi.api.ripple.v1.AdjustmentEntryAccountInfo"> & {
  /**
   * The account ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The account name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The vendor.
   *
   * @generated from field: string vendor = 3;
   */
  vendor: string;

  /**
   * The billing internal ID.
   *
   * @generated from field: string billingInternalId = 4;
   */
  billingInternalId: string;

  /**
   * The billing group ID.
   *
   * @generated from field: string billingGroupId = 5;
   */
  billingGroupId: string;

  /**
   * The billing group name.
   *
   * @generated from field: string billingGroupName = 6;
   */
  billingGroupName: string;

  /**
   * The billing group currency.
   *
   * @generated from field: string currency = 7;
   */
  currency: string;
};

/**
 * Describes the message blueapi.api.ripple.v1.AdjustmentEntryAccountInfo.
 * Use `create(AdjustmentEntryAccountInfoSchema)` to create a new message.
 */
export declare const AdjustmentEntryAccountInfoSchema: GenMessage<AdjustmentEntryAccountInfo>;

/**
 * AdjustmentEntryInfo resource definition.
 *
 * @generated from message blueapi.api.ripple.v1.AdjustmentEntryInfo
 */
export declare type AdjustmentEntryInfo = Message<"blueapi.api.ripple.v1.AdjustmentEntryInfo"> & {
  /**
   * The calculation type.
   *
   * @generated from field: string calculationType = 1;
   */
  calculationType: string;

  /**
   * The adjustment entry type.
   *
   * @generated from field: string adjustmentEntryType = 2;
   */
  adjustmentEntryType: string;

  /**
   * The adjustment entry description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The product code.
   *
   * @generated from field: string productCode = 4;
   */
  productCode: string;

  /**
   * The product name.
   *
   * @generated from field: string productName = 5;
   */
  productName: string;

  /**
   * The currency.
   *
   * @generated from field: string currency = 6;
   */
  currency: string;

  /**
   * The amount.
   *
   * @generated from field: double amount = 7;
   */
  amount: number;

  /**
   * The time interval.
   *
   * @generated from field: string timeInterval = 8;
   */
  timeInterval: string;

  /**
   * The usage start.
   *
   * @generated from field: string usageStart = 9;
   */
  usageStart: string;
};

/**
 * Describes the message blueapi.api.ripple.v1.AdjustmentEntryInfo.
 * Use `create(AdjustmentEntryInfoSchema)` to create a new message.
 */
export declare const AdjustmentEntryInfoSchema: GenMessage<AdjustmentEntryInfo>;

/**
 * AdjustmentEntrySetting resource definition.
 *
 * @generated from message blueapi.api.ripple.v1.AdjustmentEntrySetting
 */
export declare type AdjustmentEntrySetting = Message<"blueapi.api.ripple.v1.AdjustmentEntrySetting"> & {
  /**
   * Applied to the billing.
   *
   * @generated from field: bool apply = 1;
   */
  apply: boolean;

  /**
   * The exchange rate applied to the billing.
   *
   * @generated from field: double exchangeRate = 2;
   */
  exchangeRate: number;

  /**
   * The tax free applied to the billing.
   *
   * @generated from field: bool taxFree = 3;
   */
  taxFree: boolean;

  /**
   * The allocate type indicates the type to which an entry has been allocated.
   *
   * @generated from field: string allocateType = 4;
   */
  allocateType: string;

  /**
   * The split type indicates the type to which an entry has been splitted.
   *
   * @generated from field: string splitType = 5;
   */
  splitType: string;

  /**
   * The original ID represents the originally allocated or splitted ID.
   *
   * @generated from field: string originalId = 6;
   */
  originalId: string;

  /**
   * The Splitted indicates whether it has been split.
   *
   * @generated from field: bool splitted = 7;
   */
  splitted: boolean;

  /**
   * The term indicates the number of years that can be splitted.
   * For 1 year, it is divided into 12 parts.
   * For 3 years, it is divided into 36 parts.
   *
   * @generated from field: int32 term = 8;
   */
  term: number;
};

/**
 * Describes the message blueapi.api.ripple.v1.AdjustmentEntrySetting.
 * Use `create(AdjustmentEntrySettingSchema)` to create a new message.
 */
export declare const AdjustmentEntrySettingSchema: GenMessage<AdjustmentEntrySetting>;

