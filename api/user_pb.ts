// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file api/user.proto (package blueapi.api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/user.proto.
 */
export const file_api_user: GenFile = /*@__PURE__*/
  fileDesc("Cg5hcGkvdXNlci5wcm90bxILYmx1ZWFwaS5hcGkihgEKBFVzZXISCgoCaWQYASABKAkSDgoGcGFyZW50GAIgASgJEjEKCG1ldGFkYXRhGAMgAygLMh8uYmx1ZWFwaS5hcGkuVXNlci5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASK3AQoHU3ViVXNlchIKCgJpZBgBIAEoCRIQCghwYXJlbnRJZBgCIAEoCRI0CghtZXRhZGF0YRgDIAMoCzIiLmJsdWVhcGkuYXBpLlN1YlVzZXIuTWV0YWRhdGFFbnRyeRInCgVyb2xlcxgEIAMoCzIYLmJsdWVhcGkuYXBpLlN1YlVzZXJSb2xlGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJFCgtTdWJVc2VyUm9sZRIOCgZyb2xlSWQYASABKAkSEwoLcGVybWlzc2lvbnMYAiADKAkSEQoJc3ViVXNlcklkGAMgASgJQlEKGWNsb3VkLmFscGhhdXMuYmx1ZWFwaS5hcGlCDEFwaVVzZXJQcm90b1omZ2l0aHViLmNvbS9hbHBoYXVzbGFicy9ibHVlLXNkay1nby9hcGliBnByb3RvMw");

/**
 * @generated from message blueapi.api.User
 */
export type User = Message<"blueapi.api.User"> & {
  /**
   * User's unique id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The user's parent. If empty or non-existent, it means this user is a root user;
   * otherwise, it's a subuser.
   *
   * @generated from field: string parent = 2;
   */
  parent: string;

  /**
   * The attributes (key/value pair) of the user. If hierarchy is supported, it will be
   * separated by '/', such as 'key/subkey=value'. See https://alphauslabs.github.io/blueapi/
   * for the list of supported attributes.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message blueapi.api.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_api_user, 0);

/**
 * @generated from message blueapi.api.SubUser
 */
export type SubUser = Message<"blueapi.api.SubUser"> & {
  /**
   * Sub-user's unique id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The id of the parent user. If this is empty, the sub-user is invalid.
   *
   * @generated from field: string parentId = 2;
   */
  parentId: string;

  /**
   * Attributes specific to the sub-user.
   *
   * @generated from field: map<string, string> metadata = 3;
   */
  metadata: { [key: string]: string };

  /**
   * Role details for the sub-user, if applicable.
   *
   * @generated from field: repeated blueapi.api.SubUserRole roles = 4;
   */
  roles: SubUserRole[];
};

/**
 * Describes the message blueapi.api.SubUser.
 * Use `create(SubUserSchema)` to create a new message.
 */
export const SubUserSchema: GenMessage<SubUser> = /*@__PURE__*/
  messageDesc(file_api_user, 1);

/**
 * @generated from message blueapi.api.SubUserRole
 */
export type SubUserRole = Message<"blueapi.api.SubUserRole"> & {
  /**
   * Role ID assigned to the sub-user.
   *
   * @generated from field: string roleId = 1;
   */
  roleId: string;

  /**
   * Permissions granted to the sub-user for this role.
   *
   * @generated from field: repeated string permissions = 2;
   */
  permissions: string[];

  /**
   * Temporary: Tracks the sub-user ID to verify the role is assigned to the correct user.
   * This field will be removed after testing is complete.
   *
   * @generated from field: string subUserId = 3;
   */
  subUserId: string;
};

/**
 * Describes the message blueapi.api.SubUserRole.
 * Use `create(SubUserRoleSchema)` to create a new message.
 */
export const SubUserRoleSchema: GenMessage<SubUserRole> = /*@__PURE__*/
  messageDesc(file_api_user, 2);

