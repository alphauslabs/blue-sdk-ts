// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file cost/v1/cost.proto (package blueapi.cost.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Account, AccountOriginalResourceSchema, AccountSchema } from "../../api/account_pb";
import { file_api_account } from "../../api/account_pb";
import type { OndemandData, OptionsData } from "../../api/coverage_pb";
import { file_api_coverage } from "../../api/coverage_pb";
import type { Budget, BudgetAlertNotification, BudgetAlertNotificationDetail, CustomMonthBudgetAlert, CustomPeriodBudgetAlert, DailyBudgetAlert, DailyRateIncreaseBudgetAlert, MonthlyBudgetAlert } from "../../api/budget_pb";
import { file_api_budget } from "../../api/budget_pb";
import type { BillingGroupForecast, MonthlyCostForecast, MonthOnMonthCostForecast, MonthToDateCostForecast } from "../../api/forecast_pb";
import { file_api_forecast } from "../../api/forecast_pb";
import type { UtilizationData } from "../../api/utilization_pb";
import { file_api_utilization } from "../../api/utilization_pb";
import type { AwsCostBreakeven } from "../../api/aws/breakeven_pb";
import { file_api_aws_breakeven } from "../../api/aws/breakeven_pb";
import type { Cost as Cost$1, CostAttribute as CostAttribute$1 } from "../../api/aws/cost_pb";
import { file_api_aws_cost } from "../../api/aws/cost_pb";
import type { CalculatorConfig } from "../../api/aws/calculator_pb";
import { file_api_aws_calculator } from "../../api/aws/calculator_pb";
import type { AwsRecommendations } from "../../api/aws/recommendation_pb";
import { file_api_aws_recommendation } from "../../api/aws/recommendation_pb";
import type { AwsCostReductions } from "../../api/aws/reduction_pb";
import { file_api_aws_reduction } from "../../api/aws/reduction_pb";
import type { Cost as Cost$2 } from "../../api/gcp/cost_pb";
import { file_api_gcp_cost } from "../../api/gcp/cost_pb";
import type { Cost as Cost$3, CostAttribute as CostAttribute$2 } from "../../api/azure/cost_pb";
import { file_api_azure_cost } from "../../api/azure/cost_pb";
import type { PayerSchema } from "../../api/ripple/payer_pb";
import { file_api_ripple_payer } from "../../api/ripple/payer_pb";
import type { BillingGroupSectionSchema, OverViewSectionSchema, TotalSectionSchema } from "../../api/ripple/v1/dashboard_pb";
import { file_api_ripple_v1_dashboard } from "../../api/ripple/v1/dashboard_pb";
import type { BudgetAlert, BudgetAlertSchema } from "../../api/wave/budget_pb";
import { file_api_wave_budget } from "../../api/wave/budget_pb";
import type { CostTagSchema } from "../../api/costtag_pb";
import { file_api_costtag } from "../../api/costtag_pb";
import type { Operation, OperationSchema } from "../../protos/operation_pb";
import { file_protos_operation } from "../../protos/operation_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../protoc-gen-openapiv2/options/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cost/v1/cost.proto.
 */
export const file_cost_v1_cost: GenFile = /*@__PURE__*/
  fileDesc("", [file_api_account, file_api_coverage, file_api_budget, file_api_forecast, file_api_utilization, file_api_aws_breakeven, file_api_aws_cost, file_api_aws_calculator, file_api_aws_recommendation, file_api_aws_reduction, file_api_gcp_cost, file_api_azure_cost, file_api_ripple_payer, file_api_ripple_v1_dashboard, file_api_wave_budget, file_api_costtag, file_protos_operation, file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_empty, file_protoc_gen_openapiv2_options_annotations, file_google_protobuf_field_mask]);

/**
 * Request message for the Cost.ListPayerAccounts rpc.
 *
 * @generated from message blueapi.cost.v1.ListPayerAccountsRequest
 */
export type ListPayerAccountsRequest = Message<"blueapi.cost.v1.ListPayerAccountsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. Get only the value that set fieldMask.
   *
   * see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 2;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message blueapi.cost.v1.ListPayerAccountsRequest.
 * Use `create(ListPayerAccountsRequestSchema)` to create a new message.
 */
export const ListPayerAccountsRequestSchema: GenMessage<ListPayerAccountsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 0);

/**
 * Request message for the Cost.GetPayerAccount rpc.
 *
 * @generated from message blueapi.cost.v1.GetPayerAccountRequest
 */
export type GetPayerAccountRequest = Message<"blueapi.cost.v1.GetPayerAccountRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The id of the account to get.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.GetPayerAccountRequest.
 * Use `create(GetPayerAccountRequestSchema)` to create a new message.
 */
export const GetPayerAccountRequestSchema: GenMessage<GetPayerAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 1);

/**
 * Request message for the Cost.GetPayerAccountImportHistory rpc.
 *
 * @generated from message blueapi.cost.v1.GetPayerAccountImportHistoryRequest
 */
export type GetPayerAccountImportHistoryRequest = Message<"blueapi.cost.v1.GetPayerAccountImportHistoryRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The account id to query. Could be `*`, which implies all payers.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`.
   *
   * @generated from field: string month = 3;
   */
  month: string;
};

/**
 * Describes the message blueapi.cost.v1.GetPayerAccountImportHistoryRequest.
 * Use `create(GetPayerAccountImportHistoryRequestSchema)` to create a new message.
 */
export const GetPayerAccountImportHistoryRequestSchema: GenMessage<GetPayerAccountImportHistoryRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 2);

/**
 * Response message for the Cost.GetPayerAccountImportHistory rpc.
 *
 * @generated from message blueapi.cost.v1.GetPayerAccountImportHistoryResponse
 */
export type GetPayerAccountImportHistoryResponse = Message<"blueapi.cost.v1.GetPayerAccountImportHistoryResponse"> & {
  /**
   * The queried account id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The queried UTC month.
   *
   * @generated from field: string month = 2;
   */
  month: string;

  /**
   * List of timestamps in RFC3339 format with the `T` separator. Example: `2019-10-12T07:20:50.52Z`
   *
   * @generated from field: repeated string timestamps = 3;
   */
  timestamps: string[];
};

/**
 * Describes the message blueapi.cost.v1.GetPayerAccountImportHistoryResponse.
 * Use `create(GetPayerAccountImportHistoryResponseSchema)` to create a new message.
 */
export const GetPayerAccountImportHistoryResponseSchema: GenMessage<GetPayerAccountImportHistoryResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 3);

/**
 * Request message for Cost.GetPayerProformaReports rpc.
 *
 * @generated from message blueapi.cost.v1.GetPayerProformaReportsRequest
 */
export type GetPayerProformaReportsRequest = Message<"blueapi.cost.v1.GetPayerProformaReportsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The account id to query.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.GetPayerProformaReportsRequest.
 * Use `create(GetPayerProformaReportsRequestSchema)` to create a new message.
 */
export const GetPayerProformaReportsRequestSchema: GenMessage<GetPayerProformaReportsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 4);

/**
 * Response message for Cost.GetPayerProformaReports rpc.
 *
 * @generated from message blueapi.cost.v1.GetPayerProformaReportsResponse
 */
export type GetPayerProformaReportsResponse = Message<"blueapi.cost.v1.GetPayerProformaReportsResponse"> & {
  /**
   * @generated from field: repeated blueapi.cost.v1.ProformaReports reports = 1;
   */
  reports: ProformaReports[];
};

/**
 * Describes the message blueapi.cost.v1.GetPayerProformaReportsResponse.
 * Use `create(GetPayerProformaReportsResponseSchema)` to create a new message.
 */
export const GetPayerProformaReportsResponseSchema: GenMessage<GetPayerProformaReportsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 5);

/**
 * @generated from message blueapi.cost.v1.ProformaReports
 */
export type ProformaReports = Message<"blueapi.cost.v1.ProformaReports"> & {
  /**
   * payer account id
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * billing group internal id
   *
   * @generated from field: string billingInternalId = 2;
   */
  billingInternalId: string;

  /**
   * billing group name
   *
   * @generated from field: string billingGroupName = 3;
   */
  billingGroupName: string;

  /**
   * s3 bucket name
   *
   * @generated from field: string bucketName = 4;
   */
  bucketName: string;

  /**
   * s3 report prefix
   *
   * @generated from field: string prefix = 5;
   */
  prefix: string;

  /**
   * report name
   *
   * @generated from field: string reportName = 6;
   */
  reportName: string;

  /**
   * role arn
   *
   * @generated from field: string roleArn = 7;
   */
  roleArn: string;
};

/**
 * Describes the message blueapi.cost.v1.ProformaReports.
 * Use `create(ProformaReportsSchema)` to create a new message.
 */
export const ProformaReportsSchema: GenMessage<ProformaReports> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 6);

/**
 * See [https://help.alphaus.cloud/en/articles/3612555-ripple-aws-things-you-need-to-prepare-before-starting] for more information.
 *
 * See [https://docs.aws.amazon.com/cur/latest/userguide/cur-create.html] for more information. Requirements include: Additional report details = 'Include Resource IDS' enabled, Prefix = non-empty (recommendation only), Time granularity = 'Hourly', File format = 'text/csv'.
 *
 * @generated from message blueapi.cost.v1.CreatePayerAccountRequestAwsOptions
 */
export type CreatePayerAccountRequestAwsOptions = Message<"blueapi.cost.v1.CreatePayerAccountRequestAwsOptions"> & {
  /**
   * Required. The id of the management account.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. The name, or description of the management account. This is set to `id` when not specified.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Required. S3 Bucket name.
   *
   * @generated from field: string bucketName = 3;
   */
  bucketName: string;

  /**
   * Optional. Prefix.
   *
   * @generated from field: string prefix = 4;
   */
  prefix: string;

  /**
   * Required. Report name.
   *
   * @generated from field: string reportName = 5;
   */
  reportName: string;

  /**
   * Required. Role ARN for Alphaus to assume for access.
   *
   * @generated from field: string roleArn = 6;
   */
  roleArn: string;
};

/**
 * Describes the message blueapi.cost.v1.CreatePayerAccountRequestAwsOptions.
 * Use `create(CreatePayerAccountRequestAwsOptionsSchema)` to create a new message.
 */
export const CreatePayerAccountRequestAwsOptionsSchema: GenMessage<CreatePayerAccountRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 7);

/**
 * Request message for the Cost.CreatePayerAccount rpc.
 *
 * @generated from message blueapi.cost.v1.CreatePayerAccountRequest
 */
export type CreatePayerAccountRequest = Message<"blueapi.cost.v1.CreatePayerAccountRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.CreatePayerAccountRequestAwsOptions awsOptions = 2;
   */
  awsOptions?: CreatePayerAccountRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.CreatePayerAccountRequest.
 * Use `create(CreatePayerAccountRequestSchema)` to create a new message.
 */
export const CreatePayerAccountRequestSchema: GenMessage<CreatePayerAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 8);

/**
 * Request message for the Cost.DeletePayerAccount rpc.
 *
 * @generated from message blueapi.cost.v1.DeletePayerAccountRequest
 */
export type DeletePayerAccountRequest = Message<"blueapi.cost.v1.DeletePayerAccountRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The id of the account.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.DeletePayerAccountRequest.
 * Use `create(DeletePayerAccountRequestSchema)` to create a new message.
 */
export const DeletePayerAccountRequestSchema: GenMessage<DeletePayerAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 9);

/**
 * Request message for the Cost.ListAccounts rpc.
 *
 * @generated from message blueapi.cost.v1.ListAccountsRequest
 */
export type ListAccountsRequest = Message<"blueapi.cost.v1.ListAccountsRequest"> & {
  /**
   * Required. At the moment, `aws` and `gcp` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. The billing group internal id. Only valid for Ripple users.
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 3;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message blueapi.cost.v1.ListAccountsRequest.
 * Use `create(ListAccountsRequestSchema)` to create a new message.
 */
export const ListAccountsRequestSchema: GenMessage<ListAccountsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 10);

/**
 * Request message for the Cost.GetAccount rpc.
 *
 * @generated from message blueapi.cost.v1.GetAccountRequest
 */
export type GetAccountRequest = Message<"blueapi.cost.v1.GetAccountRequest"> & {
  /**
   * Required. At the moment, `aws` and `gcp` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The account id to retrieve.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Optional.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 3;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message blueapi.cost.v1.GetAccountRequest.
 * Use `create(GetAccountRequestSchema)` to create a new message.
 */
export const GetAccountRequestSchema: GenMessage<GetAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 11);

/**
 * AWS-specific options for registering an account.
 *
 * @generated from message blueapi.cost.v1.CreateAccountRequestAwsOptions
 */
export type CreateAccountRequestAwsOptions = Message<"blueapi.cost.v1.CreateAccountRequestAwsOptions"> & {
  /**
   * Optional. The management account id (formerly known as master, or payer) to which an account belongs to, initially. If the account is moved to another management account, the system is able to detect it and set this value accordingly.
   *
   * @generated from field: string managementAccountId = 1;
   */
  managementAccountId: string;
};

/**
 * Describes the message blueapi.cost.v1.CreateAccountRequestAwsOptions.
 * Use `create(CreateAccountRequestAwsOptionsSchema)` to create a new message.
 */
export const CreateAccountRequestAwsOptionsSchema: GenMessage<CreateAccountRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 12);

/**
 * GCP-specific options for registering an account.
 *
 * @generated from message blueapi.cost.v1.CreateAccountRequestGcpOptions
 */
export type CreateAccountRequestGcpOptions = Message<"blueapi.cost.v1.CreateAccountRequestGcpOptions"> & {
  /**
   * Optional. 
   *
   * @generated from field: string managementAccountId = 1;
   */
  managementAccountId: string;

  /**
   * Optional. 
   *
   * @generated from field: string managementBillingId = 2;
   */
  managementBillingId: string;
};

/**
 * Describes the message blueapi.cost.v1.CreateAccountRequestGcpOptions.
 * Use `create(CreateAccountRequestGcpOptionsSchema)` to create a new message.
 */
export const CreateAccountRequestGcpOptionsSchema: GenMessage<CreateAccountRequestGcpOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 13);

/**
 * Request message for the Cost.CreateAccount rpc.
 *
 * @generated from message blueapi.cost.v1.CreateAccountRequest
 */
export type CreateAccountRequest = Message<"blueapi.cost.v1.CreateAccountRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The account id to register.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Optional. If empty, set to the value of `id`.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Optional. The parent `billingInternalId` of the billing group to which this account will belong to.
   *
   * @generated from field: string parent = 4;
   */
  parent: string;

  /**
   * Required for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.CreateAccountRequestAwsOptions awsOptions = 5;
   */
  awsOptions?: CreateAccountRequestAwsOptions;

  /**
   * Required for the `gcp` vendor. GCP-specific options.
   *
   * @generated from field: blueapi.cost.v1.CreateAccountRequestGcpOptions gcpOptions = 6;
   */
  gcpOptions?: CreateAccountRequestGcpOptions;
};

/**
 * Describes the message blueapi.cost.v1.CreateAccountRequest.
 * Use `create(CreateAccountRequestSchema)` to create a new message.
 */
export const CreateAccountRequestSchema: GenMessage<CreateAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 14);

/**
 * Request message for the Cost.UpdateAccount rpc.
 *
 * @generated from message blueapi.cost.v1.UpdateAccountRequest
 */
export type UpdateAccountRequest = Message<"blueapi.cost.v1.UpdateAccountRequest"> & {
  /**
   * Required.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Optional.
   *
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message blueapi.cost.v1.UpdateAccountRequest.
 * Use `create(UpdateAccountRequestSchema)` to create a new message.
 */
export const UpdateAccountRequestSchema: GenMessage<UpdateAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 15);

/**
 * Request message for the Cost.DeleteAccount rpc.
 *
 * @generated from message blueapi.cost.v1.DeleteAccountRequest
 */
export type DeleteAccountRequest = Message<"blueapi.cost.v1.DeleteAccountRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The account id to delete.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteAccountRequest.
 * Use `create(DeleteAccountRequestSchema)` to create a new message.
 */
export const DeleteAccountRequestSchema: GenMessage<DeleteAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 16);

/**
 * Request message for the Cost.ListTags rpc.
 *
 * @generated from message blueapi.cost.v1.ListTagsRequest
 */
export type ListTagsRequest = Message<"blueapi.cost.v1.ListTagsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. The billing group internal id. Only valid for Ripple users.
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 3;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message blueapi.cost.v1.ListTagsRequest.
 * Use `create(ListTagsRequestSchema)` to create a new message.
 */
export const ListTagsRequestSchema: GenMessage<ListTagsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 17);

/**
 * Request message for the Cost.ListCalculatorRunningAccounts rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculatorRunningAccountsRequest
 */
export type ListCalculatorRunningAccountsRequest = Message<"blueapi.cost.v1.ListCalculatorRunningAccountsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. The UTC month to query. Defaults to current month if empty. Format is `yyyymm`. For example, June 2021 will be `202106`.
   *
   * @generated from field: string month = 2;
   */
  month: string;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculatorRunningAccountsRequest.
 * Use `create(ListCalculatorRunningAccountsRequestSchema)` to create a new message.
 */
export const ListCalculatorRunningAccountsRequestSchema: GenMessage<ListCalculatorRunningAccountsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 18);

/**
 * Response message for the Cost.ListCalculatorRunningAccounts rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculatorRunningAccountsResponse
 */
export type ListCalculatorRunningAccountsResponse = Message<"blueapi.cost.v1.ListCalculatorRunningAccountsResponse"> & {
  /**
   * AWS-specific entry.
   *
   * @generated from field: blueapi.cost.v1.ListCalculatorRunningAccountsResponse.AwsRunningAccount aws = 1;
   */
  aws?: ListCalculatorRunningAccountsResponse_AwsRunningAccount;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculatorRunningAccountsResponse.
 * Use `create(ListCalculatorRunningAccountsResponseSchema)` to create a new message.
 */
export const ListCalculatorRunningAccountsResponseSchema: GenMessage<ListCalculatorRunningAccountsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 19);

/**
 * @generated from message blueapi.cost.v1.ListCalculatorRunningAccountsResponse.AwsRunningAccount
 */
export type ListCalculatorRunningAccountsResponse_AwsRunningAccount = Message<"blueapi.cost.v1.ListCalculatorRunningAccountsResponse.AwsRunningAccount"> & {
  /**
   * The queried month. Format is yyyy-mm.
   *
   * @generated from field: string month = 1;
   */
  month: string;

  /**
   * The AWS account that is actively processing.
   *
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * The target date the account is processing for.
   *
   * @generated from field: string date = 3;
   */
  date: string;

  /**
   * The timestamp when the calculation has started.
   *
   * @generated from field: string started = 4;
   */
  started: string;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculatorRunningAccountsResponse.AwsRunningAccount.
 * Use `create(ListCalculatorRunningAccountsResponse_AwsRunningAccountSchema)` to create a new message.
 */
export const ListCalculatorRunningAccountsResponse_AwsRunningAccountSchema: GenMessage<ListCalculatorRunningAccountsResponse_AwsRunningAccount> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 19, 0);

/**
 * Request message for the Cost.GetCalculatorConfig rpc.
 *
 * @generated from message blueapi.cost.v1.GetCalculatorConfigRequest
 */
export type GetCalculatorConfigRequest = Message<"blueapi.cost.v1.GetCalculatorConfigRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;
};

/**
 * Describes the message blueapi.cost.v1.GetCalculatorConfigRequest.
 * Use `create(GetCalculatorConfigRequestSchema)` to create a new message.
 */
export const GetCalculatorConfigRequestSchema: GenMessage<GetCalculatorConfigRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 20);

/**
 * Response message for the Cost.GetCalculatorConfig rpc.
 *
 * @generated from message blueapi.cost.v1.GetCalculatorConfigResponse
 */
export type GetCalculatorConfigResponse = Message<"blueapi.cost.v1.GetCalculatorConfigResponse"> & {
  /**
   * @generated from field: blueapi.api.aws.CalculatorConfig aws = 1;
   */
  aws?: CalculatorConfig;
};

/**
 * Describes the message blueapi.cost.v1.GetCalculatorConfigResponse.
 * Use `create(GetCalculatorConfigResponseSchema)` to create a new message.
 */
export const GetCalculatorConfigResponseSchema: GenMessage<GetCalculatorConfigResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 21);

/**
 * AWS-specific options definition.
 *
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAwsOptions
 */
export type CalculatorCostModifierAwsOptions = Message<"blueapi.cost.v1.CalculatorCostModifierAwsOptions"> & {
  /**
   * Optional. The account to which the modifier is applied. A comma-separated list of accounts is also valid.
   *
   * @generated from field: string accountId = 1;
   */
  accountId: string;

  /**
   * Optional. The group to which the modifier is applied. Accepts billing internal ids. A comma-separated list of billing internal ids is also valid.
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional. The payer id to which the modifier is applied. A comma-separated list of payer ids is also valid.
   *
   * @generated from field: string payerId = 3;
   */
  payerId: string;

  /**
   * Optional. Conditional qualifiers to further filter the modifier targets. Multiple qualifiers use the logical `or` operator; `qualifiers[0] || qualifiers[1] || qualifiers[n]`.
   *
   * @generated from field: repeated blueapi.cost.v1.CalculatorCostModifierAwsOptions.Qualifier qualifiers = 4;
   */
  qualifiers: CalculatorCostModifierAwsOptions_Qualifier[];

  /**
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier modifier = 5;
   */
  modifier?: CalculatorCostModifierAwsOptions_Modifier;

  /**
   * Optional. Specifies the modifier id in which this modifier will be applied after. For example, if you have another modifier `mod1` and you create a new modifier with `after` set to `mod1`, the calculator will apply `mod1` first, then this modifier. If `after` is not set, the application sequence for multiple overlapping modifiers will be by update timestamp, newest to oldest.
   *
   * @generated from field: string after = 6;
   */
  after: string;

  /**
   * Optional. Default to false. If set to true, the modifier will create a new row in the table with similar data that satisfies the qualifier the only differences is it contains the amount to be subtracted or to be added. If set to false, the modifier will update the cost directly.
   *
   * @generated from field: bool createNewRow = 7;
   */
  createNewRow: boolean;
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAwsOptions.
 * Use `create(CalculatorCostModifierAwsOptionsSchema)` to create a new message.
 */
export const CalculatorCostModifierAwsOptionsSchema: GenMessage<CalculatorCostModifierAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 22);

/**
 * A map of "key:value" attribute filters. The key indicates the column name while the value is the filter value prefixed by either "eq:" (equal), "re:" (regular expressions based on https://github.com/google/re2), or "!re:" (reverse "re:"). No prefix is the same as "eq:". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.
 *
 * For example, if you like your modifiers to apply to `productCode:AmazonEC2`, set to `{"productCode":"eq:AmazonEC2"}` or `{"productCode":"AmazonEC2"}`. You can also use a regular expression like `{"productCode":"re:AmazonEC2|AmazonRDS"}`, which means apply to all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{"productCode":"!re:^AmazonEC2$"}`, which means apply to all items except `AmazonEC2`. Valid keys are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `description`, and `resourceId`.
 *
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAwsOptions.Qualifier
 */
export type CalculatorCostModifierAwsOptions_Qualifier = Message<"blueapi.cost.v1.CalculatorCostModifierAwsOptions.Qualifier"> & {
  /**
   * @generated from field: map<string, string> and = 1;
   */
  and: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAwsOptions.Qualifier.
 * Use `create(CalculatorCostModifierAwsOptions_QualifierSchema)` to create a new message.
 */
export const CalculatorCostModifierAwsOptions_QualifierSchema: GenMessage<CalculatorCostModifierAwsOptions_Qualifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 22, 0);

/**
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier
 */
export type CalculatorCostModifierAwsOptions_Modifier = Message<"blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier"> & {
  /**
   * Required. Our modifier formula. The final result should be a number. Integers are converted to floating points.
   *
   * Supported operators are `*`, `/`, `+`, `-`, and `%`. You can use parenthesis `()` to control precedence. Additional supported operators include `==`, `!=`, `!`, `>`, `<`, `>=`, `<=`, and the ternary operator `? :`, or `cond ? expr1 : expr2`.
   * Examples:
   *  `1 + 2 * 3` = 7
   *  `(1 + 2) * 3` = 9
   *  `7.8 % 5` = 2.8
   *  `true ? 1.1 : 2.2` = 1.1
   *  `1 > 2 ? 1.1 : 2.2` = 2.2
   *
   * You can use the `cost` variable to reference the original lineitem cost. For example, if you want to add $10 to the cost, you can use the formula: `cost + 10`. For trueunblended-type billing groups, `cost` refers to the calculated trueunblended cost.
   *
   * The `usage` variable refers to the usage amount of a lineitem. For example, if you want to use a different rate of $1.5, you can use the formula: `usage * 1.5`.
   *
   * The `unblendedcost` variable refers to the lineitem's unblended cost as indicated in the CUR. Note that the `unblendedcost` variable is different than the `cost` variable, although there are cases where the two are equal.
   *
   * The `ondemandrate` variable refers to the lineitem's public ondemand rate as indicated in the CUR.
   *
   * You can check out this [guide](https://alphauslabs.github.io/docs/guides/aws-cost-mods/) for more examples.
   *
   * @generated from field: string formula = 1;
   */
  formula: string;

  /**
   * Optional. A simple description modifier.
   *
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier.DescriptionModifier descriptionModifier = 2;
   */
  descriptionModifier?: CalculatorCostModifierAwsOptions_Modifier_DescriptionModifier;
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier.
 * Use `create(CalculatorCostModifierAwsOptions_ModifierSchema)` to create a new message.
 */
export const CalculatorCostModifierAwsOptions_ModifierSchema: GenMessage<CalculatorCostModifierAwsOptions_Modifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 22, 1);

/**
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier.DescriptionModifier
 */
export type CalculatorCostModifierAwsOptions_Modifier_DescriptionModifier = Message<"blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier.DescriptionModifier"> & {
  /**
   * Optional. Add a prefix to the description.
   *
   * @generated from field: string prefix = 1;
   */
  prefix: string;

  /**
   * Optional. Add a suffix to the description.
   *
   * @generated from field: string suffix = 2;
   */
  suffix: string;

  /**
   * Optional. Replace the description with the input.
   *
   * @generated from field: string replace = 3;
   */
  replace: string;

  /**
   * Optional. Replace matching occurences with the input. The key part is the regular expression matcher based on https://github.com/google/re2, while the value is the replacement. The order of replacement is not guaranteed.
   *
   * You can use the `{{ondemandrate}}` variable in the replacement value part to reference the public ondemand rate indicated in the CUR.
   *
   * @generated from field: map<string, string> replaceMatch = 4;
   */
  replaceMatch: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAwsOptions.Modifier.DescriptionModifier.
 * Use `create(CalculatorCostModifierAwsOptions_Modifier_DescriptionModifierSchema)` to create a new message.
 */
export const CalculatorCostModifierAwsOptions_Modifier_DescriptionModifierSchema: GenMessage<CalculatorCostModifierAwsOptions_Modifier_DescriptionModifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 22, 1, 0);

/**
 * Azure-specific options definition.
 *
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAzureOptions
 */
export type CalculatorCostModifierAzureOptions = Message<"blueapi.cost.v1.CalculatorCostModifierAzureOptions"> & {
  /**
   * Optional. The group to which the modifier is applied. Accepts billing internal ids. A comma-separated list of billing internal ids is also valid.
   *
   * @generated from field: string groupId = 1;
   */
  groupId: string;

  /**
   * Optional. The payer id (a.k.a Azure billing id) to which the modifier is applied. A comma-separated list of payer ids is also valid.
   *
   * @generated from field: string payerId = 2;
   */
  payerId: string;

  /**
   * Optional. The Azure customer id to which the modifier is applied. A comma-separated list of customers is also valid.
   *
   * @generated from field: string customerId = 3;
   */
  customerId: string;

  /**
   * Optional. The Azure subscription id to which the modifier is applied. A comma-separated list of subscriptions is also valid.
   *
   * @generated from field: string subscriptionId = 4;
   */
  subscriptionId: string;

  /**
   * Optional. The Azure entitlement id to which the modifier is applied. A comma-separated list of entitlements is also valid.
   *
   * @generated from field: string entitlementId = 5;
   */
  entitlementId: string;

  /**
   * Optional. Conditional qualifiers to further filter the modifier targets. Multiple qualifiers use the logical `or` operator; `qualifiers[0] || qualifiers[1] || qualifiers[n]`.
   *
   * @generated from field: repeated blueapi.cost.v1.CalculatorCostModifierAzureOptions.Qualifier qualifiers = 6;
   */
  qualifiers: CalculatorCostModifierAzureOptions_Qualifier[];

  /**
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier modifier = 7;
   */
  modifier?: CalculatorCostModifierAzureOptions_Modifier;

  /**
   * Optional. Specifies the modifier id in which this modifier will be applied after. For example, if you have another modifier `mod1` and you create a new modifier with `after` set to `mod1`, the calculator will apply `mod1` first, then this modifier. If `after` is not set, the application sequence for multiple overlapping modifiers will be by update timestamp, newest to oldest.
   *
   * @generated from field: string after = 8;
   */
  after: string;
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAzureOptions.
 * Use `create(CalculatorCostModifierAzureOptionsSchema)` to create a new message.
 */
export const CalculatorCostModifierAzureOptionsSchema: GenMessage<CalculatorCostModifierAzureOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 23);

/**
 * A map of "key:value" attribute filters. The key indicates the column name while the value is the filter value prefixed by either "eq:" (equal), "re:" (regular expressions based on https://github.com/google/re2), or "!re:" (reverse "re:"). No prefix is the same as "eq:". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.
 *
 * For example, if you like your modifiers to apply to `productId:CFQ7TTC0LFLX` (Microsoft 365 E3), set to `{"productId":"eq:CFQ7TTC0LFLX"}` or `{"productId":"CFQ7TTC0LFLX"}`. You can also use a regular expression like `{"productId":"re:CFQ7TTC0LFLX|DZH318Z0BQ4L"}`, which means apply to all `Microsoft 365 E3` or `Virtual Machines Ev3 Series` lineitems. Or reverse regexp, such as `{"productId":"!re:^CFQ7TTC0LFLX$"}`, which means apply to all items except `Microsoft 365 E3`. Valid keys are `productId`, `productName`, `skuId`, `skuName`, `description`, `category` and `domainName`.
 *
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAzureOptions.Qualifier
 */
export type CalculatorCostModifierAzureOptions_Qualifier = Message<"blueapi.cost.v1.CalculatorCostModifierAzureOptions.Qualifier"> & {
  /**
   * @generated from field: map<string, string> and = 1;
   */
  and: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAzureOptions.Qualifier.
 * Use `create(CalculatorCostModifierAzureOptions_QualifierSchema)` to create a new message.
 */
export const CalculatorCostModifierAzureOptions_QualifierSchema: GenMessage<CalculatorCostModifierAzureOptions_Qualifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 23, 0);

/**
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier
 */
export type CalculatorCostModifierAzureOptions_Modifier = Message<"blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier"> & {
  /**
   * Required. Our modifier formula. The final result should be a number. Integers are converted to floating points.
   *
   * Supported operators are `*`, `/`, `+`, `-`, and `%`. You can use parenthesis `()` to control precedence. Additional supported operators include `==`, `!=`, `!`, `>`, `<`, `>=`, `<=`, and the ternary operator `? :`, or `cond ? expr1 : expr2`.
   * Examples:
   *  `1 + 2 * 3` = 7
   *  `(1 + 2) * 3` = 9
   *  `7.8 % 5` = 2.8
   *  `true ? 1.1 : 2.2` = 1.1
   *  `1 > 2 ? 1.1 : 2.2` = 2.2
   *
   * You can use the `cost` variable to reference the original lineitem cost. For example, if you want to add $10 to the cost, you can use the formula: `cost + 10`. For trueunblended-type billing groups, `cost` refers to the calculated trueunblended cost.
   *
   * The `quantity` variable refers to the billable quantity amount of a lineitem. For example, if you want to use a different rate of $1.5, you can use the formula: `quantity * 1.5`.
   *
   * The `unitPrice` variable refers to the lineitem's effective unit price as indicated in the Azure invoice.
   *
   * You can check out this [guide](https://alphauslabs.github.io/docs/guides/aws-cost-mods/) for more examples.
   *
   * @generated from field: string formula = 1;
   */
  formula: string;

  /**
   * Optional. A simple description modifier.
   *
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier.DescriptionModifier descriptionModifier = 2;
   */
  descriptionModifier?: CalculatorCostModifierAzureOptions_Modifier_DescriptionModifier;
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier.
 * Use `create(CalculatorCostModifierAzureOptions_ModifierSchema)` to create a new message.
 */
export const CalculatorCostModifierAzureOptions_ModifierSchema: GenMessage<CalculatorCostModifierAzureOptions_Modifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 23, 1);

/**
 * @generated from message blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier.DescriptionModifier
 */
export type CalculatorCostModifierAzureOptions_Modifier_DescriptionModifier = Message<"blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier.DescriptionModifier"> & {
  /**
   * Optional. Add a prefix to the description.
   *
   * @generated from field: string prefix = 1;
   */
  prefix: string;

  /**
   * Optional. Add a suffix to the description.
   *
   * @generated from field: string suffix = 2;
   */
  suffix: string;

  /**
   * Optional. Replace the description with the input.
   *
   * @generated from field: string replace = 3;
   */
  replace: string;
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifierAzureOptions.Modifier.DescriptionModifier.
 * Use `create(CalculatorCostModifierAzureOptions_Modifier_DescriptionModifierSchema)` to create a new message.
 */
export const CalculatorCostModifierAzureOptions_Modifier_DescriptionModifierSchema: GenMessage<CalculatorCostModifierAzureOptions_Modifier_DescriptionModifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 23, 1, 0);

/**
 * @generated from message blueapi.cost.v1.CalculatorCostModifier
 */
export type CalculatorCostModifier = Message<"blueapi.cost.v1.CalculatorCostModifier"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string createTime = 2;
   */
  createTime: string;

  /**
   * @generated from field: string updateTime = 3;
   */
  updateTime: string;

  /**
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAwsOptions awsOptions = 4;
   */
  awsOptions?: CalculatorCostModifierAwsOptions;

  /**
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAzureOptions azureOptions = 5;
   */
  azureOptions?: CalculatorCostModifierAzureOptions;
};

/**
 * Describes the message blueapi.cost.v1.CalculatorCostModifier.
 * Use `create(CalculatorCostModifierSchema)` to create a new message.
 */
export const CalculatorCostModifierSchema: GenMessage<CalculatorCostModifier> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 24);

/**
 * Request message for the Cost.ListCalculatorCostModifiers rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculatorCostModifiersRequest
 */
export type ListCalculatorCostModifiersRequest = Message<"blueapi.cost.v1.ListCalculatorCostModifiersRequest"> & {
  /**
   * Required. At the moment, only `aws` and `azure` are supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculatorCostModifiersRequest.
 * Use `create(ListCalculatorCostModifiersRequestSchema)` to create a new message.
 */
export const ListCalculatorCostModifiersRequestSchema: GenMessage<ListCalculatorCostModifiersRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 25);

/**
 * Request message for the Cost.CreateCalculatorCostModifier rpc.
 *
 * @generated from message blueapi.cost.v1.CreateCalculatorCostModifierRequest
 */
export type CreateCalculatorCostModifierRequest = Message<"blueapi.cost.v1.CreateCalculatorCostModifierRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required if `{vendor}` is `aws`. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAwsOptions awsOptions = 2;
   */
  awsOptions?: CalculatorCostModifierAwsOptions;

  /**
   * Required if `{vendor}` is `azure`. Azure-specific options.
   *
   * @generated from field: blueapi.cost.v1.CalculatorCostModifierAzureOptions azureOptions = 3;
   */
  azureOptions?: CalculatorCostModifierAzureOptions;
};

/**
 * Describes the message blueapi.cost.v1.CreateCalculatorCostModifierRequest.
 * Use `create(CreateCalculatorCostModifierRequestSchema)` to create a new message.
 */
export const CreateCalculatorCostModifierRequestSchema: GenMessage<CreateCalculatorCostModifierRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 26);

/**
 * Response message for the Cost.CreateCalculatorCostModifier rpc.
 *
 * @generated from message blueapi.cost.v1.CreateCalculatorCostModifierResponse
 */
export type CreateCalculatorCostModifierResponse = Message<"blueapi.cost.v1.CreateCalculatorCostModifierResponse"> & {
  /**
   * @generated from field: repeated blueapi.cost.v1.CalculatorCostModifier aws = 1;
   */
  aws: CalculatorCostModifier[];

  /**
   * @generated from field: repeated blueapi.cost.v1.CalculatorCostModifier azure = 2;
   */
  azure: CalculatorCostModifier[];
};

/**
 * Describes the message blueapi.cost.v1.CreateCalculatorCostModifierResponse.
 * Use `create(CreateCalculatorCostModifierResponseSchema)` to create a new message.
 */
export const CreateCalculatorCostModifierResponseSchema: GenMessage<CreateCalculatorCostModifierResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 27);

/**
 * Request message for the Cost.DeleteCalculatorCostModifier rpc.
 *
 * @generated from message blueapi.cost.v1.DeleteCalculatorCostModifierRequest
 */
export type DeleteCalculatorCostModifierRequest = Message<"blueapi.cost.v1.DeleteCalculatorCostModifierRequest"> & {
  /**
   * Required. At the moment, only `aws` and `azure` are supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The id of the modifier to delete.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteCalculatorCostModifierRequest.
 * Use `create(DeleteCalculatorCostModifierRequestSchema)` to create a new message.
 */
export const DeleteCalculatorCostModifierRequestSchema: GenMessage<DeleteCalculatorCostModifierRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 28);

/**
 * Request message for the Cost.ImportCurFiles rpc.
 *
 * @generated from message blueapi.cost.v1.ImportCurFilesRequest
 */
export type ImportCurFilesRequest = Message<"blueapi.cost.v1.ImportCurFilesRequest"> & {
  /**
   * Optional. The UTC month to import. If empty, it defaults to the current month. Format is `yyyymm`. For example, June 2021 will be `202106`.
   *
   * @generated from field: string month = 1;
   */
  month: string;

  /**
   * Optional. A comma-separated list of management accounts to import. If empty, all CURs associated with all your management accounts will be imported.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;
};

/**
 * Describes the message blueapi.cost.v1.ImportCurFilesRequest.
 * Use `create(ImportCurFilesRequestSchema)` to create a new message.
 */
export const ImportCurFilesRequestSchema: GenMessage<ImportCurFilesRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 29);

/**
 * Response message wrapper for cloud costs.
 *
 * @generated from message blueapi.cost.v1.CostItem
 */
export type CostItem = Message<"blueapi.cost.v1.CostItem"> & {
  /**
   * @generated from field: blueapi.api.aws.Cost aws = 1;
   */
  aws?: Cost$1;

  /**
   * @generated from field: blueapi.api.gcp.Cost gcp = 2;
   */
  gcp?: Cost$2;

  /**
   * @generated from field: blueapi.api.azure.Cost azure = 3;
   */
  azure?: Cost$3;
};

/**
 * Describes the message blueapi.cost.v1.CostItem.
 * Use `create(CostItemSchema)` to create a new message.
 */
export const CostItemSchema: GenMessage<CostItem> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 30);

/**
 * @generated from message blueapi.cost.v1.CalculateCostsRequestAwsOptions
 */
export type CalculateCostsRequestAwsOptions = Message<"blueapi.cost.v1.CalculateCostsRequestAwsOptions"> & {
  /**
   * Optional. If set to true, discard existing calculation operation(s), if any, and make this as the active/latest one. By default, if there is an ongoing operation during the call, the request will fail.
   *
   * @generated from field: bool force = 1;
   */
  force: boolean;

  /**
   * Optional. If set to true, only calculate for account-type billing groups. If both `accountsOnly` and `tagsOnly` are set to true, `accountsOnly` will prevail.
   *
   * @generated from field: bool accountsOnly = 2;
   */
  accountsOnly: boolean;

  /**
   * Optional. If set to true, only calculate for tags-type billing groups. Discarded when the organization doesn't have any tag-based billing groups configured. If both `accountsOnly` and `tagsOnly` are set to true, `accountsOnly` will prevail.
   *
   * @generated from field: bool tagsOnly = 3;
   */
  tagsOnly: boolean;
};

/**
 * Describes the message blueapi.cost.v1.CalculateCostsRequestAwsOptions.
 * Use `create(CalculateCostsRequestAwsOptionsSchema)` to create a new message.
 */
export const CalculateCostsRequestAwsOptionsSchema: GenMessage<CalculateCostsRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 31);

/**
 * Request message for the Cost.CalculateCosts rpc.
 *
 * @generated from message blueapi.cost.v1.CalculateCostsRequest
 */
export type CalculateCostsRequest = Message<"blueapi.cost.v1.CalculateCostsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. A comma-separated list of billing internal ids. If empty, calculate for all billing groups.
   *
   * At the moment, for AWS, this is only valid for account type billing groups, not tag billing groups. If a tag billing group is provided, it is discarded and the calculation is done for the whole organization.
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional. The UTC month to calculate. If empty, it defaults to the previous month. Format is `yyyymm`. For example, June 2021 will be `202106`.
   *
   * @generated from field: string month = 3;
   */
  month: string;

  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.CalculateCostsRequestAwsOptions awsOptions = 4;
   */
  awsOptions?: CalculateCostsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.CalculateCostsRequest.
 * Use `create(CalculateCostsRequestSchema)` to create a new message.
 */
export const CalculateCostsRequestSchema: GenMessage<CalculateCostsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 32);

/**
 * Request message for the Cost.ListCalculationsHistory rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculationsHistoryRequest
 */
export type ListCalculationsHistoryRequest = Message<"blueapi.cost.v1.ListCalculationsHistoryRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. List operations on and after this date. Format is yyyymmdd. For example, if you want to list all operations starting from June 01, 2021, set to `20210601`. If not set, defaults to the first day of the current UTC month.
   *
   * @generated from field: string asOf = 2;
   */
  asOf: string;

  /**
   * Optional. If true, exclude all operations that are marked as done. Include by default.
   *
   * @generated from field: bool excludeDone = 3;
   */
  excludeDone: boolean;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationsHistoryRequest.
 * Use `create(ListCalculationsHistoryRequestSchema)` to create a new message.
 */
export const ListCalculationsHistoryRequestSchema: GenMessage<ListCalculationsHistoryRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 33);

/**
 * AWS-specific response message for the Cost.ListCalculationsHistory rpc. Should be compatible with the Operations API.
 *
 * @generated from message blueapi.cost.v1.ListCalculationsHistoryAwsResponse
 */
export type ListCalculationsHistoryAwsResponse = Message<"blueapi.cost.v1.ListCalculationsHistoryAwsResponse"> & {
  /**
   * @generated from field: repeated protos.Operation operations = 1;
   */
  operations: Operation[];
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationsHistoryAwsResponse.
 * Use `create(ListCalculationsHistoryAwsResponseSchema)` to create a new message.
 */
export const ListCalculationsHistoryAwsResponseSchema: GenMessage<ListCalculationsHistoryAwsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 34);

/**
 * Response message for the Cost.ListCalculationsHistory rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculationsHistoryResponse
 */
export type ListCalculationsHistoryResponse = Message<"blueapi.cost.v1.ListCalculationsHistoryResponse"> & {
  /**
   * @generated from field: blueapi.cost.v1.ListCalculationsHistoryAwsResponse aws = 1;
   */
  aws?: ListCalculationsHistoryAwsResponse;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationsHistoryResponse.
 * Use `create(ListCalculationsHistoryResponseSchema)` to create a new message.
 */
export const ListCalculationsHistoryResponseSchema: GenMessage<ListCalculationsHistoryResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 35);

/**
 * @generated from message blueapi.cost.v1.CalculationsSchedule
 */
export type CalculationsSchedule = Message<"blueapi.cost.v1.CalculationsSchedule"> & {
  /**
   * The schedule id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The desired schedule in UTC, using the [cron](https://man7.org/linux/man-pages/man5/crontab.5.html) format.
   *
   * @generated from field: string schedule = 2;
   */
  schedule: string;

  /**
   * The macro that augments `schedule`.
   *
   * @generated from field: string scheduleMacro = 8;
   */
  scheduleMacro: string;

  /**
   * The target month for the calculation. Empty means previous month (default).
   *
   * @generated from field: string targetMonth = 9;
   */
  targetMonth: string;

  /**
   * The schedule for the next run in UTC.
   *
   * @generated from field: string nextRun = 3;
   */
  nextRun: string;

  /**
   * The channel id to use for notifications.
   *
   * @generated from field: string notificationChannel = 4;
   */
  notificationChannel: string;

  /**
   * If set to true, force calculations to proceed regardless of run status.
   *
   * @generated from field: bool force = 5;
   */
  force: boolean;

  /**
   * If set to true, skips the actual calculations.
   *
   * @generated from field: bool dryRun = 6;
   */
  dryRun: boolean;

  /**
   * The current state of this schedule. Normally set to "OK", or empty if no issues. Otherwise, will contain an error string.
   *
   * @generated from field: string status = 7;
   */
  status: string;
};

/**
 * Describes the message blueapi.cost.v1.CalculationsSchedule.
 * Use `create(CalculationsScheduleSchema)` to create a new message.
 */
export const CalculationsScheduleSchema: GenMessage<CalculationsSchedule> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 36);

/**
 * Request message for the Cost.ListCalculationsSchedules rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculationsSchedulesRequest
 */
export type ListCalculationsSchedulesRequest = Message<"blueapi.cost.v1.ListCalculationsSchedulesRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationsSchedulesRequest.
 * Use `create(ListCalculationsSchedulesRequestSchema)` to create a new message.
 */
export const ListCalculationsSchedulesRequestSchema: GenMessage<ListCalculationsSchedulesRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 37);

/**
 * Response message for the Cost.ListCalculationsSchedules rpc.
 *
 * @generated from message blueapi.cost.v1.ListCalculationsSchedulesResponse
 */
export type ListCalculationsSchedulesResponse = Message<"blueapi.cost.v1.ListCalculationsSchedulesResponse"> & {
  /**
   * @generated from field: repeated blueapi.cost.v1.CalculationsSchedule schedules = 1;
   */
  schedules: CalculationsSchedule[];
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationsSchedulesResponse.
 * Use `create(ListCalculationsSchedulesResponseSchema)` to create a new message.
 */
export const ListCalculationsSchedulesResponseSchema: GenMessage<ListCalculationsSchedulesResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 38);

/**
 * Request message for the Cost.CreateCalculationsSchedule rpc.
 *
 * @generated from message blueapi.cost.v1.CreateCalculationsScheduleRequest
 */
export type CreateCalculationsScheduleRequest = Message<"blueapi.cost.v1.CreateCalculationsScheduleRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The desired schedule in UTC, using the unix-cron string format `* * * * *` which is a set of five fields in a line using the order: `minute hour day-of-the-month month day-of-the-week`.
   *
   * * `minute` values can be `0-59`
   * * `hour` values can be `0-23`
   * * `day-of-the-month` values can be `1-31`
   * * `month` values can be `1-12`, or `JAN-DEC`
   * * `day-of-the-week` values can be `0-6`, or `SUN-SAT`, or `7` for Sunday
   *
   * Special characters:
   * * A field can contain an asterisk (*), which always stands for "first-last".
   * * Ranges are two numbers separated with a hyphen (-) and the specified range is inclusive.
   * * Following a range with `/NUMBER` specifies skips of the number's value through the range. For example, both `0-23/2` and `*\/2` can be used in the `hour` field to specify execution every two hours.
   * * A list is a set of numbers (or ranges) separated by commas (,). For example, `1,2,5,6` in the `month` field specifies an execution on the first, second, fifth, and sixth days of the month.
   *
   * @generated from field: string schedule = 2;
   */
  schedule: string;

  /**
   * Optional. Non-standard macro(s) that augment(s) `schedule`'s behavior. The only supported value for now is `@endofmonth`.
   *
   * `@endofmonth` - If set, the backend scheduler will only use the `minute` and `hour` part of `schedule`'s value and set the days to 28th, 29th, 30th, and 31st but the runner will do the filtering for the actual end of the trigger month. Note that this is different than setting `schedule` to, say, `0 0 28-31 * *`.
   *
   * @generated from field: string scheduleMacro = 6;
   */
  scheduleMacro: string;

  /**
   * Optional. The desired month to calculate. If not set, defaults to previous month. The only supported value for now is `@current`.
   *
   * `@current` - If set, calculate for the month the schedule is triggered (or current month).
   *
   * @generated from field: string targetMonth = 7;
   */
  targetMonth: string;

  /**
   * Optional. The channel id to use for notifications. At the moment, only email-type notification channels are supported. If not set, your default channel will be used. And if non-existent, an email-type notification channel will be created using your primary email address.
   *
   * @generated from field: string notificationChannel = 3;
   */
  notificationChannel: string;

  /**
   * Optional. Not used at the moment.
   *
   * @generated from field: bool force = 4;
   */
  force: boolean;

  /**
   * Optional. If set to true, skips the actual calculations. Useful as test, or reminder.
   *
   * @generated from field: bool dryRun = 5;
   */
  dryRun: boolean;
};

/**
 * Describes the message blueapi.cost.v1.CreateCalculationsScheduleRequest.
 * Use `create(CreateCalculationsScheduleRequestSchema)` to create a new message.
 */
export const CreateCalculationsScheduleRequestSchema: GenMessage<CreateCalculationsScheduleRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 39);

/**
 * Request message for the Cost.DeleteCalculationsSchedule rpc.
 *
 * @generated from message blueapi.cost.v1.DeleteCalculationsScheduleRequest
 */
export type DeleteCalculationsScheduleRequest = Message<"blueapi.cost.v1.DeleteCalculationsScheduleRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The id to delete. Can be set to either `-` or `*`, which means all.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteCalculationsScheduleRequest.
 * Use `create(DeleteCalculationsScheduleRequestSchema)` to create a new message.
 */
export const DeleteCalculationsScheduleRequestSchema: GenMessage<DeleteCalculationsScheduleRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 40);

/**
 * Request message for the Cost.ReadCostAttributes rpc.
 *
 * @generated from message blueapi.cost.v1.ReadCostAttributesRequest
 */
export type ReadCostAttributesRequest = Message<"blueapi.cost.v1.ReadCostAttributesRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. If set, reads the cost attributes of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.
   *
   * For AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the cost attributes of the whole organization. Optional for AWS Wave(Pro).
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional. You can set it to a single account or a comma-separated list of accounts.
   *
   * For AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the cost attributes of the whole organization.
   *
   * @generated from field: string accountId = 3;
   */
  accountId: string;

  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`.
   *
   * @generated from field: string startTime = 4;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 5;
   */
  endTime: string;

  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostAttributesRequest.AwsOptions awsOptions = 6;
   */
  awsOptions?: ReadCostAttributesRequest_AwsOptions;

  /**
   * @generated from field: blueapi.cost.v1.ReadCostAttributesRequest.AzureOptions azureOptions = 7;
   */
  azureOptions?: ReadCostAttributesRequest_AzureOptions;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostAttributesRequest.
 * Use `create(ReadCostAttributesRequestSchema)` to create a new message.
 */
export const ReadCostAttributesRequestSchema: GenMessage<ReadCostAttributesRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 41);

/**
 * @generated from message blueapi.cost.v1.ReadCostAttributesRequest.AwsOptions
 */
export type ReadCostAttributesRequest_AwsOptions = Message<"blueapi.cost.v1.ReadCostAttributesRequest.AwsOptions"> & {
  /**
   * Optional. A comma-separated list of dimensions to query. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, `resourceId`, `tags`, and `costCategories`. Sequence doesn't matter. An empty value implies all attributes will be returned.
   *
   * @generated from field: string dimensions = 1;
   */
  dimensions: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostAttributesRequest.AwsOptions.
 * Use `create(ReadCostAttributesRequest_AwsOptionsSchema)` to create a new message.
 */
export const ReadCostAttributesRequest_AwsOptionsSchema: GenMessage<ReadCostAttributesRequest_AwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 41, 0);

/**
 * @generated from message blueapi.cost.v1.ReadCostAttributesRequest.AzureOptions
 */
export type ReadCostAttributesRequest_AzureOptions = Message<"blueapi.cost.v1.ReadCostAttributesRequest.AzureOptions"> & {
  /**
   * Optional. The Azure customer id to which the modifier is applied. A comma-separated list of customers is also valid.
   *
   * @generated from field: string customerId = 1;
   */
  customerId: string;

  /**
   * Optional. The Azure subscription id to which the modifier is applied. A comma-separated list of subscriptions is also valid.
   *
   * @generated from field: string subscriptionId = 2;
   */
  subscriptionId: string;

  /**
   * Optional. The Azure entitlement id to which the modifier is applied. A comma-separated list of entitlements is also valid.
   *
   * @generated from field: string entitlementId = 3;
   */
  entitlementId: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostAttributesRequest.AzureOptions.
 * Use `create(ReadCostAttributesRequest_AzureOptionsSchema)` to create a new message.
 */
export const ReadCostAttributesRequest_AzureOptionsSchema: GenMessage<ReadCostAttributesRequest_AzureOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 41, 1);

/**
 * Response message for the Cost.ReadCostAttributes rpc.
 *
 * @generated from message blueapi.cost.v1.CostAttributeItem
 */
export type CostAttributeItem = Message<"blueapi.cost.v1.CostAttributeItem"> & {
  /**
   * @generated from field: blueapi.api.aws.CostAttribute aws = 1;
   */
  aws?: CostAttribute$1;

  /**
   * @generated from field: blueapi.api.azure.CostAttribute azure = 2;
   */
  azure?: CostAttribute$2;
};

/**
 * Describes the message blueapi.cost.v1.CostAttributeItem.
 * Use `create(CostAttributeItemSchema)` to create a new message.
 */
export const CostAttributeItemSchema: GenMessage<CostAttributeItem> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 42);

/**
 * Request message for the Cost.GetCostAttributes rpc.
 *
 * @generated from message blueapi.cost.v1.GetCostAttributesRequest
 */
export type GetCostAttributesRequest = Message<"blueapi.cost.v1.GetCostAttributesRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Format: `yyyy-mm`. 
   *
   * @generated from field: string month = 2;
   */
  month: string;

  /**
   * Optional. If set, reads the cost attributes of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.
   *
   * @generated from field: string groupId = 3;
   */
  groupId: string;

  /**
   * Optional. You can set it to a single account or a comma-separated list of accounts. If set, overrides `groupId`
   *
   * @generated from field: string accountId = 4;
   */
  accountId: string;

  /**
   * Optional. A comma-separated list of dimensions to query. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, `resourceId` and `tags`. Sequence doesn't matter. An empty value implies all attributes will be returned.
   *
   * @generated from field: string category = 5;
   */
  category: string;
};

/**
 * Describes the message blueapi.cost.v1.GetCostAttributesRequest.
 * Use `create(GetCostAttributesRequestSchema)` to create a new message.
 */
export const GetCostAttributesRequestSchema: GenMessage<GetCostAttributesRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 43);

/**
 * Response message for the Cost.GetCostAttributes rpc.
 *
 * @generated from message blueapi.cost.v1.GetCostAttributesResponse
 */
export type GetCostAttributesResponse = Message<"blueapi.cost.v1.GetCostAttributesResponse"> & {
  /**
   * The cost attributes.
   *
   * @generated from field: repeated blueapi.cost.v1.CostAttribute items = 1;
   */
  items: CostAttribute[];
};

/**
 * Describes the message blueapi.cost.v1.GetCostAttributesResponse.
 * Use `create(GetCostAttributesResponseSchema)` to create a new message.
 */
export const GetCostAttributesResponseSchema: GenMessage<GetCostAttributesResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 44);

/**
 * @generated from message blueapi.cost.v1.CostAttribute
 */
export type CostAttribute = Message<"blueapi.cost.v1.CostAttribute"> & {
  /**
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * @generated from field: string category = 2;
   */
  category: string;

  /**
   * @generated from field: repeated string data = 3;
   */
  data: string[];
};

/**
 * Describes the message blueapi.cost.v1.CostAttribute.
 * Use `create(CostAttributeSchema)` to create a new message.
 */
export const CostAttributeSchema: GenMessage<CostAttribute> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 45);

/**
 * A map of "key:value" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either "eq:" (equal), "re:" (regular expressions based on https://github.com/google/re2), or "!re:" (reverse "re:"). No prefix is the same as "eq:". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.
 *
 * For example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{"productCode":"eq:AmazonEC2"}` or `{"productCode":"AmazonEC2"}`. You can also use a regular expression like `{"productCode":"re:AmazonEC2|AmazonRDS"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{"productCode":"!re:^AmazonEC2$"}`, which means return all items except `AmazonEC2`.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequestAwsOptionsFilters
 */
export type ReadCostsRequestAwsOptionsFilters = Message<"blueapi.cost.v1.ReadCostsRequestAwsOptionsFilters"> & {
  /**
   * @generated from field: map<string, string> andFilters = 1;
   */
  andFilters: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequestAwsOptionsFilters.
 * Use `create(ReadCostsRequestAwsOptionsFiltersSchema)` to create a new message.
 */
export const ReadCostsRequestAwsOptionsFiltersSchema: GenMessage<ReadCostsRequestAwsOptionsFilters> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 46);

/**
 * AWS-specific options for ReadCostsRequest.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequestAwsOptions
 */
export type ReadCostsRequestAwsOptions = Message<"blueapi.cost.v1.ReadCostsRequestAwsOptions"> & {
  /**
   * Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.
   *
   * For example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty.
   *
   * @generated from field: string groupByColumns = 1;
   */
  groupByColumns: string;

  /**
   * Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. You can also use `groupByColumns` while setting this to true.
   *
   * @generated from field: bool groupByMonth = 2;
   */
  groupByMonth: boolean;

  /**
   * Optional. If set to true, group all input accounts into one.
   *
   * @generated from field: bool groupAccounts = 8;
   */
  groupAccounts: boolean;

  /**
   * Optional. Required if groupByColumn is set to tag.
   *
   * @generated from field: string groupByTagKey = 12;
   */
  groupByTagKey: string;

  /**
   * Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.
   *
   * @generated from field: repeated blueapi.cost.v1.ReadCostsRequestAwsOptionsFilters filters = 3;
   */
  filters: ReadCostsRequestAwsOptionsFilters[];

  /**
   * Optional. A list of filtering options specific for tags. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true.
   *
   * @generated from field: repeated blueapi.cost.v1.ReadCostsRequestAwsOptions.TagFilters tagFilters = 9;
   */
  tagFilters: ReadCostsRequestAwsOptions_TagFilters[];

  /**
   * Optional. If set to true, stream will include resource tags. Discarded when `groupByColumns` field is set to `none`. `IncludeTags` is set to `false` if `groupByColumns` includes `tags` and `GroupByTagKey` has a value
   *
   * @generated from field: bool includeTags = 4;
   */
  includeTags: boolean;

  /**
   * Optional. If set to true, stream will include resource cost category information. Discarded when `groupByColumns` field is set to `none`.
   *
   * @generated from field: bool includeCostCategories = 5;
   */
  includeCostCategories: boolean;

  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 6;
   */
  toCurrency: string;

  /**
   * Optional. If set to true, always get the up-to-date calculation results. This data isn't necessarily in-sync with your invoice data as AWS could still have updated your CUR files even after you created your invoices. By default, returned data are those that are always in-sync with your invoices.
   *
   * This field is discarded for Wave(Pro) users. You will always get the latest data that is in-sync with your invoices.
   *
   * @generated from field: bool forceLatest = 7;
   */
  forceLatest: boolean;

  /**
   * If true, force API to not use cached data.
   *
   * @generated from field: bool noCache = 10;
   */
  noCache: boolean;

  /**
   * WORK-IN-PROGRESS: Optional. If set to true, include adjustment entries in the output. Adjustments include fees, discounts, credits, etc. The output here is the same as the ReadAdjustments API.
   *
   * @generated from field: bool includeAdjustments = 11;
   */
  includeAdjustments: boolean;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequestAwsOptions.
 * Use `create(ReadCostsRequestAwsOptionsSchema)` to create a new message.
 */
export const ReadCostsRequestAwsOptionsSchema: GenMessage<ReadCostsRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 47);

/**
 * A map of "key:value" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either "eq:" (equal), "re:" (regular expressions based on https://github.com/google/re2), or "!re:" (reverse "re:"). No prefix is the same as "eq:". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.
 *
 * For example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{"project":"MY_PROJECT"}`. You can also use regular expressions for tag values, such as `{"name":"re:[A-Za-z0-9]*"}`.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequestAwsOptions.TagFilters
 */
export type ReadCostsRequestAwsOptions_TagFilters = Message<"blueapi.cost.v1.ReadCostsRequestAwsOptions.TagFilters"> & {
  /**
   * @generated from field: map<string, string> andFilters = 1;
   */
  andFilters: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequestAwsOptions.TagFilters.
 * Use `create(ReadCostsRequestAwsOptions_TagFiltersSchema)` to create a new message.
 */
export const ReadCostsRequestAwsOptions_TagFiltersSchema: GenMessage<ReadCostsRequestAwsOptions_TagFilters> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 47, 0);

/**
 * Request message for the Cost.ReadCosts rpc.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequest
 */
export type ReadCostsRequest = Message<"blueapi.cost.v1.ReadCostsRequest"> & {
  /**
   * Required. Supported vendors are `aws`,`azure` and `gcp`.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.
   *
   * For AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro).
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional. You can set it to a single account or a comma-separated list of accounts.
   *
   * For AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization.
   *
   * @generated from field: string accountId = 3;
   */
  accountId: string;

  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`.
   *
   * @generated from field: string startTime = 4;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 5;
   */
  endTime: string;

  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostsRequestAwsOptions awsOptions = 6;
   */
  awsOptions?: ReadCostsRequestAwsOptions;

  /**
   * Optional. Valid only for the `gcp` vendor. GCP-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostsRequestGcpOptions gcpOptions = 7;
   */
  gcpOptions?: ReadCostsRequestGcpOptions;

  /**
   * Optional. Valid only for the `azure` vendor. Azure-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostsRequestAzureOptions azureOptions = 8;
   */
  azureOptions?: ReadCostsRequestAzureOptions;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequest.
 * Use `create(ReadCostsRequestSchema)` to create a new message.
 */
export const ReadCostsRequestSchema: GenMessage<ReadCostsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 48);

/**
 * @generated from message blueapi.cost.v1.ReadAdjustmentsRequestAwsOptions
 */
export type ReadAdjustmentsRequestAwsOptions = Message<"blueapi.cost.v1.ReadAdjustmentsRequestAwsOptions"> & {
  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 1;
   */
  toCurrency: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadAdjustmentsRequestAwsOptions.
 * Use `create(ReadAdjustmentsRequestAwsOptionsSchema)` to create a new message.
 */
export const ReadAdjustmentsRequestAwsOptionsSchema: GenMessage<ReadAdjustmentsRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 49);

/**
 * Request message for the Cost.ReadAdjustments rpc.
 *
 * @generated from message blueapi.cost.v1.ReadAdjustmentsRequest
 */
export type ReadAdjustmentsRequest = Message<"blueapi.cost.v1.ReadAdjustmentsRequest"> & {
  /**
   * Required. At the moment, only `aws` or `azure` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. At the moment, only billing internal ids are supported. If set, reads the non-usage-based adjustment details of this group. Valid only if `accountId` is not set. If both `groupId` and `accountId` are not set, reads the adjustment details of the whole organization. Only valid for Ripple users. Implied (or discarded) for Wave(Pro) users.
   *
   * @generated from field: string groupId = 2;
   */
  groupId: string;

  /**
   * Optional. If set, reads the non-usaged-based adjustment details of this account. Also invalidates the `groupId` value even if set. If both `groupId` and `accountId` are not set, reads the adjustment details of the whole organization.
   *
   * @generated from field: string accountId = 3;
   */
  accountId: string;

  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string startTime = 4;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 5;
   */
  endTime: string;

  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadAdjustmentsRequestAwsOptions awsOptions = 6;
   */
  awsOptions?: ReadAdjustmentsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.ReadAdjustmentsRequest.
 * Use `create(ReadAdjustmentsRequestSchema)` to create a new message.
 */
export const ReadAdjustmentsRequestSchema: GenMessage<ReadAdjustmentsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 50);

/**
 * @generated from message blueapi.cost.v1.ReadTagCostsRequestAwsOptions
 */
export type ReadTagCostsRequestAwsOptions = Message<"blueapi.cost.v1.ReadTagCostsRequestAwsOptions"> & {
  /**
   * Optional. If set, only return data for this tagId.
   *
   * @generated from field: string tagId = 1;
   */
  tagId: string;

  /**
   * Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.
   *
   * For example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty.
   *
   * @generated from field: string groupByColumns = 2;
   */
  groupByColumns: string;

  /**
   * Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. You can also use `groupByColumns` while setting this to true.
   *
   * @generated from field: bool groupByMonth = 3;
   */
  groupByMonth: boolean;

  /**
   * Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.
   *
   * @generated from field: repeated blueapi.cost.v1.ReadCostsRequestAwsOptionsFilters filters = 4;
   */
  filters: ReadCostsRequestAwsOptionsFilters[];

  /**
   * Optional. A list of filtering options specific for tags. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true.
   *
   * @generated from field: repeated blueapi.cost.v1.ReadTagCostsRequestAwsOptions.TagFilters tagFilters = 5;
   */
  tagFilters: ReadTagCostsRequestAwsOptions_TagFilters[];

  /**
   * Optional. If set to true, stream will include resource tags. Discarded when `groupByColumns` field is set to `none`.
   *
   * @generated from field: bool includeTags = 6;
   */
  includeTags: boolean;

  /**
   * Optional. If set to true, stream will include resource cost category information. Discarded when `groupByColumns` field is set to `none`.
   *
   * @generated from field: bool includeCostCategories = 7;
   */
  includeCostCategories: boolean;

  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 8;
   */
  toCurrency: string;

  /**
   * Optional. If set to true, always get the up-to-date calculation results. This data isn't necessarily in-sync with your invoice data as AWS could still have updated your CUR files even after you created your invoices. By default, returned data are those that are always in-sync with your invoices.
   *
   * This field is discarded for Wave(Pro) users. You will always get the latest data that is in-sync with your invoices.
   *
   * @generated from field: bool forceLatest = 9;
   */
  forceLatest: boolean;

  /**
   * If true, force API to not use cached data.
   *
   * @generated from field: bool noCache = 10;
   */
  noCache: boolean;

  /**
   * Optional. If set, only return data list tags.
   *
   * @generated from field: repeated string tagIds = 11;
   */
  tagIds: string[];
};

/**
 * Describes the message blueapi.cost.v1.ReadTagCostsRequestAwsOptions.
 * Use `create(ReadTagCostsRequestAwsOptionsSchema)` to create a new message.
 */
export const ReadTagCostsRequestAwsOptionsSchema: GenMessage<ReadTagCostsRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 51);

/**
 * A map of "key:value" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either "eq:" (equal), "re:" (regular expressions based on https://github.com/google/re2), or "!re:" (reverse "re:"). No prefix is the same as "eq:". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.
 *
 * For example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{"project":"MY_PROJECT"}`. You can also use regular expressions for tag values, such as `{"name":"re:[A-Za-z0-9]*"}`.
 *
 * @generated from message blueapi.cost.v1.ReadTagCostsRequestAwsOptions.TagFilters
 */
export type ReadTagCostsRequestAwsOptions_TagFilters = Message<"blueapi.cost.v1.ReadTagCostsRequestAwsOptions.TagFilters"> & {
  /**
   * @generated from field: map<string, string> andFilters = 1;
   */
  andFilters: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.ReadTagCostsRequestAwsOptions.TagFilters.
 * Use `create(ReadTagCostsRequestAwsOptions_TagFiltersSchema)` to create a new message.
 */
export const ReadTagCostsRequestAwsOptions_TagFiltersSchema: GenMessage<ReadTagCostsRequestAwsOptions_TagFilters> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 51, 0);

/**
 * Request message for the Cost.ReadTagCosts rpc.
 *
 * @generated from message blueapi.cost.v1.ReadTagCostsRequest
 */
export type ReadTagCostsRequest = Message<"blueapi.cost.v1.ReadTagCostsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The billing internal id to stream.
   *
   * @generated from field: string billingInternalId = 2;
   */
  billingInternalId: string;

  /**
   * Optional. Timestamp to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string startTime = 3;
   */
  startTime: string;

  /**
   * Optional. Timestamp to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 4;
   */
  endTime: string;

  /**
   * Optional. Group services and costs by months in the range of `startTime` and `endTime`. If not set, daily data will be returned.
   *
   * @generated from field: bool groupByMonths = 5;
   */
  groupByMonths: boolean;

  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadTagCostsRequestAwsOptions awsOptions = 6;
   */
  awsOptions?: ReadTagCostsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.ReadTagCostsRequest.
 * Use `create(ReadTagCostsRequestSchema)` to create a new message.
 */
export const ReadTagCostsRequestSchema: GenMessage<ReadTagCostsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 52);

/**
 * Request message for the Cost.ReadNonTagCosts rpc.
 *
 * @generated from message blueapi.cost.v1.ReadNonTagCostsRequest
 */
export type ReadNonTagCostsRequest = Message<"blueapi.cost.v1.ReadNonTagCostsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The billing internal id to stream.
   *
   * @generated from field: string billingInternalId = 2;
   */
  billingInternalId: string;

  /**
   * Optional. Timestamp to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string startTime = 3;
   */
  startTime: string;

  /**
   * Optional. Timestamp to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 4;
   */
  endTime: string;

  /**
   * Optional. Group services and costs by months in the range of `startTime` and `endTime`. If not set, daily data will be returned.
   *
   * @generated from field: bool groupByMonths = 5;
   */
  groupByMonths: boolean;
};

/**
 * Describes the message blueapi.cost.v1.ReadNonTagCostsRequest.
 * Use `create(ReadNonTagCostsRequestSchema)` to create a new message.
 */
export const ReadNonTagCostsRequestSchema: GenMessage<ReadNonTagCostsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 53);

/**
 * Request message for GetForecasts per billing group.
 *
 * @generated from message blueapi.cost.v1.GetForecastsRequest
 */
export type GetForecastsRequest = Message<"blueapi.cost.v1.GetForecastsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. Company Id of Billing Group to retrieve. Default value is user's Company Id
   *
   * @generated from field: string billingInternalId = 2;
   */
  billingInternalId: string;

  /**
   * Optional. Forecast frequency. Valid values are `daily` and `monthly`. 
   * Default value is `daily`.
   *
   * @generated from field: string frequency = 3;
   */
  frequency: string;

  /**
   * Optional. Forecast granularity. Valid values are `account`, `category` and `product`. Default value is `account`.
   *
   * @generated from field: string level = 4;
   */
  level: string;

  /**
   * Optional. Start date to get cost forecast. If from_date is less than current date, historical costs are included. If from_date is greater than current date, only forecasted costs are returned. Format: `yyyy-mm-dd`.
   *
   * @generated from field: string fromDate = 5;
   */
  fromDate: string;

  /**
   * Optional. End date to get cost forecast. Currently, we only support 90 days forecasting from the first day of current month. Format: `yyyy-mm-dd`.
   *
   * @generated from field: string toDate = 6;
   */
  toDate: string;
};

/**
 * Describes the message blueapi.cost.v1.GetForecastsRequest.
 * Use `create(GetForecastsRequestSchema)` to create a new message.
 */
export const GetForecastsRequestSchema: GenMessage<GetForecastsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 54);

/**
 * Response message for GetForecasts per billing group.
 *
 * @generated from message blueapi.cost.v1.GetForecastsResponse
 */
export type GetForecastsResponse = Message<"blueapi.cost.v1.GetForecastsResponse"> & {
  /**
   * @generated from field: blueapi.api.BillingGroupForecast data = 1;
   */
  data?: BillingGroupForecast;
};

/**
 * Describes the message blueapi.cost.v1.GetForecastsResponse.
 * Use `create(GetForecastsResponseSchema)` to create a new message.
 */
export const GetForecastsResponseSchema: GenMessage<GetForecastsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 55);

/**
 * Request message for GetMonthlyCostForecast
 *
 * @generated from message blueapi.cost.v1.GetMonthlyCostForecastRequest
 */
export type GetMonthlyCostForecastRequest = Message<"blueapi.cost.v1.GetMonthlyCostForecastRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. 'account' or 'acctgroup'
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * Required. Account or AccountGroup Id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Optional. Start month to get cost forecast. Format: `yyyymm`.
   *
   * @generated from field: string fromDate = 4;
   */
  fromDate: string;

  /**
   * Optional. Last month to get cost forecast. Format: `yyyymm`.
   *
   * @generated from field: string toDate = 5;
   */
  toDate: string;
};

/**
 * Describes the message blueapi.cost.v1.GetMonthlyCostForecastRequest.
 * Use `create(GetMonthlyCostForecastRequestSchema)` to create a new message.
 */
export const GetMonthlyCostForecastRequestSchema: GenMessage<GetMonthlyCostForecastRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 56);

/**
 * Response message for GetMonthlyCostForecast
 *
 * @generated from message blueapi.cost.v1.GetMonthlyCostForecastResponse
 */
export type GetMonthlyCostForecastResponse = Message<"blueapi.cost.v1.GetMonthlyCostForecastResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated blueapi.api.MonthlyCostForecast data = 2;
   */
  data: MonthlyCostForecast[];

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;
};

/**
 * Describes the message blueapi.cost.v1.GetMonthlyCostForecastResponse.
 * Use `create(GetMonthlyCostForecastResponseSchema)` to create a new message.
 */
export const GetMonthlyCostForecastResponseSchema: GenMessage<GetMonthlyCostForecastResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 57);

/**
 * Request message for GetMonthOnMonthCostForecast
 *
 * @generated from message blueapi.cost.v1.GetMonthOnMonthCostForecastRequest
 */
export type GetMonthOnMonthCostForecastRequest = Message<"blueapi.cost.v1.GetMonthOnMonthCostForecastRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. 'account' or 'acctgroup'
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * Required. Account or AccountGroup Id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Optional. Default is current month. Format: `yyyymm`.
   *
   * @generated from field: string date = 4;
   */
  date: string;
};

/**
 * Describes the message blueapi.cost.v1.GetMonthOnMonthCostForecastRequest.
 * Use `create(GetMonthOnMonthCostForecastRequestSchema)` to create a new message.
 */
export const GetMonthOnMonthCostForecastRequestSchema: GenMessage<GetMonthOnMonthCostForecastRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 58);

/**
 * Response message for GetMonthOnMonthCostForecast
 *
 * @generated from message blueapi.cost.v1.GetMonthOnMonthCostForecastResponse
 */
export type GetMonthOnMonthCostForecastResponse = Message<"blueapi.cost.v1.GetMonthOnMonthCostForecastResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated blueapi.api.MonthOnMonthCostForecast data = 2;
   */
  data: MonthOnMonthCostForecast[];

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;
};

/**
 * Describes the message blueapi.cost.v1.GetMonthOnMonthCostForecastResponse.
 * Use `create(GetMonthOnMonthCostForecastResponseSchema)` to create a new message.
 */
export const GetMonthOnMonthCostForecastResponseSchema: GenMessage<GetMonthOnMonthCostForecastResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 59);

/**
 * Request message for GetMonthToDateCostForecast
 *
 * @generated from message blueapi.cost.v1.GetMonthToDateCostForecastRequest
 */
export type GetMonthToDateCostForecastRequest = Message<"blueapi.cost.v1.GetMonthToDateCostForecastRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. 'account' or 'acctgroup'
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * Required. Account or AccountGroup Id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Optional. Default is current month. Format: `yyyymm`.
   *
   * @generated from field: string date = 4;
   */
  date: string;
};

/**
 * Describes the message blueapi.cost.v1.GetMonthToDateCostForecastRequest.
 * Use `create(GetMonthToDateCostForecastRequestSchema)` to create a new message.
 */
export const GetMonthToDateCostForecastRequestSchema: GenMessage<GetMonthToDateCostForecastRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 60);

/**
 * Response message for GetMonthToDateCostForecast
 *
 * @generated from message blueapi.cost.v1.GetMonthToDateCostForecastResponse
 */
export type GetMonthToDateCostForecastResponse = Message<"blueapi.cost.v1.GetMonthToDateCostForecastResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: double budget = 2;
   */
  budget: number;

  /**
   * @generated from field: repeated blueapi.api.MonthToDateCostForecast data = 3;
   */
  data: MonthToDateCostForecast[];

  /**
   * @generated from field: string timestamp = 4;
   */
  timestamp: string;
};

/**
 * Describes the message blueapi.cost.v1.GetMonthToDateCostForecastResponse.
 * Use `create(GetMonthToDateCostForecastResponseSchema)` to create a new message.
 */
export const GetMonthToDateCostForecastResponseSchema: GenMessage<GetMonthToDateCostForecastResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 61);

/**
 * Request message for GetAccountBudget
 *
 * @generated from message blueapi.cost.v1.GetAccountBudgetRequest
 */
export type GetAccountBudgetRequest = Message<"blueapi.cost.v1.GetAccountBudgetRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. 'account' or 'acctgroup'
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * Required. Account or AccountGroup Id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Optional. Default is current year. Format: `yyyy`.
   *
   * @generated from field: string year = 4;
   */
  year: string;
};

/**
 * Describes the message blueapi.cost.v1.GetAccountBudgetRequest.
 * Use `create(GetAccountBudgetRequestSchema)` to create a new message.
 */
export const GetAccountBudgetRequestSchema: GenMessage<GetAccountBudgetRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 62);

/**
 * Response message for GetAccountBudget
 *
 * @generated from message blueapi.cost.v1.GetAccountBudgetResponse
 */
export type GetAccountBudgetResponse = Message<"blueapi.cost.v1.GetAccountBudgetResponse"> & {
  /**
   * @generated from field: blueapi.api.Budget data = 1;
   */
  data?: Budget;
};

/**
 * Describes the message blueapi.cost.v1.GetAccountBudgetResponse.
 * Use `create(GetAccountBudgetResponseSchema)` to create a new message.
 */
export const GetAccountBudgetResponseSchema: GenMessage<GetAccountBudgetResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 63);

/**
 * Request message for CreateAccountBudget
 *
 * @generated from message blueapi.cost.v1.CreateAccountBudgetRequest
 */
export type CreateAccountBudgetRequest = Message<"blueapi.cost.v1.CreateAccountBudgetRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. 'account' or 'acctgroup'
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * Required. Account or AccountGroup Id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: blueapi.api.Budget data = 4;
   */
  data?: Budget;
};

/**
 * Describes the message blueapi.cost.v1.CreateAccountBudgetRequest.
 * Use `create(CreateAccountBudgetRequestSchema)` to create a new message.
 */
export const CreateAccountBudgetRequestSchema: GenMessage<CreateAccountBudgetRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 64);

/**
 * Response message for CreateAccountBudget
 *
 * @generated from message blueapi.cost.v1.CreateAccountBudgetResponse
 */
export type CreateAccountBudgetResponse = Message<"blueapi.cost.v1.CreateAccountBudgetResponse"> & {
  /**
   * Budget Id
   *
   * @generated from field: string budgetId = 1;
   */
  budgetId: string;
};

/**
 * Describes the message blueapi.cost.v1.CreateAccountBudgetResponse.
 * Use `create(CreateAccountBudgetResponseSchema)` to create a new message.
 */
export const CreateAccountBudgetResponseSchema: GenMessage<CreateAccountBudgetResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 65);

/**
 * Request message for UpdateAccountBudget
 *
 * @generated from message blueapi.cost.v1.UpdateAccountBudgetRequest
 */
export type UpdateAccountBudgetRequest = Message<"blueapi.cost.v1.UpdateAccountBudgetRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Budget Id
   *
   * @generated from field: string budgetId = 2;
   */
  budgetId: string;

  /**
   * @generated from field: blueapi.api.Budget data = 3;
   */
  data?: Budget;
};

/**
 * Describes the message blueapi.cost.v1.UpdateAccountBudgetRequest.
 * Use `create(UpdateAccountBudgetRequestSchema)` to create a new message.
 */
export const UpdateAccountBudgetRequestSchema: GenMessage<UpdateAccountBudgetRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 66);

/**
 * Request message for DeleteAccountBudget
 *
 * @generated from message blueapi.cost.v1.DeleteAccountBudgetRequest
 */
export type DeleteAccountBudgetRequest = Message<"blueapi.cost.v1.DeleteAccountBudgetRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Budget Id
   *
   * @generated from field: string budgetId = 2;
   */
  budgetId: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteAccountBudgetRequest.
 * Use `create(DeleteAccountBudgetRequestSchema)` to create a new message.
 */
export const DeleteAccountBudgetRequestSchema: GenMessage<DeleteAccountBudgetRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 67);

/**
 * @generated from message blueapi.cost.v1.GetRecommendationsRequestAwsOptions
 */
export type GetRecommendationsRequestAwsOptions = Message<"blueapi.cost.v1.GetRecommendationsRequestAwsOptions"> & {
  /**
   * Required. Valid values: 'reservation', 'rightsizing', 'scheduling'. Only 'reservation' is supported for now.
   *
   * @generated from field: string recommendationType = 1;
   */
  recommendationType: string;

  /**
   * For recommendationType = 'reservation'. Optional. Valid values: 'combined', 'individual'
   * Default: 'combined'
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * For recommendationType = 'reservation'. Optional. List of Services ["AmazonEC2", "AmazonRDS", "AmazonElastiCache", "AmazonES", "AmazonRedshift"]. Default: Empty list.
   *
   * @generated from field: repeated string riServices = 3;
   */
  riServices: string[];

  /**
   * For recommendationType = 'reservation'. Optional. List of Services ["AmazonECS", "AmazonEKS", "AWSLambda"]. Default: Empty list.
   *
   * @generated from field: repeated string spServices = 4;
   */
  spServices: string[];

  /**
   * For recommendationType = 'reservation'. Optional. If set to "true", recommends EC2 Instance Savings Plan that will cover usage not covered by RI. Default: false.
   *
   * @generated from field: bool purchaseEC2SavingsPlan = 5;
   */
  purchaseEC2SavingsPlan: boolean;

  /**
   * For recommendationType = 'reservation'. Optional. Valid values: 'EC2Instance', 'Compute'. Default: 'EC2Instance'.
   *
   * @generated from field: string ec2SpProductFamily = 6;
   */
  ec2SpProductFamily: string;

  /**
   * For recommendationType = 'reservation'. Optional. Valid values: '1yr', '3yr'. Default: '1yr'.
   *
   * @generated from field: string term = 7;
   */
  term: string;

  /**
   * For recommendationType = 'reservation'. Optional. Valid values: 'standard', 'convertible'. Default: 'standard'.
   *
   * @generated from field: string offeringClass = 8;
   */
  offeringClass: string;

  /**
   * For recommendationType = 'reservation'. Optional. Valid values: 'allUpfront', 'partialUpfront', 'noUpfront'. Default: 'allUpfront'.
   *
   * @generated from field: string paymentOption = 9;
   */
  paymentOption: string;

  /**
   * For recommendationType = 'reservation'. Optional. Percentage of the usage (in NormalizedUnits) to be covered by Reserved Instance or Savings Plan. Default: 100.
   *
   * @generated from field: double coveragePercentage = 10;
   */
  coveragePercentage: number;
};

/**
 * Describes the message blueapi.cost.v1.GetRecommendationsRequestAwsOptions.
 * Use `create(GetRecommendationsRequestAwsOptionsSchema)` to create a new message.
 */
export const GetRecommendationsRequestAwsOptionsSchema: GenMessage<GetRecommendationsRequestAwsOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 68);

/**
 * Request message for GetRecommendations
 *
 * @generated from message blueapi.cost.v1.GetRecommendationsRequest
 */
export type GetRecommendationsRequest = Message<"blueapi.cost.v1.GetRecommendationsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Organization Id.
   *
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * Required. List of Account Ids.
   *
   * @generated from field: repeated string accounts = 3;
   */
  accounts: string[];

  /**
   * Required. For OCTO only.
   *
   * @generated from field: string costGroupId = 4;
   */
  costGroupId: string;

  /**
   * Required if vendor = 'aws'
   *
   * @generated from field: blueapi.cost.v1.GetRecommendationsRequestAwsOptions awsOptions = 5;
   */
  awsOptions?: GetRecommendationsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.GetRecommendationsRequest.
 * Use `create(GetRecommendationsRequestSchema)` to create a new message.
 */
export const GetRecommendationsRequestSchema: GenMessage<GetRecommendationsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 69);

/**
 * Request message for GetRecommendations
 *
 * @generated from message blueapi.cost.v1.GetRecommendationsResponse
 */
export type GetRecommendationsResponse = Message<"blueapi.cost.v1.GetRecommendationsResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: blueapi.api.aws.AwsRecommendations awsRecommendations = 2;
   */
  awsRecommendations?: AwsRecommendations;
};

/**
 * Describes the message blueapi.cost.v1.GetRecommendationsResponse.
 * Use `create(GetRecommendationsResponseSchema)` to create a new message.
 */
export const GetRecommendationsResponseSchema: GenMessage<GetRecommendationsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 70);

/**
 * Request message for GetCostReduction
 *
 * @generated from message blueapi.cost.v1.GetCostReductionRequest
 */
export type GetCostReductionRequest = Message<"blueapi.cost.v1.GetCostReductionRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Organization Id.
   *
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * Required. Valid values: 'all', 'reservation', 'savingsplan'
   *
   * @generated from field: string reductionDisplay = 3;
   */
  reductionDisplay: string;

  /**
   * Optional. If set to "true", details of the RI or SP list is returned. Default: false.
   *
   * @generated from field: bool includeDetails = 4;
   */
  includeDetails: boolean;

  /**
   * Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string fromDate = 5;
   */
  fromDate: string;

  /**
   * Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string toDate = 6;
   */
  toDate: string;

  /**
   * Optional. Payer Id.
   *
   * @generated from field: string payerId = 7;
   */
  payerId: string;

  /**
   * Optional. Billing group Id.
   *
   * @generated from field: string billingInternalId = 8;
   */
  billingInternalId: string;

  /**
   * Optional. Account group Id.
   *
   * @generated from field: string groupId = 9;
   */
  groupId: string;

  /**
   * Optional. Cost Group Id used in octo.
   *
   * @generated from field: string costGroupId = 10;
   */
  costGroupId: string;

  /**
   * Optional. List of Account Ids.
   *
   * @generated from field: repeated string accounts = 11;
   */
  accounts: string[];

  /**
   * Optional. List of services.
   *
   * @generated from field: repeated string services = 12;
   */
  services: string[];
};

/**
 * Describes the message blueapi.cost.v1.GetCostReductionRequest.
 * Use `create(GetCostReductionRequestSchema)` to create a new message.
 */
export const GetCostReductionRequestSchema: GenMessage<GetCostReductionRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 71);

/**
 * Response message for GetCostReduction
 *
 * @generated from message blueapi.cost.v1.GetCostReductionResponse
 */
export type GetCostReductionResponse = Message<"blueapi.cost.v1.GetCostReductionResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: blueapi.api.aws.AwsCostReductions awsCostReductions = 2;
   */
  awsCostReductions?: AwsCostReductions;
};

/**
 * Describes the message blueapi.cost.v1.GetCostReductionResponse.
 * Use `create(GetCostReductionResponseSchema)` to create a new message.
 */
export const GetCostReductionResponseSchema: GenMessage<GetCostReductionResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 72);

/**
 * @generated from message blueapi.cost.v1.GetExportRISPRequest
 */
export type GetExportRISPRequest = Message<"blueapi.cost.v1.GetExportRISPRequest"> & {
  /**
   * Required. For AWS, "ri" or "sp".
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Usually the language of the user information is used, 
   * but it may be a different language due to cahce.
   * In that case, you can use this option to change the language of CSV.
   *
   * @generated from field: string language = 2;
   */
  language: string;

  /**
   * Required. Include expired
   *
   * @generated from field: bool includeExpired = 3;
   */
  includeExpired: boolean;
};

/**
 * Describes the message blueapi.cost.v1.GetExportRISPRequest.
 * Use `create(GetExportRISPRequestSchema)` to create a new message.
 */
export const GetExportRISPRequestSchema: GenMessage<GetExportRISPRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 73);

/**
 * Request message for the ExportBillingGroupInvoiceServiceDiscounts rpc.
 *
 * @generated from message blueapi.cost.v1.GetExportRISPResponse
 */
export type GetExportRISPResponse = Message<"blueapi.cost.v1.GetExportRISPResponse"> & {
  /**
   * csv direct download link
   * expires in 10 minutes
   *
   * @generated from field: string downloadLink = 1;
   */
  downloadLink: string;
};

/**
 * Describes the message blueapi.cost.v1.GetExportRISPResponse.
 * Use `create(GetExportRISPResponseSchema)` to create a new message.
 */
export const GetExportRISPResponseSchema: GenMessage<GetExportRISPResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 74);

/**
 * Request message for GetUtilization
 *
 * @generated from message blueapi.cost.v1.GetUtilizationRequest
 */
export type GetUtilizationRequest = Message<"blueapi.cost.v1.GetUtilizationRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Organization Id.
   *
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * Required. For AWS, "ri" or "sp".
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string fromDate = 4;
   */
  fromDate: string;

  /**
   * Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string toDate = 5;
   */
  toDate: string;

  /**
   * Optional. Payer Id.
   *
   * @generated from field: string payerId = 6;
   */
  payerId: string;

  /**
   * Optional. Billing group Id.
   *
   * @generated from field: string billingInternalId = 7;
   */
  billingInternalId: string;

  /**
   * Optional. Account group Id.
   *
   * @generated from field: string groupId = 8;
   */
  groupId: string;

  /**
   * Optional. Cost Group Id used in octo.
   *
   * @generated from field: string costGroupId = 9;
   */
  costGroupId: string;
};

/**
 * Describes the message blueapi.cost.v1.GetUtilizationRequest.
 * Use `create(GetUtilizationRequestSchema)` to create a new message.
 */
export const GetUtilizationRequestSchema: GenMessage<GetUtilizationRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 75);

/**
 * Response message for GetUtilization
 *
 * @generated from message blueapi.cost.v1.GetUtilizationResponse
 */
export type GetUtilizationResponse = Message<"blueapi.cost.v1.GetUtilizationResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: repeated blueapi.api.UtilizationData utilizationData = 2;
   */
  utilizationData: UtilizationData[];
};

/**
 * Describes the message blueapi.cost.v1.GetUtilizationResponse.
 * Use `create(GetUtilizationResponseSchema)` to create a new message.
 */
export const GetUtilizationResponseSchema: GenMessage<GetUtilizationResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 76);

/**
 * Request message for GetCoverageOptions
 *
 * @generated from message blueapi.cost.v1.GetCoverageOptionsRequest
 */
export type GetCoverageOptionsRequest = Message<"blueapi.cost.v1.GetCoverageOptionsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Organization Id.
   *
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * Required. Available values: day, hour.
   *
   * @generated from field: string period = 3;
   */
  period: string;

  /**
   * Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string fromDate = 4;
   */
  fromDate: string;

  /**
   * Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string toDate = 5;
   */
  toDate: string;

  /**
   * Optional. Payer Id.
   *
   * @generated from field: string payerId = 6;
   */
  payerId: string;

  /**
   * Optional. Billing group Id.
   *
   * @generated from field: string billingInternalId = 7;
   */
  billingInternalId: string;

  /**
   * Optional. Account group Id.
   *
   * @generated from field: string groupId = 8;
   */
  groupId: string;

  /**
   * Optional. Cost Group Id
   *
   * @generated from field: string costGroupId = 9;
   */
  costGroupId: string;

  /**
   * Optional. List of Account Ids.
   *
   * @generated from field: repeated string accounts = 10;
   */
  accounts: string[];

  /**
   * Optional. List of services.
   *
   * @generated from field: repeated string services = 11;
   */
  services: string[];

  /**
   * Optional. If not set, default value is `USD`.
   *
   * @generated from field: string currency = 12;
   */
  currency: string;
};

/**
 * Describes the message blueapi.cost.v1.GetCoverageOptionsRequest.
 * Use `create(GetCoverageOptionsRequestSchema)` to create a new message.
 */
export const GetCoverageOptionsRequestSchema: GenMessage<GetCoverageOptionsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 77);

/**
 * Response message for GetCoverageOptions
 *
 * @generated from message blueapi.cost.v1.GetCoverageOptionsResponse
 */
export type GetCoverageOptionsResponse = Message<"blueapi.cost.v1.GetCoverageOptionsResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: repeated blueapi.api.OptionsData optionsData = 2;
   */
  optionsData: OptionsData[];
};

/**
 * Describes the message blueapi.cost.v1.GetCoverageOptionsResponse.
 * Use `create(GetCoverageOptionsResponseSchema)` to create a new message.
 */
export const GetCoverageOptionsResponseSchema: GenMessage<GetCoverageOptionsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 78);

/**
 * Request message for GetCoverageOndemand
 *
 * @generated from message blueapi.cost.v1.GetCoverageOndemandRequest
 */
export type GetCoverageOndemandRequest = Message<"blueapi.cost.v1.GetCoverageOndemandRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Organization Id.
   *
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * Required. Available values: day, hour
   *
   * @generated from field: string period = 3;
   */
  period: string;

  /**
   * Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string fromDate = 4;
   */
  fromDate: string;

  /**
   * Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd.
   *
   * @generated from field: string toDate = 5;
   */
  toDate: string;

  /**
   * Optional. Payer Id.
   *
   * @generated from field: string payerId = 6;
   */
  payerId: string;

  /**
   * Optional. Billing group Id.
   *
   * @generated from field: string billingInternalId = 7;
   */
  billingInternalId: string;

  /**
   * Optional. Account group Id.
   *
   * @generated from field: string groupId = 8;
   */
  groupId: string;

  /**
   * Optional. Cost Group Id, currently used in octo
   *
   * @generated from field: string costGroupId = 9;
   */
  costGroupId: string;

  /**
   * Optional. List of Account Ids.
   *
   * @generated from field: repeated string accounts = 10;
   */
  accounts: string[];

  /**
   * Optional. List of services.
   *
   * @generated from field: repeated string services = 11;
   */
  services: string[];
};

/**
 * Describes the message blueapi.cost.v1.GetCoverageOndemandRequest.
 * Use `create(GetCoverageOndemandRequestSchema)` to create a new message.
 */
export const GetCoverageOndemandRequestSchema: GenMessage<GetCoverageOndemandRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 79);

/**
 * Response message for GetCoverageOndemand
 *
 * @generated from message blueapi.cost.v1.GetCoverageOndemandResponse
 */
export type GetCoverageOndemandResponse = Message<"blueapi.cost.v1.GetCoverageOndemandResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: repeated blueapi.api.OndemandData ondemandData = 2;
   */
  ondemandData: OndemandData[];
};

/**
 * Describes the message blueapi.cost.v1.GetCoverageOndemandResponse.
 * Use `create(GetCoverageOndemandResponseSchema)` to create a new message.
 */
export const GetCoverageOndemandResponseSchema: GenMessage<GetCoverageOndemandResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 80);

/**
 * Request message for GetBreakevenPoint
 *
 * @generated from message blueapi.cost.v1.GetBreakevenPointRequest
 */
export type GetBreakevenPointRequest = Message<"blueapi.cost.v1.GetBreakevenPointRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Organization Id.
   *
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * Required. For AWS, "ri" or "sp".
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * Required. RI/SP Arn.
   *
   * @generated from field: string arn = 4;
   */
  arn: string;
};

/**
 * Describes the message blueapi.cost.v1.GetBreakevenPointRequest.
 * Use `create(GetBreakevenPointRequestSchema)` to create a new message.
 */
export const GetBreakevenPointRequestSchema: GenMessage<GetBreakevenPointRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 81);

/**
 * Response message for GetBreakevenPoint
 *
 * @generated from message blueapi.cost.v1.GetBreakevenPointResponse
 */
export type GetBreakevenPointResponse = Message<"blueapi.cost.v1.GetBreakevenPointResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: blueapi.api.aws.AwsCostBreakeven awsCostBreakeven = 2;
   */
  awsCostBreakeven?: AwsCostBreakeven;
};

/**
 * Describes the message blueapi.cost.v1.GetBreakevenPointResponse.
 * Use `create(GetBreakevenPointResponseSchema)` to create a new message.
 */
export const GetBreakevenPointResponseSchema: GenMessage<GetBreakevenPointResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 82);

/**
 * Request message for the ListCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.ListCostFiltersRequest
 */
export type ListCostFiltersRequest = Message<"blueapi.cost.v1.ListCostFiltersRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;
};

/**
 * Describes the message blueapi.cost.v1.ListCostFiltersRequest.
 * Use `create(ListCostFiltersRequestSchema)` to create a new message.
 */
export const ListCostFiltersRequestSchema: GenMessage<ListCostFiltersRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 83);

/**
 * Response message for the ListCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.ListCostFiltersResponse
 */
export type ListCostFiltersResponse = Message<"blueapi.cost.v1.ListCostFiltersResponse"> & {
  /**
   * @generated from field: repeated blueapi.cost.v1.ListCostFilters costFilters = 1;
   */
  costFilters: ListCostFilters[];
};

/**
 * Describes the message blueapi.cost.v1.ListCostFiltersResponse.
 * Use `create(ListCostFiltersResponseSchema)` to create a new message.
 */
export const ListCostFiltersResponseSchema: GenMessage<ListCostFiltersResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 84);

/**
 * Response message for the ListCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.ListCostFilters
 */
export type ListCostFilters = Message<"blueapi.cost.v1.ListCostFilters"> & {
  /**
   * Required. Filter Id.
   *
   * @generated from field: string filterId = 1;
   */
  filterId: string;

  /**
   * Required. Filter Name.
   *
   * @generated from field: string filterName = 2;
   */
  filterName: string;

  /**
   * Required. Vendor.
   *
   * @generated from field: string vendor = 3;
   */
  vendor: string;

  /**
   * Optional. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.
   *
   * For AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro).
   *
   * @generated from field: string groupId = 4;
   */
  groupId: string;

  /**
   * Optional. You can set it to a single account or a comma-separated list of accounts.
   *
   * For AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization.
   *
   * @generated from field: string accountId = 5;
   */
  accountId: string;

  /**
   * Optional. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostsRequestAwsOptions awsOptions = 6;
   */
  awsOptions?: ReadCostsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.ListCostFilters.
 * Use `create(ListCostFiltersSchema)` to create a new message.
 */
export const ListCostFiltersSchema: GenMessage<ListCostFilters> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 85);

/**
 * Request message for the CreateCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.CreateCostFiltersRequest
 */
export type CreateCostFiltersRequest = Message<"blueapi.cost.v1.CreateCostFiltersRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Filter Name. Specify characters between 1 ~ 100
   *
   * @generated from field: string filterName = 2;
   */
  filterName: string;

  /**
   * Required. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.
   *
   * For AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro).
   *
   * @generated from field: string groupId = 3;
   */
  groupId: string;

  /**
   * Required. You can set it to a single account or a comma-separated list of accounts.
   *
   * For AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization.
   *
   * @generated from field: string accountId = 4;
   */
  accountId: string;

  /**
   * Required. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostsRequestAwsOptions awsOptions = 5;
   */
  awsOptions?: ReadCostsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.CreateCostFiltersRequest.
 * Use `create(CreateCostFiltersRequestSchema)` to create a new message.
 */
export const CreateCostFiltersRequestSchema: GenMessage<CreateCostFiltersRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 86);

/**
 * Response message for the CreateCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.CreateCostFiltersResponse
 */
export type CreateCostFiltersResponse = Message<"blueapi.cost.v1.CreateCostFiltersResponse"> & {
  /**
   * Required. Filter Id.
   *
   * @generated from field: string filterId = 1;
   */
  filterId: string;
};

/**
 * Describes the message blueapi.cost.v1.CreateCostFiltersResponse.
 * Use `create(CreateCostFiltersResponseSchema)` to create a new message.
 */
export const CreateCostFiltersResponseSchema: GenMessage<CreateCostFiltersResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 87);

/**
 * Request message for the UpdateCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.UpdateCostFiltersRequest
 */
export type UpdateCostFiltersRequest = Message<"blueapi.cost.v1.UpdateCostFiltersRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Filter Id.
   *
   * @generated from field: string filterId = 2;
   */
  filterId: string;

  /**
   * Required. Filter Name. Specify characters between 1 ~ 100
   *
   * @generated from field: string filterName = 3;
   */
  filterName: string;

  /**
   * Required. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.
   *
   * For AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro).
   *
   * @generated from field: string groupId = 4;
   */
  groupId: string;

  /**
   * Required. You can set it to a single account or a comma-separated list of accounts.
   *
   * For AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization.
   *
   * @generated from field: string accountId = 5;
   */
  accountId: string;

  /**
   * Required. Valid only for the `aws` vendor. AWS-specific options.
   *
   * @generated from field: blueapi.cost.v1.ReadCostsRequestAwsOptions awsOptions = 6;
   */
  awsOptions?: ReadCostsRequestAwsOptions;
};

/**
 * Describes the message blueapi.cost.v1.UpdateCostFiltersRequest.
 * Use `create(UpdateCostFiltersRequestSchema)` to create a new message.
 */
export const UpdateCostFiltersRequestSchema: GenMessage<UpdateCostFiltersRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 88);

/**
 * Response message for the UpdateCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.UpdateCostFiltersResponse
 */
export type UpdateCostFiltersResponse = Message<"blueapi.cost.v1.UpdateCostFiltersResponse"> & {
  /**
   * Required. Filter Id.
   *
   * @generated from field: string filterId = 1;
   */
  filterId: string;
};

/**
 * Describes the message blueapi.cost.v1.UpdateCostFiltersResponse.
 * Use `create(UpdateCostFiltersResponseSchema)` to create a new message.
 */
export const UpdateCostFiltersResponseSchema: GenMessage<UpdateCostFiltersResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 89);

/**
 * Request message for the DeleteCostFilters rpc.
 *
 * @generated from message blueapi.cost.v1.DeleteCostFiltersRequest
 */
export type DeleteCostFiltersRequest = Message<"blueapi.cost.v1.DeleteCostFiltersRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Filter Id to delete.
   *
   * @generated from field: string filterId = 2;
   */
  filterId: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteCostFiltersRequest.
 * Use `create(DeleteCostFiltersRequestSchema)` to create a new message.
 */
export const DeleteCostFiltersRequestSchema: GenMessage<DeleteCostFiltersRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 90);

/**
 * Request message for the ExportCostFiltersFile rpc.
 *
 * @generated from message blueapi.cost.v1.ExportCostFiltersFileRequest
 */
export type ExportCostFiltersFileRequest = Message<"blueapi.cost.v1.ExportCostFiltersFileRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Filter Id.
   *
   * @generated from field: string filterId = 2;
   */
  filterId: string;

  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`.
   *
   * @generated from field: string startTime = 3;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmd`.
   *
   * @generated from field: string endTime = 4;
   */
  endTime: string;

  /**
   * Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`.
   *
   * @generated from field: bool groupByMonth = 5;
   */
  groupByMonth: boolean;

  /**
   * Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.
   *
   * For example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty.
   *
   * @generated from field: string groupByColumns = 6;
   */
  groupByColumns: string;

  /**
   * Optional. If set to true, stream will include resource tags. 
   *
   * @generated from field: bool includeTags = 7;
   */
  includeTags: boolean;
};

/**
 * Describes the message blueapi.cost.v1.ExportCostFiltersFileRequest.
 * Use `create(ExportCostFiltersFileRequestSchema)` to create a new message.
 */
export const ExportCostFiltersFileRequestSchema: GenMessage<ExportCostFiltersFileRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 91);

/**
 * Response message for the ExportCostFiltersFile rpc.
 *
 * @generated from message blueapi.cost.v1.ExportCostFiltersFileResponse
 */
export type ExportCostFiltersFileResponse = Message<"blueapi.cost.v1.ExportCostFiltersFileResponse"> & {
  /**
   * Required. URL of exported file.
   *
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message blueapi.cost.v1.ExportCostFiltersFileResponse.
 * Use `create(ExportCostFiltersFileResponseSchema)` to create a new message.
 */
export const ExportCostFiltersFileResponseSchema: GenMessage<ExportCostFiltersFileResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 92);

/**
 * GCP-specific options for ReadCostsRequest.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequestGcpOptions
 */
export type ReadCostsRequestGcpOptions = Message<"blueapi.cost.v1.ReadCostsRequestGcpOptions"> & {
  /**
   * Optional. A comma-separated list of columns to aggregate the data into. Valid values are `service`, `sku`, `region`, `zone`, and `usageUnit`. A special value of `none` is also supported, which means query by date or month per account only.
   *
   * @generated from field: string groupByColumns = 1;
   */
  groupByColumns: string;

  /**
   * Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`.
   *
   * @generated from field: bool groupByMonth = 2;
   */
  groupByMonth: boolean;

  /**
   * Optional. If set to true, group all input accounts into one. Valid only if `groupByMonth` is true.
   *
   * @generated from field: bool groupAccounts = 3;
   */
  groupAccounts: boolean;

  /**
   * Optional. A list of filtering options. See [ReadCostsRequestGcpOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.
   *
   * @generated from field: repeated blueapi.cost.v1.ReadCostsRequestGcpOptionsFilters filters = 4;
   */
  filters: ReadCostsRequestGcpOptionsFilters[];

  /**
   * Optional. If set to true, stream will include invoice month. Discarded when `groupByColumns` field is set to `none`.
   *
   * The last usage occurrence of invoice month based on endTime is set to endTime.
   * For example, (Assumption: Last usage start time 2022-02-01 01:00:00 UTC) If you set to "endTime:20210131", automatically set to "endTime:20220101". Ignored if the batch calculation for invoice month has not been completed.
   *
   * @generated from field: bool includeInvoiceMonth = 6;
   */
  includeInvoiceMonth: boolean;

  /**
   * Optional. If set to true, stream will include credits{"creditsType","creditsName"}. Discarded when `groupByColumns` field is set to `none`.
   *
   * @generated from field: bool includeCredits = 7;
   */
  includeCredits: boolean;

  /**
   * Optional. If set to true, round the cost data to a rounded format. It will be rounded off in the unit specified by `groupByColumns`.
   *
   * @generated from field: bool rounding = 8;
   */
  rounding: boolean;

  /**
   * If true, force API to not use cached data.
   *
   * @generated from field: bool noCache = 5;
   */
  noCache: boolean;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequestGcpOptions.
 * Use `create(ReadCostsRequestGcpOptionsSchema)` to create a new message.
 */
export const ReadCostsRequestGcpOptionsSchema: GenMessage<ReadCostsRequestGcpOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 93);

/**
 * A map of "key:value" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either "eq:" (equal), "re:" (regular expressions based on https://github.com/google/re2), or "!re:" (reverse "re:"). No prefix is the same as "eq:". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 && mapfilter2 && mapfilter3, etc.
 *
 * For example, if you like to filter `service` to return only `Compute Engine`, set to `{"service":"eq:Compute Engine"}` or `{"service":"Compute Engine"}`. You can also use a regular expression like `{"service":"re:Compute Engine|Cloud Storage"}`, which means return all Compute Engine or Cloud Storage lineitems. Or reverse regexp, such as `{"service":"!re:^Cloud Engine$"}`, which means return all items except `Cloud Engine`.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequestGcpOptionsFilters
 */
export type ReadCostsRequestGcpOptionsFilters = Message<"blueapi.cost.v1.ReadCostsRequestGcpOptionsFilters"> & {
  /**
   * @generated from field: map<string, string> andFilters = 1;
   */
  andFilters: { [key: string]: string };
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequestGcpOptionsFilters.
 * Use `create(ReadCostsRequestGcpOptionsFiltersSchema)` to create a new message.
 */
export const ReadCostsRequestGcpOptionsFiltersSchema: GenMessage<ReadCostsRequestGcpOptionsFilters> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 94);

/**
 * Request message for GetAccountBudgetAlerts
 *
 * @generated from message blueapi.cost.v1.GetAccountBudgetAlertsRequest
 */
export type GetAccountBudgetAlertsRequest = Message<"blueapi.cost.v1.GetAccountBudgetAlertsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Account Id
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.GetAccountBudgetAlertsRequest.
 * Use `create(GetAccountBudgetAlertsRequestSchema)` to create a new message.
 */
export const GetAccountBudgetAlertsRequestSchema: GenMessage<GetAccountBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 95);

/**
 * Request message for CreateAccountBudgetAlerts
 *
 * @generated from message blueapi.cost.v1.CreateAccountBudgetAlertsRequest
 */
export type CreateAccountBudgetAlertsRequest = Message<"blueapi.cost.v1.CreateAccountBudgetAlertsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Account Id
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Required. Budget alert setting.
   *
   * @generated from field: blueapi.api.wave.BudgetAlert budgetAlert = 3;
   */
  budgetAlert?: BudgetAlert;
};

/**
 * Describes the message blueapi.cost.v1.CreateAccountBudgetAlertsRequest.
 * Use `create(CreateAccountBudgetAlertsRequestSchema)` to create a new message.
 */
export const CreateAccountBudgetAlertsRequestSchema: GenMessage<CreateAccountBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 96);

/**
 * Request message for UpdateAccountBudgetAlerts
 *
 * @generated from message blueapi.cost.v1.UpdateAccountBudgetAlertsRequest
 */
export type UpdateAccountBudgetAlertsRequest = Message<"blueapi.cost.v1.UpdateAccountBudgetAlertsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Account Id
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Required. Budget alert setting.
   *
   * Set only the setting value to be changed.
   * For example, If you want to change only daily value, set `{"budget":[{"id":"daily","value":100,"enabled":true}}` as a parameter
   * The same goes for notification. If you want to change only email value, set `{"notification":[{"id":"email","destination":"budgetalert-example@alphaus.cloud","enabled":true}}` as a parameter
   *
   * @generated from field: blueapi.api.wave.BudgetAlert budgetAlert = 3;
   */
  budgetAlert?: BudgetAlert;
};

/**
 * Describes the message blueapi.cost.v1.UpdateAccountBudgetAlertsRequest.
 * Use `create(UpdateAccountBudgetAlertsRequestSchema)` to create a new message.
 */
export const UpdateAccountBudgetAlertsRequestSchema: GenMessage<UpdateAccountBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 97);

/**
 * Request message for DeleteAccountBudgetAlerts
 *
 * @generated from message blueapi.cost.v1.DeleteAccountBudgetAlertsRequest
 */
export type DeleteAccountBudgetAlertsRequest = Message<"blueapi.cost.v1.DeleteAccountBudgetAlertsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Account Id
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteAccountBudgetAlertsRequest.
 * Use `create(DeleteAccountBudgetAlertsRequestSchema)` to create a new message.
 */
export const DeleteAccountBudgetAlertsRequestSchema: GenMessage<DeleteAccountBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 98);

/**
 * Azure-specific options for ReadCostsRequest.
 *
 * @generated from message blueapi.cost.v1.ReadCostsRequestAzureOptions
 */
export type ReadCostsRequestAzureOptions = Message<"blueapi.cost.v1.ReadCostsRequestAzureOptions"> & {
  /**
   * Optional. A comma-separated list of columns to aggregate the data into. Valid values are `serviceName`, `productName`, `region`, `chargeType`, `description`, `billableQuantity`, `effectiveUnitPrice`, `timeInterval`, `billingType`, `alternateId` and `domainName`. A special value of `none` is also supported, which means query by date or month per account only.
   *
   * For example, if you only want the services and region data, you can set this field to `serviceName,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/azure/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty.
   *
   * @generated from field: string groupByColumns = 1;
   */
  groupByColumns: string;

  /**
   * Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`. You can also use `groupByColumns` while setting this to true.
   *
   * @generated from field: bool groupByMonth = 2;
   */
  groupByMonth: boolean;

  /**
   * If true, force API to not use cached data.
   *
   * @generated from field: bool noCache = 3;
   */
  noCache: boolean;

  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 4;
   */
  toCurrency: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadCostsRequestAzureOptions.
 * Use `create(ReadCostsRequestAzureOptionsSchema)` to create a new message.
 */
export const ReadCostsRequestAzureOptionsSchema: GenMessage<ReadCostsRequestAzureOptions> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 99);

/**
 * Request message for the BudgetAlerts rpc.
 *
 * @generated from message blueapi.cost.v1.BudgetAlerts
 */
export type BudgetAlerts = Message<"blueapi.cost.v1.BudgetAlerts"> & {
  /**
   * Budget alert Id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Vnedor. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 2;
   */
  vendor: string;

  /**
   * Lsit of accountId.
   *
   * @generated from field: repeated blueapi.api.Account accounts = 3;
   */
  accounts: Account[];

  /**
   * Notification setting for budget alert.
   *
   * @generated from field: blueapi.api.BudgetAlertNotificationDetail notification = 4;
   */
  notification?: BudgetAlertNotificationDetail;

  /**
   * Daily setting for budget alert.
   *
   * @generated from field: blueapi.api.DailyBudgetAlert daily = 5;
   */
  daily?: DailyBudgetAlert;

  /**
   * Daily rate increase setting for budget alert.
   *
   * @generated from field: blueapi.api.DailyRateIncreaseBudgetAlert dailyRate = 7;
   */
  dailyRate?: DailyRateIncreaseBudgetAlert;

  /**
   * Monthly setting for budget alert.
   *
   * @generated from field: blueapi.api.MonthlyBudgetAlert monthly = 6;
   */
  monthly?: MonthlyBudgetAlert;

  /**
   *  Custom Period setting for budget alert.
   *
   * @generated from field: blueapi.api.CustomPeriodBudgetAlert customPeriod = 8;
   */
  customPeriod?: CustomPeriodBudgetAlert;

  /**
   *  Custom Month setting for budget alert.
   *
   * @generated from field: blueapi.api.CustomMonthBudgetAlert customMonth = 9;
   */
  customMonth?: CustomMonthBudgetAlert;
};

/**
 * Describes the message blueapi.cost.v1.BudgetAlerts.
 * Use `create(BudgetAlertsSchema)` to create a new message.
 */
export const BudgetAlertsSchema: GenMessage<BudgetAlerts> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 100);

/**
 * Request message for the ReadBudgetAlerts rpc.
 *
 * @generated from message blueapi.cost.v1.ReadBudgetAlertsRequest
 */
export type ReadBudgetAlertsRequest = Message<"blueapi.cost.v1.ReadBudgetAlertsRequest"> & {
  /**
   * Optional.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 1;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message blueapi.cost.v1.ReadBudgetAlertsRequest.
 * Use `create(ReadBudgetAlertsRequestSchema)` to create a new message.
 */
export const ReadBudgetAlertsRequestSchema: GenMessage<ReadBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 101);

/**
 * Request message for the GetBudgetAlerts rpc.
 *
 * @generated from message blueapi.cost.v1.GetBudgetAlertsRequest
 */
export type GetBudgetAlertsRequest = Message<"blueapi.cost.v1.GetBudgetAlertsRequest"> & {
  /**
   * Required. budget alert id
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.GetBudgetAlertsRequest.
 * Use `create(GetBudgetAlertsRequestSchema)` to create a new message.
 */
export const GetBudgetAlertsRequestSchema: GenMessage<GetBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 102);

/**
 * Request message for the CreateBudgetAlerts rpc.
 *
 * @generated from message blueapi.cost.v1.CreateBudgetAlertsRequest
 */
export type CreateBudgetAlertsRequest = Message<"blueapi.cost.v1.CreateBudgetAlertsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Lsit of accountId. For example, you set to ["accountId1","accountId2","accountId3"].
   *
   * @generated from field: repeated string accounts = 2;
   */
  accounts: string[];

  /**
   * Required.
   *
   * @generated from field: blueapi.api.BudgetAlertNotification notification = 3;
   */
  notification?: BudgetAlertNotification;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.DailyBudgetAlert daily = 4;
   */
  daily?: DailyBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.DailyRateIncreaseBudgetAlert dailyRate = 6;
   */
  dailyRate?: DailyRateIncreaseBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.MonthlyBudgetAlert monthly = 5;
   */
  monthly?: MonthlyBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.CustomPeriodBudgetAlert customPeriod = 7;
   */
  customPeriod?: CustomPeriodBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.CustomMonthBudgetAlert customMonth = 8;
   */
  customMonth?: CustomMonthBudgetAlert;
};

/**
 * Describes the message blueapi.cost.v1.CreateBudgetAlertsRequest.
 * Use `create(CreateBudgetAlertsRequestSchema)` to create a new message.
 */
export const CreateBudgetAlertsRequestSchema: GenMessage<CreateBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 103);

/**
 * Request message for the UpdateBudgetAlerts rpc.
 *
 * @generated from message blueapi.cost.v1.UpdateBudgetAlertsRequest
 */
export type UpdateBudgetAlertsRequest = Message<"blueapi.cost.v1.UpdateBudgetAlertsRequest"> & {
  /**
   * Required. budget alert id
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 2;
   */
  vendor: string;

  /**
   * Required. Lsit of accountId. For example, you set to ["accountId1","accountId2","accountId3"].
   *
   * @generated from field: repeated string accounts = 3;
   */
  accounts: string[];

  /**
   * Required.
   *
   * @generated from field: blueapi.api.BudgetAlertNotification notification = 4;
   */
  notification?: BudgetAlertNotification;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.DailyBudgetAlert daily = 5;
   */
  daily?: DailyBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.DailyRateIncreaseBudgetAlert dailyRate = 7;
   */
  dailyRate?: DailyRateIncreaseBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.MonthlyBudgetAlert monthly = 6;
   */
  monthly?: MonthlyBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.CustomPeriodBudgetAlert customPeriod = 8;
   */
  customPeriod?: CustomPeriodBudgetAlert;

  /**
   * Optional.
   *
   * @generated from field: blueapi.api.CustomMonthBudgetAlert customMonth = 9;
   */
  customMonth?: CustomMonthBudgetAlert;
};

/**
 * Describes the message blueapi.cost.v1.UpdateBudgetAlertsRequest.
 * Use `create(UpdateBudgetAlertsRequestSchema)` to create a new message.
 */
export const UpdateBudgetAlertsRequestSchema: GenMessage<UpdateBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 104);

/**
 * Request message for the DeleteBudgetAlerts rpc.
 *
 * @generated from message blueapi.cost.v1.DeleteBudgetAlertsRequest
 */
export type DeleteBudgetAlertsRequest = Message<"blueapi.cost.v1.DeleteBudgetAlertsRequest"> & {
  /**
   * Required. budget alert id
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.DeleteBudgetAlertsRequest.
 * Use `create(DeleteBudgetAlertsRequestSchema)` to create a new message.
 */
export const DeleteBudgetAlertsRequestSchema: GenMessage<DeleteBudgetAlertsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 105);

/**
 * @generated from message blueapi.cost.v1.CheckAccountsRequest
 */
export type CheckAccountsRequest = Message<"blueapi.cost.v1.CheckAccountsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. A comma-separated list of account ids. For example, you set to ["accountId1","accountId2","accountId3"].
   *
   * @generated from field: repeated string accountIds = 2;
   */
  accountIds: string[];
};

/**
 * Describes the message blueapi.cost.v1.CheckAccountsRequest.
 * Use `create(CheckAccountsRequestSchema)` to create a new message.
 */
export const CheckAccountsRequestSchema: GenMessage<CheckAccountsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 106);

/**
 * @generated from message blueapi.cost.v1.CheckAccountsResponse
 */
export type CheckAccountsResponse = Message<"blueapi.cost.v1.CheckAccountsResponse"> & {
  /**
   * Map of accountIds to boolean values indicating if the account exists.
   *
   * @generated from field: map<string, bool> exists = 1;
   */
  exists: { [key: string]: boolean };
};

/**
 * Describes the message blueapi.cost.v1.CheckAccountsResponse.
 * Use `create(CheckAccountsResponseSchema)` to create a new message.
 */
export const CheckAccountsResponseSchema: GenMessage<CheckAccountsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 107);

/**
 * Request message for the ReadInvoiceIds rpc.
 *
 * @generated from message blueapi.cost.v1.ReadInvoiceIdsRequest
 */
export type ReadInvoiceIdsRequest = Message<"blueapi.cost.v1.ReadInvoiceIdsRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, July 2024 will be `202407`.
   *
   * @generated from field: string month = 2;
   */
  month: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadInvoiceIdsRequest.
 * Use `create(ReadInvoiceIdsRequestSchema)` to create a new message.
 */
export const ReadInvoiceIdsRequestSchema: GenMessage<ReadInvoiceIdsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 108);

/**
 * Response message for the ReadInvoiceIds rpc.
 *
 * @generated from message blueapi.cost.v1.ReadInvoiceIdsResponse
 */
export type ReadInvoiceIdsResponse = Message<"blueapi.cost.v1.ReadInvoiceIdsResponse"> & {
  /**
   * The invoice id
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadInvoiceIdsResponse.
 * Use `create(ReadInvoiceIdsResponseSchema)` to create a new message.
 */
export const ReadInvoiceIdsResponseSchema: GenMessage<ReadInvoiceIdsResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 109);

/**
 * @generated from message blueapi.cost.v1.PeriodRange
 */
export type PeriodRange = Message<"blueapi.cost.v1.PeriodRange"> & {
  /**
   * Time unit of the range
   *
   * @generated from field: blueapi.cost.v1.PeriodRange.Unit unit = 1;
   */
  unit: PeriodRange_Unit;

  /**
   * Year (e.g., 2025)
   *
   * @generated from field: uint32 year = 2;
   */
  year: number;

  /**
   * Start month/quarter (1-based), ignored if YEAR
   *
   * @generated from field: uint32 starting = 3;
   */
  starting: number;

  /**
   * Length in units of unit
   *
   * @generated from field: uint32 duration = 4;
   */
  duration: number;
};

/**
 * Describes the message blueapi.cost.v1.PeriodRange.
 * Use `create(PeriodRangeSchema)` to create a new message.
 */
export const PeriodRangeSchema: GenMessage<PeriodRange> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 110);

/**
 * @generated from enum blueapi.cost.v1.PeriodRange.Unit
 */
export enum PeriodRange_Unit {
  /**
   * @generated from enum value: UNIT_UNSPECIFIED = 0;
   */
  UNIT_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MONTH = 1;
   */
  MONTH = 1,

  /**
   * @generated from enum value: QUARTER = 2;
   */
  QUARTER = 2,

  /**
   * @generated from enum value: YEAR = 3;
   */
  YEAR = 3,
}

/**
 * Describes the enum blueapi.cost.v1.PeriodRange.Unit.
 */
export const PeriodRange_UnitSchema: GenEnum<PeriodRange_Unit> = /*@__PURE__*/
  enumDesc(file_cost_v1_cost, 110, 0);

/**
 * Request message for the ReadInvoiceOverviews rpc.
 *
 * @generated from message blueapi.cost.v1.ReadInvoiceOverviewsRequest
 */
export type ReadInvoiceOverviewsRequest = Message<"blueapi.cost.v1.ReadInvoiceOverviewsRequest"> & {
  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20240101`.
   *
   * @generated from field: string startTime = 1;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 2;
   */
  endTime: string;

  /**
   * Set true to use period range as date input, startTime and endTime would be ignored
   *
   * @generated from field: bool usePeriodRange = 4;
   */
  usePeriodRange: boolean;

  /**
   * Use when usePeriodRange range is true
   *
   * @generated from field: blueapi.cost.v1.PeriodRange periodRange = 5;
   */
  periodRange?: PeriodRange;

  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 3;
   */
  toCurrency: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadInvoiceOverviewsRequest.
 * Use `create(ReadInvoiceOverviewsRequestSchema)` to create a new message.
 */
export const ReadInvoiceOverviewsRequestSchema: GenMessage<ReadInvoiceOverviewsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 111);

/**
 * Request message for the ReadInvoiceCosts rpc.
 *
 * @generated from message blueapi.cost.v1.ReadInvoiceCostsRequest
 */
export type ReadInvoiceCostsRequest = Message<"blueapi.cost.v1.ReadInvoiceCostsRequest"> & {
  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20240101`.
   *
   * @generated from field: string startTime = 1;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 2;
   */
  endTime: string;

  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 3;
   */
  toCurrency: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadInvoiceCostsRequest.
 * Use `create(ReadInvoiceCostsRequestSchema)` to create a new message.
 */
export const ReadInvoiceCostsRequestSchema: GenMessage<ReadInvoiceCostsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 112);

/**
 * Request message for the ReadInvoiceGroupCosts rpc.
 *
 * @generated from message blueapi.cost.v1.ReadInvoiceGroupCostsRequest
 */
export type ReadInvoiceGroupCostsRequest = Message<"blueapi.cost.v1.ReadInvoiceGroupCostsRequest"> & {
  /**
   * Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20240101`.
   *
   * @generated from field: string startTime = 1;
   */
  startTime: string;

  /**
   * Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`.
   *
   * @generated from field: string endTime = 2;
   */
  endTime: string;

  /**
   * Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD).
   *
   * @generated from field: string toCurrency = 3;
   */
  toCurrency: string;

  /**
   * Optional. Number of acquisitions. default:10０.
   *
   * @generated from field: int32 limit = 4;
   */
  limit: number;
};

/**
 * Describes the message blueapi.cost.v1.ReadInvoiceGroupCostsRequest.
 * Use `create(ReadInvoiceGroupCostsRequestSchema)` to create a new message.
 */
export const ReadInvoiceGroupCostsRequestSchema: GenMessage<ReadInvoiceGroupCostsRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 113);

/**
 * Request message for the ReadAccountOriginalResources rpc.
 *
 * @generated from message blueapi.cost.v1.ReadAccountOriginalResourcesRequest
 */
export type ReadAccountOriginalResourcesRequest = Message<"blueapi.cost.v1.ReadAccountOriginalResourcesRequest"> & {
  /**
   * Required. At the moment, only `aws`.`gcp`,`azure` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;
};

/**
 * Describes the message blueapi.cost.v1.ReadAccountOriginalResourcesRequest.
 * Use `create(ReadAccountOriginalResourcesRequestSchema)` to create a new message.
 */
export const ReadAccountOriginalResourcesRequestSchema: GenMessage<ReadAccountOriginalResourcesRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 114);

/**
 * Request message for the RegisterPayerAccountRequest rpc.
 *
 * @generated from message blueapi.cost.v1.RegisterPayerAccountRequest
 */
export type RegisterPayerAccountRequest = Message<"blueapi.cost.v1.RegisterPayerAccountRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. The Payer/Management account Id.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Optional. Preferred account name, defaults to id if not provided.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Optional. Valid values are `legacy` and `2.0` for now. Defaults to `legacy` if not provided.
   * Only applicable if vendor is set to `aws`. Do not provide if `gcp` or `azure`.
   *
   * @generated from field: string curType = 4;
   */
  curType: string;
};

/**
 * Describes the message blueapi.cost.v1.RegisterPayerAccountRequest.
 * Use `create(RegisterPayerAccountRequestSchema)` to create a new message.
 */
export const RegisterPayerAccountRequestSchema: GenMessage<RegisterPayerAccountRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 115);

/**
 * WORK-IN-PROGRESS: List the prerequisites for cost calculations.
 *
 * @generated from message blueapi.cost.v1.ListCalculationPrerequisitesRequest
 */
export type ListCalculationPrerequisitesRequest = Message<"blueapi.cost.v1.ListCalculationPrerequisitesRequest"> & {
  /**
   * Required. At the moment, only `aws` is supported.
   *
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * Required. Month in format yyyy-mm.
   *
   * @generated from field: string month = 2;
   */
  month: string;
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationPrerequisitesRequest.
 * Use `create(ListCalculationPrerequisitesRequestSchema)` to create a new message.
 */
export const ListCalculationPrerequisitesRequestSchema: GenMessage<ListCalculationPrerequisitesRequest> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 116);

/**
 * @generated from message blueapi.cost.v1.CalculationPrerequisite
 */
export type CalculationPrerequisite = Message<"blueapi.cost.v1.CalculationPrerequisite"> & {
  /**
   * The invoice id.
   *
   * @generated from field: string invoice_id = 1;
   */
  invoiceId: string;

  /**
   * The payer account id.
   *
   * @generated from field: string payer_id = 2;
   */
  payerId: string;

  /**
   * The exchange rate.
   *
   * @generated from field: double exchange_rate = 3;
   */
  exchangeRate: number;

  /**
   * The unblended cost in CUR.
   *
   * @generated from field: double unblended_cost_in_cur = 4;
   */
  unblendedCostInCur: number;
};

/**
 * Describes the message blueapi.cost.v1.CalculationPrerequisite.
 * Use `create(CalculationPrerequisiteSchema)` to create a new message.
 */
export const CalculationPrerequisiteSchema: GenMessage<CalculationPrerequisite> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 117);

/**
 * @generated from message blueapi.cost.v1.ListCalculationPrerequisitesResponse
 */
export type ListCalculationPrerequisitesResponse = Message<"blueapi.cost.v1.ListCalculationPrerequisitesResponse"> & {
  /**
   * Repeated list of calculation prerequisites.
   *
   * @generated from field: repeated blueapi.cost.v1.CalculationPrerequisite prerequisites = 1;
   */
  prerequisites: CalculationPrerequisite[];
};

/**
 * Describes the message blueapi.cost.v1.ListCalculationPrerequisitesResponse.
 * Use `create(ListCalculationPrerequisitesResponseSchema)` to create a new message.
 */
export const ListCalculationPrerequisitesResponseSchema: GenMessage<ListCalculationPrerequisitesResponse> = /*@__PURE__*/
  messageDesc(file_cost_v1_cost, 118);

/**
 * Service for reading aggregated costs for your cloud costs and usages.
 *
 * @generated from service blueapi.cost.v1.Cost
 */
export const Cost: GenService<{
  /**
   * Lists vendor payer accounts.
   *
   * For AWS, these are management accounts (formerly known as master or payer accounts); for Azure, these are subscriptions, for GCP, these are projects.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListPayerAccounts
   */
  listPayerAccounts: {
    methodKind: "server_streaming";
    input: typeof ListPayerAccountsRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * Gets a vendor payer account.
   *
   * This API includes all of the account's metadata. See (https://alphauslabs.github.io/blueapi/)[https://alphauslabs.github.io/blueapi/] for the list of supported attributes. For AWS, this means a management account (formerly known as master or payer account); for Azure, this means a subscription, for GCP, this means a project.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetPayerAccount
   */
  getPayerAccount: {
    methodKind: "unary";
    input: typeof GetPayerAccountRequestSchema;
    output: typeof PayerSchema;
  },
  /**
   * Gets a payer account's import history.
   *
   * Import history is a list of timestamps our system tracks when the account's data are imported to our system, which in turn, triggers processing. At the moment, this only supports AWS (CUR files). You can also set `{id}` to `*` to return all payers' information under the organization.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetPayerAccountImportHistory
   */
  getPayerAccountImportHistory: {
    methodKind: "server_streaming";
    input: typeof GetPayerAccountImportHistoryRequestSchema;
    output: typeof GetPayerAccountImportHistoryResponseSchema;
  },
  /**
   * Gets a payer account's proforma reports. Applicable for AWS payer accounts only.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetPayerProformaReports
   */
  getPayerProformaReports: {
    methodKind: "unary";
    input: typeof GetPayerProformaReportsRequestSchema;
    output: typeof GetPayerProformaReportsResponseSchema;
  },
  /**
   * DEPRECATED: Registers a vendor payer account. This is now deprecated for AWS payer accounts. To register an AWS payer account, check out the 'CreateDefaultCostAccess' API.
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreatePayerAccount
   */
  createPayerAccount: {
    methodKind: "unary";
    input: typeof CreatePayerAccountRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * WORK-IN-PROGRES: Registers a vendor payer account with their basics details such as accountId and accountName.
   *
   * @generated from rpc blueapi.cost.v1.Cost.RegisterPayerAccount
   */
  registerPayerAccount: {
    methodKind: "unary";
    input: typeof RegisterPayerAccountRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Deletes a vendor payer account.
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeletePayerAccount
   */
  deletePayerAccount: {
    methodKind: "unary";
    input: typeof DeletePayerAccountRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists all vendor accounts.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListAccounts
   */
  listAccounts: {
    methodKind: "server_streaming";
    input: typeof ListAccountsRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * Gets a vendor account. This API includes all of the account's metadata. See https://alphauslabs.github.io/blueapi/ for the list of supported attributes.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetAccount
   */
  getAccount: {
    methodKind: "unary";
    input: typeof GetAccountRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * Registers a vendor account.
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateAccount
   */
  createAccount: {
    methodKind: "unary";
    input: typeof CreateAccountRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates a vendor account. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.UpdateAccount
   */
  updateAccount: {
    methodKind: "unary";
    input: typeof UpdateAccountRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * WORK-IN-PROGRESS: Deletes a vendor account.
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteAccount
   */
  deleteAccount: {
    methodKind: "unary";
    input: typeof DeleteAccountRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Reads all vendor account-original-resources.
   * Account that have not been used for one month will no longer be retrieved.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadAccountOriginalResources
   */
  readAccountOriginalResources: {
    methodKind: "server_streaming";
    input: typeof ReadAccountOriginalResourcesRequestSchema;
    output: typeof AccountOriginalResourceSchema;
  },
  /**
   * Lists all vendor tags.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListTags
   */
  listTags: {
    methodKind: "server_streaming";
    input: typeof ListTagsRequestSchema;
    output: typeof CostTagSchema;
  },
  /**
   * Lists the vendor calculator's queued accounts for calculation.
   *
   * If result is non-empty, it means calculation is still in progress for the returned accounts. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListCalculatorRunningAccounts
   */
  listCalculatorRunningAccounts: {
    methodKind: "server_streaming";
    input: typeof ListCalculatorRunningAccountsRequestSchema;
    output: typeof ListCalculatorRunningAccountsResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Gets the vendor cost calculator's current configuration.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetCalculatorConfig
   */
  getCalculatorConfig: {
    methodKind: "unary";
    input: typeof GetCalculatorConfigRequestSchema;
    output: typeof GetCalculatorConfigResponseSchema;
  },
  /**
   * Lists the cost calculator's cost modifiers. At the moment, the supported {vendor} is 'aws'. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListCalculatorCostModifiers
   */
  listCalculatorCostModifiers: {
    methodKind: "server_streaming";
    input: typeof ListCalculatorCostModifiersRequestSchema;
    output: typeof CalculatorCostModifierSchema;
  },
  /**
   * Creates a cost modifier.
   *
   * A cost modifier allows you to modify the cost per lineitem. At the moment, the supported `{vendor}` is `aws` and only applies to items not affected by trueunblended calculations. Items not covered include some usages under `AmazonEC2`, `AmazonRDS`, `AmazonElastiCache`, `AmazonES`, and `AmazonRedShift`, that are covered by their respective RIs and/or SPs. Non-usage items such as discounts, refunds, fees, etc. are also not covered. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateCalculatorCostModifier
   */
  createCalculatorCostModifier: {
    methodKind: "unary";
    input: typeof CreateCalculatorCostModifierRequestSchema;
    output: typeof CreateCalculatorCostModifierResponseSchema;
  },
  /**
   * Deletes a cost modifier. At the moment, the supported {vendor} is 'aws'. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteCalculatorCostModifier
   */
  deleteCalculatorCostModifier: {
    methodKind: "unary";
    input: typeof DeleteCalculatorCostModifierRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Initiates an ondemand import of all registered CUR files.
   *
   * See https://help.alphaus.cloud/en/articles/3612555-ripple-aws-things-you-need-to-prepare-before-starting for more information.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ImportCurFiles
   */
  importCurFiles: {
    methodKind: "unary";
    input: typeof ImportCurFilesRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Triggers monthly calculations for costs and invoices at either organization or billing group level.
   *
   * For the AWS calculator, aggregation is done at daily and monthly level. Also, all occurrences of the character `|` (pipe) in the CUR descriptions and tag key/values are replaced with the `/` (forward-slash) character. This is due to the `|` character having a special designation in the data processing workflows.
   *
   * @generated from rpc blueapi.cost.v1.Cost.CalculateCosts
   */
  calculateCosts: {
    methodKind: "unary";
    input: typeof CalculateCostsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists vendor costs calculations history and statuses.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListCalculationsHistory
   */
  listCalculationsHistory: {
    methodKind: "unary";
    input: typeof ListCalculationsHistoryRequestSchema;
    output: typeof ListCalculationsHistoryResponseSchema;
  },
  /**
   * Lists the schedules of your monthly calculations. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListCalculationsSchedules
   */
  listCalculationsSchedules: {
    methodKind: "unary";
    input: typeof ListCalculationsSchedulesRequestSchema;
    output: typeof ListCalculationsSchedulesResponseSchema;
  },
  /**
   * Creates a schedule to trigger your monthly calculations. At the moment, only one schedule is allowed per account. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateCalculationsSchedule
   */
  createCalculationsSchedule: {
    methodKind: "unary";
    input: typeof CreateCalculationsScheduleRequestSchema;
    output: typeof CalculationsScheduleSchema;
  },
  /**
   * Deletes the schedule of your monthly calculations. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteCalculationsSchedule
   */
  deleteCalculationsSchedule: {
    methodKind: "unary";
    input: typeof DeleteCalculationsScheduleRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists the usage-based cost filter condition. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListCostFilters
   */
  listCostFilters: {
    methodKind: "unary";
    input: typeof ListCostFiltersRequestSchema;
    output: typeof ListCostFiltersResponseSchema;
  },
  /**
   * Creates the usage-based cost filter condition.
   *
   * You can consider cost filters as predefined/prefiltered queries using the `v1/{vendor}/costs:read` or `ReadCosts` API. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateCostFilters
   */
  createCostFilters: {
    methodKind: "unary";
    input: typeof CreateCostFiltersRequestSchema;
    output: typeof CreateCostFiltersResponseSchema;
  },
  /**
   * Updates the usage-based cost filter condition. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.UpdateCostFilters
   */
  updateCostFilters: {
    methodKind: "unary";
    input: typeof UpdateCostFiltersRequestSchema;
    output: typeof UpdateCostFiltersResponseSchema;
  },
  /**
   * Deletes the usage-based cost filter condition. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteCostFilters
   */
  deleteCostFilters: {
    methodKind: "unary";
    input: typeof DeleteCostFiltersRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Exports the usage-based cost filter condition. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.ExportCostFiltersFile
   */
  exportCostFiltersFile: {
    methodKind: "unary";
    input: typeof ExportCostFiltersFileRequestSchema;
    output: typeof ExportCostFiltersFileResponseSchema;
  },
  /**
   * Reads the available cost attributes of an organization (Ripple) or billing group (Wave).
   *
   * Similar to the `ReadCosts` API but without the aggregated usages and costs. At the moment, the supported `{vendor}` is `aws`. If datetime range parameters are not set, month-to-date (current month) will be returned.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadCostAttributes
   */
  readCostAttributes: {
    methodKind: "server_streaming";
    input: typeof ReadCostAttributesRequestSchema;
    output: typeof CostAttributeItemSchema;
  },
  /**
   * WORK-IN-PROGRESS: Reads the available cost attributes of an organization (Ripple) or billing group (Wave).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetCostAttributes
   */
  getCostAttributes: {
    methodKind: "unary";
    input: typeof GetCostAttributesRequestSchema;
    output: typeof GetCostAttributesResponseSchema;
  },
  /**
   * Reads the usage-based cost details of an organization (Ripple) or billing group (Wave).
   *
   * You can refer to this [guide](https://labs.alphaus.cloud/docs/guides/aws-query-costs/) for more examples on how to use this API. Although the guide uses `bluectl`, the parameters are the same.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadCosts
   */
  readCosts: {
    methodKind: "server_streaming";
    input: typeof ReadCostsRequestSchema;
    output: typeof CostItemSchema;
  },
  /**
   * Reads the non-usage-based details of an organization (Ripple) or billing group (Wave[Pro]).
   *
   * This API covers non-usage-based adjustments, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. At the moment, the supported `{vendor}` is `aws` or `azure`. If datetime range parameters are not set, month-to-date (current month) will be returned.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadAdjustments
   */
  readAdjustments: {
    methodKind: "server_streaming";
    input: typeof ReadAdjustmentsRequestSchema;
    output: typeof CostItemSchema;
  },
  /**
   * Reads the usage-based tag costs of a billing group.
   *
   * At the moment, the supported `{vendor}` is `aws`. If datetime range parameters are not set, month-to-date (current month) will be returned.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadTagCosts
   */
  readTagCosts: {
    methodKind: "server_streaming";
    input: typeof ReadTagCostsRequestSchema;
    output: typeof CostItemSchema;
  },
  /**
   * Reads the usage-based non tag costs of a billing group.
   *
   * At the moment, the supported `{vendor}` is `aws`. If datetime range parameters are not set, month-to-date (current month) will be returned.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadNonTagCosts
   */
  readNonTagCosts: {
    methodKind: "server_streaming";
    input: typeof ReadNonTagCostsRequestSchema;
    output: typeof CostItemSchema;
  },
  /**
   * Fetches cost forecasts for the specified billing group. Includes historical cost (up to previous month) and forecasted cost (up to three months for now).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetForecasts
   */
  getForecasts: {
    methodKind: "unary";
    input: typeof GetForecastsRequestSchema;
    output: typeof GetForecastsResponseSchema;
  },
  /**
   * Fetches monthly accumulated costs vs forecasted cost vs budget for the id.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetMonthlyCostForecast
   */
  getMonthlyCostForecast: {
    methodKind: "unary";
    input: typeof GetMonthlyCostForecastRequestSchema;
    output: typeof GetMonthlyCostForecastResponseSchema;
  },
  /**
   * Fetches previous month cost vs current month forecast vs current accumulated cost per category for id.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetMonthOnMonthCostForecast
   */
  getMonthOnMonthCostForecast: {
    methodKind: "unary";
    input: typeof GetMonthOnMonthCostForecastRequestSchema;
    output: typeof GetMonthOnMonthCostForecastResponseSchema;
  },
  /**
   * Fetches current month daily forecast vs current accumulated daily cost for id.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetMonthToDateCostForecast
   */
  getMonthToDateCostForecast: {
    methodKind: "unary";
    input: typeof GetMonthToDateCostForecastRequestSchema;
    output: typeof GetMonthToDateCostForecastResponseSchema;
  },
  /**
   * Fetches monthly budget for the account/acctgroup id.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetAccountBudget
   */
  getAccountBudget: {
    methodKind: "unary";
    input: typeof GetAccountBudgetRequestSchema;
    output: typeof GetAccountBudgetResponseSchema;
  },
  /**
   * Creates monthly budget for the account/acctgroup id.
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateAccountBudget
   */
  createAccountBudget: {
    methodKind: "unary";
    input: typeof CreateAccountBudgetRequestSchema;
    output: typeof CreateAccountBudgetResponseSchema;
  },
  /**
   * Updates monthly budget for the account/acctgroup id.
   *
   * @generated from rpc blueapi.cost.v1.Cost.UpdateAccountBudget
   */
  updateAccountBudget: {
    methodKind: "unary";
    input: typeof UpdateAccountBudgetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Removes monthly budget for the account/acctgroup id from database.
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteAccountBudget
   */
  deleteAccountBudget: {
    methodKind: "unary";
    input: typeof DeleteAccountBudgetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Get the budget alerts for the account id. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetAccountBudgetAlerts
   */
  getAccountBudgetAlerts: {
    methodKind: "unary";
    input: typeof GetAccountBudgetAlertsRequestSchema;
    output: typeof BudgetAlertSchema;
  },
  /**
   * Create the budget alerts for the account id. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateAccountBudgetAlerts
   */
  createAccountBudgetAlerts: {
    methodKind: "unary";
    input: typeof CreateAccountBudgetAlertsRequestSchema;
    output: typeof BudgetAlertSchema;
  },
  /**
   * Update the budget alerts for the account id. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.UpdateAccountBudgetAlerts
   */
  updateAccountBudgetAlerts: {
    methodKind: "unary";
    input: typeof UpdateAccountBudgetAlertsRequestSchema;
    output: typeof BudgetAlertSchema;
  },
  /**
   * Delete the budget alerts for the account id. Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteAccountBudgetAlerts
   */
  deleteAccountBudgetAlerts: {
    methodKind: "unary";
    input: typeof DeleteAccountBudgetAlertsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * ReadBudgetAlerts
   *
   * Reads the budget alerts.
   * Only available in Wave(Pro).
   * [ERRORS] 
   * - Unimplemented:
   *   - not implemented
   * - InvalidArgument:
   *   - parse error
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadBudgetAlerts
   */
  readBudgetAlerts: {
    methodKind: "server_streaming";
    input: typeof ReadBudgetAlertsRequestSchema;
    output: typeof BudgetAlertsSchema;
  },
  /**
   * GetBudgetAlerts
   *
   * Gets the budget alerts.
   * Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetBudgetAlerts
   */
  getBudgetAlerts: {
    methodKind: "unary";
    input: typeof GetBudgetAlertsRequestSchema;
    output: typeof BudgetAlertsSchema;
  },
  /**
   * CreateBudgetAlerts
   *
   * Create the budget alerts.
   * Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.CreateBudgetAlerts
   */
  createBudgetAlerts: {
    methodKind: "unary";
    input: typeof CreateBudgetAlertsRequestSchema;
    output: typeof BudgetAlertsSchema;
  },
  /**
   * UpdateBudgetAlerts
   *
   * Updates the budget alerts.
   * Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.UpdateBudgetAlerts
   */
  updateBudgetAlerts: {
    methodKind: "unary";
    input: typeof UpdateBudgetAlertsRequestSchema;
    output: typeof BudgetAlertsSchema;
  },
  /**
   * DeleteBudgetAlerts
   *
   * Deletes the budget alerts.
   * Only available in Wave(Pro).
   *
   * @generated from rpc blueapi.cost.v1.Cost.DeleteBudgetAlerts
   */
  deleteBudgetAlerts: {
    methodKind: "unary";
    input: typeof DeleteBudgetAlertsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Get cost opmtimization recommendations for an organization (or MSP).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetRecommendations
   */
  getRecommendations: {
    methodKind: "unary";
    input: typeof GetRecommendationsRequestSchema;
    output: typeof GetRecommendationsResponseSchema;
  },
  /**
   * Get cost reduction details for an organization (or MSP).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetCostReduction
   */
  getCostReduction: {
    methodKind: "unary";
    input: typeof GetCostReductionRequestSchema;
    output: typeof GetCostReductionResponseSchema;
  },
  /**
   * Exports RI and SP for all payers. 
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetExportRISP
   */
  getExportRISP: {
    methodKind: "unary";
    input: typeof GetExportRISPRequestSchema;
    output: typeof GetExportRISPResponseSchema;
  },
  /**
   * Get the utilization details for an organization (or MSP).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetUtilization
   */
  getUtilization: {
    methodKind: "unary";
    input: typeof GetUtilizationRequestSchema;
    output: typeof GetUtilizationResponseSchema;
  },
  /**
   * Get coverage options details for an organization (or MSP).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetCoverageOptions
   */
  getCoverageOptions: {
    methodKind: "unary";
    input: typeof GetCoverageOptionsRequestSchema;
    output: typeof GetCoverageOptionsResponseSchema;
  },
  /**
   * Get ondemand cost details for an organization (or MSP).
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetCoverageOndemand
   */
  getCoverageOndemand: {
    methodKind: "unary";
    input: typeof GetCoverageOndemandRequestSchema;
    output: typeof GetCoverageOndemandResponseSchema;
  },
  /**
   * Get the breakeven point details for the RI or SP.
   *
   * @generated from rpc blueapi.cost.v1.Cost.GetBreakevenPoint
   */
  getBreakevenPoint: {
    methodKind: "unary";
    input: typeof GetBreakevenPointRequestSchema;
    output: typeof GetBreakevenPointResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Check inputed accountIds belong to current MSP or not
   *
   * @generated from rpc blueapi.cost.v1.Cost.CheckAccountsBelongToMsp
   */
  checkAccountsBelongToMsp: {
    methodKind: "unary";
    input: typeof CheckAccountsRequestSchema;
    output: typeof CheckAccountsResponseSchema;
  },
  /**
   * Read the invoice ids. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadInvoiceIds
   */
  readInvoiceIds: {
    methodKind: "server_streaming";
    input: typeof ReadInvoiceIdsRequestSchema;
    output: typeof ReadInvoiceIdsResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Read the invoice overviews. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadInvoiceOverViews
   */
  readInvoiceOverViews: {
    methodKind: "server_streaming";
    input: typeof ReadInvoiceOverviewsRequestSchema;
    output: typeof OverViewSectionSchema;
  },
  /**
   * WORK-IN-PROGRESS: Read the invoice costs. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadInvoiceCosts
   */
  readInvoiceCosts: {
    methodKind: "server_streaming";
    input: typeof ReadInvoiceCostsRequestSchema;
    output: typeof TotalSectionSchema;
  },
  /**
   * WORK-IN-PROGRESS: Read the invoice group costs. Only available in Ripple.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ReadInvoiceGroupCosts
   */
  readInvoiceGroupCosts: {
    methodKind: "server_streaming";
    input: typeof ReadInvoiceGroupCostsRequestSchema;
    output: typeof BillingGroupSectionSchema;
  },
  /**
   * WORK-IN-PROGRESS: List the prerequisites for cost calculations.
   *
   * @generated from rpc blueapi.cost.v1.Cost.ListCalculationPrerequisites
   */
  listCalculationPrerequisites: {
    methodKind: "unary";
    input: typeof ListCalculationPrerequisitesRequestSchema;
    output: typeof ListCalculationPrerequisitesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cost_v1_cost, 0);

