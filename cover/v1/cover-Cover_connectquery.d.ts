// @generated by protoc-gen-connect-query v2.1.1
// @generated from file cover/v1/cover.proto (package blueapi.cover.v1, syntax proto3)
/* eslint-disable */

import { Cover } from "./cover_pb";

/**
 * Onboard an organization with an admin account and default cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.OnboardOrg
 */
export const onboardOrg: typeof Cover["method"]["onboardOrg"];
/**
 * Invite members to the system
 *
 * @generated from rpc blueapi.cover.v1.Cover.InviteMember
 */
export const inviteMember: typeof Cover["method"]["inviteMember"];
/**
 * Activate the added user
 *
 * @generated from rpc blueapi.cover.v1.Cover.ActivateUser
 */
export const activateUser: typeof Cover["method"]["activateUser"];
/**
 * Create a member
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateMember
 */
export const createMember: typeof Cover["method"]["createMember"];
/**
 * Get all the members/subusers of the company
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetMembers
 */
export const getMembers: typeof Cover["method"]["getMembers"];
/**
 * Get the details of the user
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetMemberDetails
 */
export const getMemberDetails: typeof Cover["method"]["getMemberDetails"];
/**
 * Get the cost group to which the member is attached
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetMemberCostGroup
 */
export const getMemberCostGroup: typeof Cover["method"]["getMemberCostGroup"];
/**
 * Modify member's permission
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateMemberPermission
 */
export const updateMemberPermission: typeof Cover["method"]["updateMemberPermission"];
/**
 * Get the details of the logged-in user
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetUserDetails
 */
export const getUserDetails: typeof Cover["method"]["getUserDetails"];
/**
 * Modify user's avatar
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserAvatar
 */
export const updateUserAvatar: typeof Cover["method"]["updateUserAvatar"];
/**
 * Modify user's icon
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserIcon
 */
export const updateUserIcon: typeof Cover["method"]["updateUserIcon"];
/**
 * Modify user's color theme
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserColorTheme
 */
export const updateUserColorTheme: typeof Cover["method"]["updateUserColorTheme"];
/**
 * Modify user's name
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserName
 */
export const updateUserName: typeof Cover["method"]["updateUserName"];
/**
 * Modify user's email
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserEmail
 */
export const updateUserEmail: typeof Cover["method"]["updateUserEmail"];
/**
 * Modify user's main view
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserMainView
 */
export const updateUserMainView: typeof Cover["method"]["updateUserMainView"];
/**
 * Reset user's password
 *
 * @generated from rpc blueapi.cover.v1.Cover.ResetUserPassword
 */
export const resetUserPassword: typeof Cover["method"]["resetUserPassword"];
/**
 * Modify user's locale
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserLocale
 */
export const updateUserLocale: typeof Cover["method"]["updateUserLocale"];
/**
 * Modify user's app theme
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserAppTheme
 */
export const updateUserAppTheme: typeof Cover["method"]["updateUserAppTheme"];
/**
 * Modify user's timezone
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserTimezone
 */
export const updateUserTimezone: typeof Cover["method"]["updateUserTimezone"];
/**
 * Modify attributes
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserAttributes
 */
export const updateUserAttributes: typeof Cover["method"]["updateUserAttributes"];
/**
 * Deletes a user
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteMember
 */
export const deleteMember: typeof Cover["method"]["deleteMember"];
/**
 * Reset member's password
 *
 * @generated from rpc blueapi.cover.v1.Cover.ResetPassword
 */
export const resetPassword: typeof Cover["method"]["resetPassword"];
/**
 * Create a view
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateView
 */
export const createView: typeof Cover["method"]["createView"];
/**
 * Get all the views
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetViews
 */
export const getViews: typeof Cover["method"]["getViews"];
/**
 * Get the details of the current view
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCurrentView
 */
export const getCurrentView: typeof Cover["method"]["getCurrentView"];
/**
 * Get favorite views
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetFavoriteViews
 */
export const getFavoriteViews: typeof Cover["method"]["getFavoriteViews"];
/**
 * Publish current view
 *
 * @generated from rpc blueapi.cover.v1.Cover.PublishView
 */
export const publishView: typeof Cover["method"]["publishView"];
/**
 * Add to favorites
 *
 * @generated from rpc blueapi.cover.v1.Cover.AddFavorite
 */
export const addFavorite: typeof Cover["method"]["addFavorite"];
/**
 * Remove from favorites
 *
 * @generated from rpc blueapi.cover.v1.Cover.RemoveFavorite
 */
export const removeFavorite: typeof Cover["method"]["removeFavorite"];
/**
 * Updates the view details
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateView
 */
export const updateView: typeof Cover["method"]["updateView"];
/**
 * Updates the view's layout
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateViewLayout
 */
export const updateViewLayout: typeof Cover["method"]["updateViewLayout"];
/**
 * Updates the view's widget
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateViewWidget
 */
export const updateViewWidget: typeof Cover["method"]["updateViewWidget"];
/**
 * Update view's color theme
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateViewColorTheme
 */
export const updateViewColorTheme: typeof Cover["method"]["updateViewColorTheme"];
/**
 * Update report's currency settings
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateViewCurrency
 */
export const updateViewCurrency: typeof Cover["method"]["updateViewCurrency"];
/**
 * Sets Org's reference of currency exchange rate
 *
 * @generated from rpc blueapi.cover.v1.Cover.SetOrgUpdateCurrency
 */
export const setOrgUpdateCurrency: typeof Cover["method"]["setOrgUpdateCurrency"];
/**
 * Get Org's reference of currency exchange rate
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetOrgUpdateCurrency
 */
export const getOrgUpdateCurrency: typeof Cover["method"]["getOrgUpdateCurrency"];
/**
 * Get list of exchange rates for a fixed report
 *
 * @generated from rpc blueapi.cover.v1.Cover.ListExchangeRates
 */
export const listExchangeRates: typeof Cover["method"]["listExchangeRates"];
/**
 * Deletes a view
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteView
 */
export const deleteView: typeof Cover["method"]["deleteView"];
/**
 * Updates the side menu state
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateSideMenuState
 */
export const updateSideMenuState: typeof Cover["method"]["updateSideMenuState"];
/**
 * Add as side menu favorite
 *
 * @generated from rpc blueapi.cover.v1.Cover.AddSideMenuFavorite
 */
export const addSideMenuFavorite: typeof Cover["method"]["addSideMenuFavorite"];
/**
 * Remove from side menu favorite
 *
 * @generated from rpc blueapi.cover.v1.Cover.RemoveSideMenuFavorite
 */
export const removeSideMenuFavorite: typeof Cover["method"]["removeSideMenuFavorite"];
/**
 * Create a cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateCostGroup
 */
export const createCostGroup: typeof Cover["method"]["createCostGroup"];
/**
 * Get all the cost groups
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCostGroups
 */
export const getCostGroups: typeof Cover["method"]["getCostGroups"];
/**
 * Retrieve the categories to be utilized in the creation of the cost group.
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCategories
 */
export const getCategories: typeof Cover["method"]["getCategories"];
/**
 * Get the details of the cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCostGroupDetails
 */
export const getCostGroupDetails: typeof Cover["method"]["getCostGroupDetails"];
/**
 * Update cost group's name
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupName
 */
export const updateCostGroupName: typeof Cover["method"]["updateCostGroupName"];
/**
 * Update cost group's description
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupDescription
 */
export const updateCostGroupDescription: typeof Cover["method"]["updateCostGroupDescription"];
/**
 * Update cost group's image
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupImage
 */
export const updateCostGroupImage: typeof Cover["method"]["updateCostGroupImage"];
/**
 * Update cost group's icon
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupIcon
 */
export const updateCostGroupIcon: typeof Cover["method"]["updateCostGroupIcon"];
/**
 * Update cost group's color theme
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupColorTheme
 */
export const updateCostGroupColorTheme: typeof Cover["method"]["updateCostGroupColorTheme"];
/**
 * Update cost group's combinations
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupCombinations
 */
export const updateCostGroupCombinations: typeof Cover["method"]["updateCostGroupCombinations"];
/**
 * @generated from rpc blueapi.cover.v1.Cover.ResolveCostGroupCombinations
 */
export const resolveCostGroupCombinations: typeof Cover["method"]["resolveCostGroupCombinations"];
/**
 * Assign a member to a cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.AssignCostGroupMember
 */
export const assignCostGroupMember: typeof Cover["method"]["assignCostGroupMember"];
/**
 * Remove a member from a cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.RemoveCostGroupMember
 */
export const removeCostGroupMember: typeof Cover["method"]["removeCostGroupMember"];
/**
 * Deletes a cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteCostGroup
 */
export const deleteCostGroup: typeof Cover["method"]["deleteCostGroup"];
/**
 * Gets a CloudFormation launch URL for enabling the account access.
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAccountAccessTemplateUrl
 */
export const getAccountAccessTemplateUrl: typeof Cover["method"]["getAccountAccessTemplateUrl"];
/**
 * Gets the current account role attached to the input target.
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAccountAccess
 */
export const getAccountAccess: typeof Cover["method"]["getAccountAccess"];
/**
 * Gets the current account. For GCP and Azure.
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetDataAccess
 */
export const getDataAccess: typeof Cover["method"]["getDataAccess"];
/**
 * Deletes GCP or Azure accounts based on the provided request.
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteDataAccess
 */
export const deleteDataAccess: typeof Cover["method"]["deleteDataAccess"];
/**
 * Starts validation of the account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateAccountAccess
 */
export const createAccountAccess: typeof Cover["method"]["createAccountAccess"];
/**
 * Starts validation of the account access stackset deployment. If successful, the IAM role created from the CloudFormation stackset will be registered to the linked accounts.
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateAccountAccessStackset
 */
export const createAccountAccessStackset: typeof Cover["method"]["createAccountAccessStackset"];
/**
 * Starts validation of the account access cur stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateAccountAccessCur
 */
export const createAccountAccessCur: typeof Cover["method"]["createAccountAccessCur"];
/**
 * Starts an update to an existing account access CloudFormation stack for template changes, if any. Only call this API if the status of your account access is 'outdated'.
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateAccountAccess
 */
export const updateAccountAccess: typeof Cover["method"]["updateAccountAccess"];
/**
 * Deletes the current account access role attached to this target account. This does not delete the CloudFormation deployment in your account.
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteAccountAccess
 */
export const deleteAccountAccess: typeof Cover["method"]["deleteAccountAccess"];
/**
 * Registers an account
 *
 * @generated from rpc blueapi.cover.v1.Cover.RegisterAccount
 */
export const registerAccount: typeof Cover["method"]["registerAccount"];
/**
 * Registers GCP/Azure account.
 *
 * @generated from rpc blueapi.cover.v1.Cover.RegisterDataAccess
 */
export const registerDataAccess: typeof Cover["method"]["registerDataAccess"];
/**
 * Add Billing Account ID for GCP. 
 *
 * @generated from rpc blueapi.cover.v1.Cover.AddBillingAccount
 */
export const addBillingAccount: typeof Cover["method"]["addBillingAccount"];
/**
 * Lists unregistered linked accounts
 *
 * @generated from rpc blueapi.cover.v1.Cover.ListUnregisteredAccounts
 */
export const listUnregisteredAccounts: typeof Cover["method"]["listUnregisteredAccounts"];
/**
 * Update GCP/Azure account info
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateDataAccess
 */
export const updateDataAccess: typeof Cover["method"]["updateDataAccess"];
/**
 * WORK-IN-PROGRESS: Assets summary for costgroup 
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAssetsSummary
 */
export const getAssetsSummary: typeof Cover["method"]["getAssetsSummary"];
/**
 * Gets the right sizing recommendation of all the accounts in the costgroup
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetRightSizingRecommendation
 */
export const getRightSizingRecommendation: typeof Cover["method"]["getRightSizingRecommendation"];
/**
 * Modify resource type from right sizing recommendation
 *
 * @generated from rpc blueapi.cover.v1.Cover.ModifyResourceType
 */
export const modifyResourceType: typeof Cover["method"]["modifyResourceType"];
/**
 * Terminate a resource from right sizing recommendation
 *
 * @generated from rpc blueapi.cover.v1.Cover.TerminateResource
 */
export const terminateResource: typeof Cover["method"]["terminateResource"];
/**
 * Assign payer to a linked account
 *
 * @generated from rpc blueapi.cover.v1.Cover.AssignPayer
 */
export const assignPayer: typeof Cover["method"]["assignPayer"];
/**
 * Get list of all payers
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetPayers
 */
export const getPayers: typeof Cover["method"]["getPayers"];
/**
 * Get list of registered accounts
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAccounts
 */
export const getAccounts: typeof Cover["method"]["getAccounts"];
/**
 * Get list of supported services
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetServices
 */
export const getServices: typeof Cover["method"]["getServices"];
/**
 * Get list of available regions
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetRegions
 */
export const getRegions: typeof Cover["method"]["getRegions"];
/**
 * Get list of available tags
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetTags
 */
export const getTags: typeof Cover["method"]["getTags"];
/**
 * WORK-IN-PROGRESS: Creates cost allocator item
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateAllocator
 */
export const createAllocator: typeof Cover["method"]["createAllocator"];
/**
 * Get all available attributes for the charges
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAllocationAttributes
 */
export const getAllocationAttributes: typeof Cover["method"]["getAllocationAttributes"];
/**
 * Get all values of the allocation source
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAllocationSources
 */
export const getAllocationSources: typeof Cover["method"]["getAllocationSources"];
/**
 * WORK-IN-PROGRESS: Updates a cost allocator item
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateAllocator
 */
export const updateAllocator: typeof Cover["method"]["updateAllocator"];
/**
 * WORK-IN-PROGRESS: Deletes a cost allocator
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteAllocator
 */
export const deleteAllocator: typeof Cover["method"]["deleteAllocator"];
/**
 * WORK-IN-PROGRESS: Add or read user from Auth0
 *
 * @generated from rpc blueapi.cover.v1.Cover.ProcessAuth0User
 */
export const processAuth0User: typeof Cover["method"]["processAuth0User"];
/**
 * WORK-IN-PROGRESS: PartnerCenterCredentials for Azure
 *
 * @generated from rpc blueapi.cover.v1.Cover.AddPartnerCenterCredentials
 */
export const addPartnerCenterCredentials: typeof Cover["method"]["addPartnerCenterCredentials"];
/**
 * WORK-IN-PROGRESS: Adding MpnSetting for Azure
 *
 * @generated from rpc blueapi.cover.v1.Cover.AddMpnSetting
 */
export const addMpnSetting: typeof Cover["method"]["addMpnSetting"];
/**
 * WORK-IN-PROGRESS: Get Cost Group by Attribute Type
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCostGroupAttribute
 */
export const getCostGroupAttribute: typeof Cover["method"]["getCostGroupAttribute"];
/**
 * Create Alerts under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateAlert
 */
export const createAlert: typeof Cover["method"]["createAlert"];
/**
 * Get Specific Alert under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAlertDetails
 */
export const getAlertDetails: typeof Cover["method"]["getAlertDetails"];
/**
 * Delete Specific Alert under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteAlert
 */
export const deleteAlert: typeof Cover["method"]["deleteAlert"];
/**
 * Update Specific Alert under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateAlertDetails
 */
export const updateAlertDetails: typeof Cover["method"]["updateAlertDetails"];
/**
 * WORK-IN-PROGRESS: Create Channel under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateChannel
 */
export const createChannel: typeof Cover["method"]["createChannel"];
/**
 * WORK-IN-PROGRESS: Get Specific Channel under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetChannelDetails
 */
export const getChannelDetails: typeof Cover["method"]["getChannelDetails"];
/**
 * WORK-IN-PROGRESS: Delete Specific Channel under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteChannel
 */
export const deleteChannel: typeof Cover["method"]["deleteChannel"];
/**
 * WORK-IN-PROGRESS: Update Specific Channel under organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateChannelDetails
 */
export const updateChannelDetails: typeof Cover["method"]["updateChannelDetails"];
/**
 * Get the discount recommendations for every account in a cost group
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetDiscountRecommendations
 */
export const getDiscountRecommendations: typeof Cover["method"]["getDiscountRecommendations"];
/**
 * Create discount Expiration Alert.
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateDiscountExpirationAlert
 */
export const createDiscountExpirationAlert: typeof Cover["method"]["createDiscountExpirationAlert"];
/**
 * Update discount Expiration Alert
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateDiscountExpirationAlert
 */
export const updateDiscountExpirationAlert: typeof Cover["method"]["updateDiscountExpirationAlert"];
/**
 * Get discount Expiration Alert Data
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetDiscountExpirationAlert
 */
export const getDiscountExpirationAlert: typeof Cover["method"]["getDiscountExpirationAlert"];
/**
 * Delete selected discount Expiration Alert Data
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteDiscountExpirationAlert
 */
export const deleteDiscountExpirationAlert: typeof Cover["method"]["deleteDiscountExpirationAlert"];
/**
 * Create Anomaly Alert
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateAnomalyAlert
 */
export const createAnomalyAlert: typeof Cover["method"]["createAnomalyAlert"];
/**
 * Delete Anomaly Alert
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteAnomalyAlert
 */
export const deleteAnomalyAlert: typeof Cover["method"]["deleteAnomalyAlert"];
/**
 * Get Anomaly Alert Data
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetAnomalyAlert
 */
export const getAnomalyAlert: typeof Cover["method"]["getAnomalyAlert"];
/**
 * Update Anomaly Alert
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateAnomalyAlert
 */
export const updateAnomalyAlert: typeof Cover["method"]["updateAnomalyAlert"];
/**
 * Octo new user registration
 *
 * @generated from rpc blueapi.cover.v1.Cover.RegisterNewUser
 */
export const registerNewUser: typeof Cover["method"]["registerNewUser"];
/**
 * Octo getting user profile
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetUserProfile
 */
export const getUserProfile: typeof Cover["method"]["getUserProfile"];
/**
 * Update user profile
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUserProfile
 */
export const updateUserProfile: typeof Cover["method"]["updateUserProfile"];
/**
 * WORK-IN-PROGRESS: Get specific Budget data for a cost group in an organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetBudget
 */
export const getBudget: typeof Cover["method"]["getBudget"];
/**
 * WORK-IN-PROGRESS: Create Budget for specific cost group in an organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateBudget
 */
export const createBudget: typeof Cover["method"]["createBudget"];
/**
 * WORK-IN-PROGRESS: Delete Budget for specific cost group in an organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteBudget
 */
export const deleteBudget: typeof Cover["method"]["deleteBudget"];
/**
 * WORK-IN-PROGRESS: Update Budget for specific cost group in an organization
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateBudget
 */
export const updateBudget: typeof Cover["method"]["updateBudget"];
/**
 * WORK-IN-PROGRESS:Resolve user for aws marketplace subscription integration
 *
 * @generated from rpc blueapi.cover.v1.Cover.ResolveAWSMarketplaceTokenForOnboarding
 */
export const resolveAWSMarketplaceTokenForOnboarding: typeof Cover["method"]["resolveAWSMarketplaceTokenForOnboarding"];
/**
 * Get the Customer Subscription status from marketplace
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCustomerSubscriptionStatus
 */
export const getCustomerSubscriptionStatus: typeof Cover["method"]["getCustomerSubscriptionStatus"];
/**
 * Profiling for new users.
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateProfiling
 */
export const createProfiling: typeof Cover["method"]["createProfiling"];
/**
 * Adding orgId to marketplace customers
 *
 * @generated from rpc blueapi.cover.v1.Cover.AddInfotoMarketplace
 */
export const addInfotoMarketplace: typeof Cover["method"]["addInfotoMarketplace"];
/**
 * Get data for insights reports summary
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetReportSummary
 */
export const getReportSummary: typeof Cover["method"]["getReportSummary"];
/**
 * Retrieves a specific recommendation by its ID.
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetRecommendation
 */
export const getRecommendation: typeof Cover["method"]["getRecommendation"];
/**
 * Retrieves a specific recommendation by its ID. (Version 2)
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetRecommendationV2
 */
export const getRecommendationV2: typeof Cover["method"]["getRecommendationV2"];
/**
 * Executes optimization based on a recommendation.
 *
 * @generated from rpc blueapi.cover.v1.Cover.ExecuteOptimization
 */
export const executeOptimization: typeof Cover["method"]["executeOptimization"];
/**
 * Mark a recommendation executed.
 *
 * @generated from rpc blueapi.cover.v1.Cover.MarkAsExecuted
 */
export const markAsExecuted: typeof Cover["method"]["markAsExecuted"];
/**
 * Undo a executed recommendation (For recommendation).
 *
 * @generated from rpc blueapi.cover.v1.Cover.UndoExecutedRecommendation
 */
export const undoExecutedRecommendation: typeof Cover["method"]["undoExecutedRecommendation"];
/**
 * Lists recommendations based on specified criteria.
 *
 * @generated from rpc blueapi.cover.v1.Cover.OptimizationHistory
 */
export const optimizationHistory: typeof Cover["method"]["optimizationHistory"];
/**
 * Sets Cost group's event indicator
 *
 * @generated from rpc blueapi.cover.v1.Cover.SetCostGroupEventIndicator
 */
export const setCostGroupEventIndicator: typeof Cover["method"]["setCostGroupEventIndicator"];
/**
 * Sets Cost group's anomaly options
 *
 * @generated from rpc blueapi.cover.v1.Cover.SetCostGroupAnomalyOptions
 */
export const setCostGroupAnomalyOptions: typeof Cover["method"]["setCostGroupAnomalyOptions"];
/**
 * Sets Org's starting month/ fiscal month
 *
 * @generated from rpc blueapi.cover.v1.Cover.SetOrgFiscalMonth
 */
export const setOrgFiscalMonth: typeof Cover["method"]["setOrgFiscalMonth"];
/**
 * Get Org's starting month/ fiscal month
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetOrgFiscalMonth
 */
export const getOrgFiscalMonth: typeof Cover["method"]["getOrgFiscalMonth"];
/**
 * WORK-IN-PROGRESS: Transfer the account from the original organization to Alphaus payer account
 *
 * @generated from rpc blueapi.cover.v1.Cover.TransferOrganization
 */
export const transferOrganization: typeof Cover["method"]["transferOrganization"];
/**
 * WORK-IN-PROGRESS: Set user preference in cost group creation UI
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateCostGroupCreationUI
 */
export const updateCostGroupCreationUI: typeof Cover["method"]["updateCostGroupCreationUI"];
/**
 * Lists Unit Types
 *
 * @generated from rpc blueapi.cover.v1.Cover.ListUnitTypes
 */
export const listUnitTypes: typeof Cover["method"]["listUnitTypes"];
/**
 * Create Unit Type
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateUnitType
 */
export const createUnitType: typeof Cover["method"]["createUnitType"];
/**
 * Get Specific Unit Type 
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetUnitType
 */
export const getUnitType: typeof Cover["method"]["getUnitType"];
/**
 * Update Specific Unit Type
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUnitType
 */
export const updateUnitType: typeof Cover["method"]["updateUnitType"];
/**
 * Delete Specific Unit Type
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteUnitType
 */
export const deleteUnitType: typeof Cover["method"]["deleteUnitType"];
/**
 * Merge Existing Unit Types
 *
 * @generated from rpc blueapi.cover.v1.Cover.MergeUnits
 */
export const mergeUnits: typeof Cover["method"]["mergeUnits"];
/**
 * List Suggested Unit Types
 *
 * @generated from rpc blueapi.cover.v1.Cover.ListSuggestedUnits
 */
export const listSuggestedUnits: typeof Cover["method"]["listSuggestedUnits"];
/**
 * Merge Suggested Units
 *
 * @generated from rpc blueapi.cover.v1.Cover.MergeSuggestedUnits
 */
export const mergeSuggestedUnits: typeof Cover["method"]["mergeSuggestedUnits"];
/**
 * Create Unit from Suggested Units
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateUnitFromSuggested
 */
export const createUnitFromSuggested: typeof Cover["method"]["createUnitFromSuggested"];
/**
 * List all Shared Resources
 *
 * @generated from rpc blueapi.cover.v1.Cover.ListSharedResources
 */
export const listSharedResources: typeof Cover["method"]["listSharedResources"];
/**
 * Create Shared Resource
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateSharedResource
 */
export const createSharedResource: typeof Cover["method"]["createSharedResource"];
/**
 * Get Specific Shared Resource
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetSharedResource
 */
export const getSharedResource: typeof Cover["method"]["getSharedResource"];
/**
 * Update Specific Shared Resource
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateSharedResource
 */
export const updateSharedResource: typeof Cover["method"]["updateSharedResource"];
/**
 * Delete Specific Shared Resource
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteSharedResource
 */
export const deleteSharedResource: typeof Cover["method"]["deleteSharedResource"];
/**
 * List all Unit Metrics
 *
 * @generated from rpc blueapi.cover.v1.Cover.ListUnitMetrics
 */
export const listUnitMetrics: typeof Cover["method"]["listUnitMetrics"];
/**
 * Create Unit Metric
 *
 * @generated from rpc blueapi.cover.v1.Cover.CreateUnitMetric
 */
export const createUnitMetric: typeof Cover["method"]["createUnitMetric"];
/**
 * Get Specific Unit Metric
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetUnitMetric
 */
export const getUnitMetric: typeof Cover["method"]["getUnitMetric"];
/**
 * Update Specific Unit Metric
 *
 * @generated from rpc blueapi.cover.v1.Cover.UpdateUnitMetric
 */
export const updateUnitMetric: typeof Cover["method"]["updateUnitMetric"];
/**
 * Delete Specific Unit Metric
 *
 * @generated from rpc blueapi.cover.v1.Cover.DeleteUnitMetric
 */
export const deleteUnitMetric: typeof Cover["method"]["deleteUnitMetric"];
/**
 * Confirm Google Sheet Access
 *
 * @generated from rpc blueapi.cover.v1.Cover.ConfirmGoogleSheetAccess
 */
export const confirmGoogleSheetAccess: typeof Cover["method"]["confirmGoogleSheetAccess"];
/**
 * Preview Google Sheet Data
 *
 * @generated from rpc blueapi.cover.v1.Cover.PreviewGoogleSheet
 */
export const previewGoogleSheet: typeof Cover["method"]["previewGoogleSheet"];
/**
 * Get Cloudwatch Metadata
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetCloudwatchMetadata
 */
export const getCloudwatchMetadata: typeof Cover["method"]["getCloudwatchMetadata"];
/**
 * @generated from rpc blueapi.cover.v1.Cover.VerifyAPIAccess
 */
export const verifyAPIAccess: typeof Cover["method"]["verifyAPIAccess"];
/**
 * @generated from rpc blueapi.cover.v1.Cover.GetAICostAndUsage
 */
export const getAICostAndUsage: typeof Cover["method"]["getAICostAndUsage"];
/**
 * @generated from rpc blueapi.cover.v1.Cover.GetContainerCostUsage
 */
export const getContainerCostUsage: typeof Cover["method"]["getContainerCostUsage"];
/**
 * WORK-IN-PROGRESS: Populate demo data 
 *
 * @generated from rpc blueapi.cover.v1.Cover.PopulateDemoData
 */
export const populateDemoData: typeof Cover["method"]["populateDemoData"];
/**
 * WORK-IN-PROGRESS: Reset demo data
 *
 * @generated from rpc blueapi.cover.v1.Cover.ResetDemoData
 */
export const resetDemoData: typeof Cover["method"]["resetDemoData"];
/**
 * Get discount plan details for an organization (or MSP).
 *
 * @generated from rpc blueapi.cover.v1.Cover.GetDiscountPlan
 */
export const getDiscountPlan: typeof Cover["method"]["getDiscountPlan"];
