// Copyright 2018 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file google/api/monitored_resource.proto (package google.api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { LabelDescriptor } from "./label_pb";
import { file_google_api_label } from "./label_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/api/monitored_resource.proto.
 */
export const file_google_api_monitored_resource: GenFile = /*@__PURE__*/
  fileDesc("CiNnb29nbGUvYXBpL21vbml0b3JlZF9yZXNvdXJjZS5wcm90bxIKZ29vZ2xlLmFwaSKRAQobTW9uaXRvcmVkUmVzb3VyY2VEZXNjcmlwdG9yEgwKBG5hbWUYBSABKAkSDAoEdHlwZRgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSKwoGbGFiZWxzGAQgAygLMhsuZ29vZ2xlLmFwaS5MYWJlbERlc2NyaXB0b3IiiwEKEU1vbml0b3JlZFJlc291cmNlEgwKBHR5cGUYASABKAkSOQoGbGFiZWxzGAIgAygLMikuZ29vZ2xlLmFwaS5Nb25pdG9yZWRSZXNvdXJjZS5MYWJlbHNFbnRyeRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIsoBChlNb25pdG9yZWRSZXNvdXJjZU1ldGFkYXRhEi4KDXN5c3RlbV9sYWJlbHMYASABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EkoKC3VzZXJfbGFiZWxzGAIgAygLMjUuZ29vZ2xlLmFwaS5Nb25pdG9yZWRSZXNvdXJjZU1ldGFkYXRhLlVzZXJMYWJlbHNFbnRyeRoxCg9Vc2VyTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUJ5Cg5jb20uZ29vZ2xlLmFwaUIWTW9uaXRvcmVkUmVzb3VyY2VQcm90b1ABWkNnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2FwaS9tb25pdG9yZWRyZXM7bW9uaXRvcmVkcmVz+AEBogIER0FQSWIGcHJvdG8z", [file_google_api_label, file_google_protobuf_struct]);

/**
 * An object that describes the schema of a [MonitoredResource][google.api.MonitoredResource] object using a
 * type name and a set of labels.  For example, the monitored resource
 * descriptor for Google Compute Engine VM instances has a type of
 * `"gce_instance"` and specifies the use of the labels `"instance_id"` and
 * `"zone"` to identify particular VM instances.
 *
 * Different APIs can support different monitored resource types. APIs generally
 * provide a `list` method that returns the monitored resource descriptors used
 * by the API.
 *
 * @generated from message google.api.MonitoredResourceDescriptor
 */
export type MonitoredResourceDescriptor = Message<"google.api.MonitoredResourceDescriptor"> & {
  /**
   * Optional. The resource name of the monitored resource descriptor:
   * `"projects/{project_id}/monitoredResourceDescriptors/{type}"` where
   * {type} is the value of the `type` field in this object and
   * {project_id} is a project ID that provides API-specific context for
   * accessing the type.  APIs that do not use project information can use the
   * resource name format `"monitoredResourceDescriptors/{type}"`.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * Required. The monitored resource type. For example, the type
   * `"cloudsql_database"` represents databases in Google Cloud SQL.
   * The maximum length of this value is 256 characters.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Optional. A concise name for the monitored resource type that might be
   * displayed in user interfaces. It should be a Title Cased Noun Phrase,
   * without any article or other determiners. For example,
   * `"Google Cloud SQL Database"`.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. A detailed description of the monitored resource type that might
   * be used in documentation.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Required. A set of labels used to describe instances of this monitored
   * resource type. For example, an individual Google Cloud SQL database is
   * identified by values for the labels `"database_id"` and `"zone"`.
   *
   * @generated from field: repeated google.api.LabelDescriptor labels = 4;
   */
  labels: LabelDescriptor[];
};

/**
 * Describes the message google.api.MonitoredResourceDescriptor.
 * Use `create(MonitoredResourceDescriptorSchema)` to create a new message.
 */
export const MonitoredResourceDescriptorSchema: GenMessage<MonitoredResourceDescriptor> = /*@__PURE__*/
  messageDesc(file_google_api_monitored_resource, 0);

/**
 * An object representing a resource that can be used for monitoring, logging,
 * billing, or other purposes. Examples include virtual machine instances,
 * databases, and storage devices such as disks. The `type` field identifies a
 * [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object that describes the resource's
 * schema. Information in the `labels` field identifies the actual resource and
 * its attributes according to the schema. For example, a particular Compute
 * Engine VM instance could be represented by the following object, because the
 * [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] for `"gce_instance"` has labels
 * `"instance_id"` and `"zone"`:
 *
 *     { "type": "gce_instance",
 *       "labels": { "instance_id": "12345678901234",
 *                   "zone": "us-central1-a" }}
 *
 * @generated from message google.api.MonitoredResource
 */
export type MonitoredResource = Message<"google.api.MonitoredResource"> & {
  /**
   * Required. The monitored resource type. This field must match
   * the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object. For
   * example, the type of a Compute Engine VM instance is `gce_instance`.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Required. Values for all of the labels listed in the associated monitored
   * resource descriptor. For example, Compute Engine VM instances use the
   * labels `"project_id"`, `"instance_id"`, and `"zone"`.
   *
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.api.MonitoredResource.
 * Use `create(MonitoredResourceSchema)` to create a new message.
 */
export const MonitoredResourceSchema: GenMessage<MonitoredResource> = /*@__PURE__*/
  messageDesc(file_google_api_monitored_resource, 1);

/**
 * Auxiliary metadata for a [MonitoredResource][google.api.MonitoredResource] object.
 * [MonitoredResource][google.api.MonitoredResource] objects contain the minimum set of information to
 * uniquely identify a monitored resource instance. There is some other useful
 * auxiliary metadata. Google Stackdriver Monitoring & Logging uses an ingestion
 * pipeline to extract metadata for cloud resources of all types , and stores
 * the metadata in this message.
 *
 * @generated from message google.api.MonitoredResourceMetadata
 */
export type MonitoredResourceMetadata = Message<"google.api.MonitoredResourceMetadata"> & {
  /**
   * Output only. Values for predefined system metadata labels.
   * System labels are a kind of metadata extracted by Google Stackdriver.
   * Stackdriver determines what system labels are useful and how to obtain
   * their values. Some examples: "machine_image", "vpc", "subnet_id",
   * "security_group", "name", etc.
   * System label values can be only strings, Boolean values, or a list of
   * strings. For example:
   *
   *     { "name": "my-test-instance",
   *       "security_group": ["a", "b", "c"],
   *       "spot_instance": false }
   *
   * @generated from field: google.protobuf.Struct system_labels = 1;
   */
  systemLabels?: JsonObject;

  /**
   * Output only. A map of user-defined metadata labels.
   *
   * @generated from field: map<string, string> user_labels = 2;
   */
  userLabels: { [key: string]: string };
};

/**
 * Describes the message google.api.MonitoredResourceMetadata.
 * Use `create(MonitoredResourceMetadataSchema)` to create a new message.
 */
export const MonitoredResourceMetadataSchema: GenMessage<MonitoredResourceMetadata> = /*@__PURE__*/
  messageDesc(file_google_api_monitored_resource, 2);

