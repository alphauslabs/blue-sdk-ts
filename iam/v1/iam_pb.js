// @generated by protoc-gen-es v2.7.0
// @generated from file iam/v1/iam.proto (package blueapi.iam.v1, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_user } from "../../api/user_pb";
import { file_api_grouprootuser } from "../../api/grouprootuser_pb";
import { file_api_apiclient } from "../../api/apiclient_pb";
import { file_api_rbac } from "../../api/rbac_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../protoc-gen-openapiv2/options/annotations_pb";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file iam/v1/iam.proto.
 */
export const file_iam_v1_iam = /*@__PURE__*/
  fileDesc("", [file_api_user, file_api_grouprootuser, file_api_apiclient, file_api_rbac, file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_google_protobuf_empty]);

/**
 * Describes the message blueapi.iam.v1.WhoAmIRequest.
 * Use `create(WhoAmIRequestSchema)` to create a new message.
 */
export const WhoAmIRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 0);

/**
 * Describes the message blueapi.iam.v1.ListUsersRequest.
 * Use `create(ListUsersRequestSchema)` to create a new message.
 */
export const ListUsersRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 1);

/**
 * Describes the message blueapi.iam.v1.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export const GetUserRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 2);

/**
 * Describes the message blueapi.iam.v1.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export const CreateUserRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 3);

/**
 * Describes the message blueapi.iam.v1.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export const DeleteUserRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 4);

/**
 * Describes the message blueapi.iam.v1.CreateGroupRootUserRequest.
 * Use `create(CreateGroupRootUserRequestSchema)` to create a new message.
 */
export const CreateGroupRootUserRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 5);

/**
 * Describes the message blueapi.iam.v1.ListGroupRootUsersRequest.
 * Use `create(ListGroupRootUsersRequestSchema)` to create a new message.
 */
export const ListGroupRootUsersRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 6);

/**
 * Describes the message blueapi.iam.v1.GetGroupRootRequest.
 * Use `create(GetGroupRootRequestSchema)` to create a new message.
 */
export const GetGroupRootRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 7);

/**
 * Describes the message blueapi.iam.v1.DeleteGroupRootUserRequest.
 * Use `create(DeleteGroupRootUserRequestSchema)` to create a new message.
 */
export const DeleteGroupRootUserRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 8);

/**
 * Describes the message blueapi.iam.v1.GetFeatureFlagsRequest.
 * Use `create(GetFeatureFlagsRequestSchema)` to create a new message.
 */
export const GetFeatureFlagsRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 9);

/**
 * Describes the message blueapi.iam.v1.UpdateFeatureFlagsRequest.
 * Use `create(UpdateFeatureFlagsRequestSchema)` to create a new message.
 */
export const UpdateFeatureFlagsRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 10);

/**
 * Describes the message blueapi.iam.v1.ListApiClientsRequest.
 * Use `create(ListApiClientsRequestSchema)` to create a new message.
 */
export const ListApiClientsRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 11);

/**
 * Describes the message blueapi.iam.v1.CreateApiClientRequest.
 * Use `create(CreateApiClientRequestSchema)` to create a new message.
 */
export const CreateApiClientRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 12);

/**
 * Describes the message blueapi.iam.v1.DeleteApiClientRequest.
 * Use `create(DeleteApiClientRequestSchema)` to create a new message.
 */
export const DeleteApiClientRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 13);

/**
 * Describes the message blueapi.iam.v1.ListPermissionsRequest.
 * Use `create(ListPermissionsRequestSchema)` to create a new message.
 */
export const ListPermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 14);

/**
 * Describes the message blueapi.iam.v1.ListPermissionsResponse.
 * Use `create(ListPermissionsResponseSchema)` to create a new message.
 */
export const ListPermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 15);

/**
 * Describes the message blueapi.iam.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 16);

/**
 * Describes the message blueapi.iam.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 17);

/**
 * Describes the message blueapi.iam.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 18);

/**
 * Describes the message blueapi.iam.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export const UpdateRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 19);

/**
 * Describes the message blueapi.iam.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 20);

/**
 * Describes the message blueapi.iam.v1.ListUserRoleMappingsRequest.
 * Use `create(ListUserRoleMappingsRequestSchema)` to create a new message.
 */
export const ListUserRoleMappingsRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 21);

/**
 * Describes the message blueapi.iam.v1.ListUserRoleMappingsResponse.
 * Use `create(ListUserRoleMappingsResponseSchema)` to create a new message.
 */
export const ListUserRoleMappingsResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 22);

/**
 * Describes the message blueapi.iam.v1.MapRole.
 * Use `create(MapRoleSchema)` to create a new message.
 */
export const MapRoleSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 23);

/**
 * Describes the message blueapi.iam.v1.CreateUserRoleMappingRequest.
 * Use `create(CreateUserRoleMappingRequestSchema)` to create a new message.
 */
export const CreateUserRoleMappingRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 24);

/**
 * Describes the message blueapi.iam.v1.CreateUserRoleMappingResponse.
 * Use `create(CreateUserRoleMappingResponseSchema)` to create a new message.
 */
export const CreateUserRoleMappingResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 25);

/**
 * Describes the message blueapi.iam.v1.UpdateUserRoleMappingRequest.
 * Use `create(UpdateUserRoleMappingRequestSchema)` to create a new message.
 */
export const UpdateUserRoleMappingRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 26);

/**
 * Describes the message blueapi.iam.v1.UpdateUserRoleMappingResponse.
 * Use `create(UpdateUserRoleMappingResponseSchema)` to create a new message.
 */
export const UpdateUserRoleMappingResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 27);

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersRequest.
 * Use `create(ListIdentityProvidersRequestSchema)` to create a new message.
 */
export const ListIdentityProvidersRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 28);

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersResponse.
 * Use `create(ListIdentityProvidersResponseSchema)` to create a new message.
 */
export const ListIdentityProvidersResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 29);

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.
 * Use `create(ListIdentityProvidersResponse_IdentityProviderSchema)` to create a new message.
 */
export const ListIdentityProvidersResponse_IdentityProviderSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 29, 0);

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.samlInfo.
 * Use `create(ListIdentityProvidersResponse_IdentityProvider_samlInfoSchema)` to create a new message.
 */
export const ListIdentityProvidersResponse_IdentityProvider_samlInfoSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 29, 0, 0);

/**
 * Describes the message blueapi.iam.v1.CreateIdentityProviderRequest.
 * Use `create(CreateIdentityProviderRequestSchema)` to create a new message.
 */
export const CreateIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 30);

/**
 * Describes the message blueapi.iam.v1.DeleteIdentityProviderRequest.
 * Use `create(DeleteIdentityProviderRequestSchema)` to create a new message.
 */
export const DeleteIdentityProviderRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 31);

/**
 * Describes the message blueapi.iam.v1.IpFilter.
 * Use `create(IpFilterSchema)` to create a new message.
 */
export const IpFilterSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 32);

/**
 * Describes the message blueapi.iam.v1.ListIpFiltersRequest.
 * Use `create(ListIpFiltersRequestSchema)` to create a new message.
 */
export const ListIpFiltersRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 33);

/**
 * Describes the message blueapi.iam.v1.CreateIpFilterRequest.
 * Use `create(CreateIpFilterRequestSchema)` to create a new message.
 */
export const CreateIpFilterRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 34);

/**
 * Describes the message blueapi.iam.v1.DeleteIpFilterRequest.
 * Use `create(DeleteIpFilterRequestSchema)` to create a new message.
 */
export const DeleteIpFilterRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 35);

/**
 * Describes the message blueapi.iam.v1.PartnerToken.
 * Use `create(PartnerTokenSchema)` to create a new message.
 */
export const PartnerTokenSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 36);

/**
 * Describes the message blueapi.iam.v1.CreatePartnerTokenRequest.
 * Use `create(CreatePartnerTokenRequestSchema)` to create a new message.
 */
export const CreatePartnerTokenRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 37);

/**
 * Describes the message blueapi.iam.v1.RefreshPartnerTokenRequest.
 * Use `create(RefreshPartnerTokenRequestSchema)` to create a new message.
 */
export const RefreshPartnerTokenRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 38);

/**
 * Describes the message blueapi.iam.v1.VerifyUserForResetPasswordRequest.
 * Use `create(VerifyUserForResetPasswordRequestSchema)` to create a new message.
 */
export const VerifyUserForResetPasswordRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 39);

/**
 * Describes the message blueapi.iam.v1.VerifyUserForResetPasswordResponse.
 * Use `create(VerifyUserForResetPasswordResponseSchema)` to create a new message.
 */
export const VerifyUserForResetPasswordResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 40);

/**
 * Describes the message blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordRequest.
 * Use `create(ValidateResetPasswordLinkAndChangePasswordRequestSchema)` to create a new message.
 */
export const ValidateResetPasswordLinkAndChangePasswordRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 41);

/**
 * Describes the message blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordResponse.
 * Use `create(ValidateResetPasswordLinkAndChangePasswordResponseSchema)` to create a new message.
 */
export const ValidateResetPasswordLinkAndChangePasswordResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 42);

/**
 * Describes the message blueapi.iam.v1.MFAUsersInfoRequest.
 * Use `create(MFAUsersInfoRequestSchema)` to create a new message.
 */
export const MFAUsersInfoRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 43);

/**
 * Describes the message blueapi.iam.v1.MFAUser.
 * Use `create(MFAUserSchema)` to create a new message.
 */
export const MFAUserSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 44);

/**
 * Describes the message blueapi.iam.v1.MFAUsersInfoResponse.
 * Use `create(MFAUsersInfoResponseSchema)` to create a new message.
 */
export const MFAUsersInfoResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 45);

/**
 * Describes the message blueapi.iam.v1.GetSubUserRequest.
 * Use `create(GetSubUserRequestSchema)` to create a new message.
 */
export const GetSubUserRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 46);

/**
 * Describes the message blueapi.iam.v1.SendRipplePasswordResetCodeRequest.
 * Use `create(SendRipplePasswordResetCodeRequestSchema)` to create a new message.
 */
export const SendRipplePasswordResetCodeRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 47);

/**
 * Describes the message blueapi.iam.v1.ResetRipplePasswordRequest.
 * Use `create(ResetRipplePasswordRequestSchema)` to create a new message.
 */
export const ResetRipplePasswordRequestSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 48);

/**
 * Describes the message blueapi.iam.v1.ResetRipplePasswordResponse.
 * Use `create(ResetRipplePasswordResponseSchema)` to create a new message.
 */
export const ResetRipplePasswordResponseSchema = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 49);

/**
 * IAM service definition.
 *
 * @generated from service blueapi.iam.v1.Iam
 */
export const Iam = /*@__PURE__*/
  serviceDesc(file_iam_v1_iam, 0);

