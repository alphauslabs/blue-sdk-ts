// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file iam/v1/iam.proto (package blueapi.iam.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { SubUserSchema, UserSchema } from "../../api/user_pb";
import { file_api_user } from "../../api/user_pb";
import type { FeatureFlags, FeatureFlagsSchema, GroupRootUserSchema } from "../../api/grouprootuser_pb";
import { file_api_grouprootuser } from "../../api/grouprootuser_pb";
import type { ApiClientSchema } from "../../api/apiclient_pb";
import { file_api_apiclient } from "../../api/apiclient_pb";
import type { Permission, Role, RoleSchema, UserRoleMapping } from "../../api/rbac_pb";
import { file_api_rbac } from "../../api/rbac_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../protoc-gen-openapiv2/options/annotations_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file iam/v1/iam.proto.
 */
export const file_iam_v1_iam: GenFile = /*@__PURE__*/
  fileDesc("", [file_api_user, file_api_grouprootuser, file_api_apiclient, file_api_rbac, file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_google_protobuf_empty]);

/**
 * Request message for the Iam.WhoAmI rpc.
 *
 * @generated from message blueapi.iam.v1.WhoAmIRequest
 */
export type WhoAmIRequest = Message<"blueapi.iam.v1.WhoAmIRequest"> & {
};

/**
 * Describes the message blueapi.iam.v1.WhoAmIRequest.
 * Use `create(WhoAmIRequestSchema)` to create a new message.
 */
export const WhoAmIRequestSchema: GenMessage<WhoAmIRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 0);

/**
 * Request message for the Iam.ListUsers rpc.
 *
 * @generated from message blueapi.iam.v1.ListUsersRequest
 */
export type ListUsersRequest = Message<"blueapi.iam.v1.ListUsersRequest"> & {
};

/**
 * Describes the message blueapi.iam.v1.ListUsersRequest.
 * Use `create(ListUsersRequestSchema)` to create a new message.
 */
export const ListUsersRequestSchema: GenMessage<ListUsersRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 1);

/**
 * Request message for the Iam.GetUser rpc.
 *
 * @generated from message blueapi.iam.v1.GetUserRequest
 */
export type GetUserRequest = Message<"blueapi.iam.v1.GetUserRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export const GetUserRequestSchema: GenMessage<GetUserRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 2);

/**
 * Request message for the Iam.CreateUser rpc.
 *
 * @generated from message blueapi.iam.v1.CreateUserRequest
 */
export type CreateUserRequest = Message<"blueapi.iam.v1.CreateUserRequest"> & {
  /**
   * Required. Min: 4, max: 18, allowed characters: letters, numbers, `_` (underscore), `.` (period) and `-` (hyphen) characters.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Minimum of 8 characters.
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * Optional. Email address of the subuser.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * Optional. Nickname or description. It is set to 'name' if empty.
   *
   * @generated from field: string nickName = 4;
   */
  nickName: string;
};

/**
 * Describes the message blueapi.iam.v1.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export const CreateUserRequestSchema: GenMessage<CreateUserRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 3);

/**
 * Request message for the Iam.DeleteUser rpc.
 *
 * @generated from message blueapi.iam.v1.DeleteUserRequest
 */
export type DeleteUserRequest = Message<"blueapi.iam.v1.DeleteUserRequest"> & {
  /**
   * Required. The subuser name to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export const DeleteUserRequestSchema: GenMessage<DeleteUserRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 4);

/**
 * Request message for the Iam.CreateGroupRootUser rpc
 *
 * @generated from message blueapi.iam.v1.CreateGroupRootUserRequest
 */
export type CreateGroupRootUserRequest = Message<"blueapi.iam.v1.CreateGroupRootUserRequest"> & {
  /**
   * The email address of the user being created.
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * The password of the user being created. A value will be generated if not is provided for this field
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * The ID of the group to which the user will be added. This must either be a billing group ID or an access group ID.
   *
   * @generated from field: string groupId = 3;
   */
  groupId: string;

  /**
   * The type of group which is represented by the group ID. Valid values include "billing_group" or "access_group".
   *
   * @generated from field: string groupType = 4;
   */
  groupType: string;

  /**
   * This value determines whether the password should be auto-generated or if the plaintext value received with the request should be used. A value of "Auto" will result in an auto-generated password whereas a value of "Custom" will result in the password included with the request being used.
   *
   * @generated from field: string inputType = 5;
   */
  inputType: string;

  /**
   * The plan associated with the root-user account. Valid values include "trial", "limited3" and "limited4".
   *
   * @generated from field: string plan = 6;
   */
  plan: string;

  /**
   * Whether or not a notification should be sent to the provided email after the user has been created.
   *
   * @generated from field: bool emailNotification = 7;
   */
  emailNotification: boolean;

  /**
   * A collection of feature flags and whether or not they should be enabled. For a full list of such flags, see https://labs.alphaus.cloud/docs/blueapi/apis/iam/.
   *
   * @generated from field: blueapi.api.FeatureFlags meta = 8;
   */
  meta?: FeatureFlags;
};

/**
 * Describes the message blueapi.iam.v1.CreateGroupRootUserRequest.
 * Use `create(CreateGroupRootUserRequestSchema)` to create a new message.
 */
export const CreateGroupRootUserRequestSchema: GenMessage<CreateGroupRootUserRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 5);

/**
 * Request message for the Iam.ListGroupRootUsers rpc.
 *
 * @generated from message blueapi.iam.v1.ListGroupRootUsersRequest
 */
export type ListGroupRootUsersRequest = Message<"blueapi.iam.v1.ListGroupRootUsersRequest"> & {
};

/**
 * Describes the message blueapi.iam.v1.ListGroupRootUsersRequest.
 * Use `create(ListGroupRootUsersRequestSchema)` to create a new message.
 */
export const ListGroupRootUsersRequestSchema: GenMessage<ListGroupRootUsersRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 6);

/**
 * Request message for the Iam.GetGroupRootUser rpc.
 *
 * @generated from message blueapi.iam.v1.GetGroupRootRequest
 */
export type GetGroupRootRequest = Message<"blueapi.iam.v1.GetGroupRootRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.GetGroupRootRequest.
 * Use `create(GetGroupRootRequestSchema)` to create a new message.
 */
export const GetGroupRootRequestSchema: GenMessage<GetGroupRootRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 7);

/**
 * Request message for the Iam.DeleteGroupRootUser rpc.
 *
 * @generated from message blueapi.iam.v1.DeleteGroupRootUserRequest
 */
export type DeleteGroupRootUserRequest = Message<"blueapi.iam.v1.DeleteGroupRootUserRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.DeleteGroupRootUserRequest.
 * Use `create(DeleteGroupRootUserRequestSchema)` to create a new message.
 */
export const DeleteGroupRootUserRequestSchema: GenMessage<DeleteGroupRootUserRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 8);

/**
 * Request message for the Iam.GetUpdateFeatureFlags rpc.
 *
 * @generated from message blueapi.iam.v1.GetFeatureFlagsRequest
 */
export type GetFeatureFlagsRequest = Message<"blueapi.iam.v1.GetFeatureFlagsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.GetFeatureFlagsRequest.
 * Use `create(GetFeatureFlagsRequestSchema)` to create a new message.
 */
export const GetFeatureFlagsRequestSchema: GenMessage<GetFeatureFlagsRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 9);

/**
 * Request message for the Iam.UpdateFeatureFlags rpc.
 *
 * @generated from message blueapi.iam.v1.UpdateFeatureFlagsRequest
 */
export type UpdateFeatureFlagsRequest = Message<"blueapi.iam.v1.UpdateFeatureFlagsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: blueapi.api.FeatureFlags featureFlags = 2;
   */
  featureFlags?: FeatureFlags;
};

/**
 * Describes the message blueapi.iam.v1.UpdateFeatureFlagsRequest.
 * Use `create(UpdateFeatureFlagsRequestSchema)` to create a new message.
 */
export const UpdateFeatureFlagsRequestSchema: GenMessage<UpdateFeatureFlagsRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 10);

/**
 * Request message for the Iam.ListApiClients rpc.
 *
 * @generated from message blueapi.iam.v1.ListApiClientsRequest
 */
export type ListApiClientsRequest = Message<"blueapi.iam.v1.ListApiClientsRequest"> & {
};

/**
 * Describes the message blueapi.iam.v1.ListApiClientsRequest.
 * Use `create(ListApiClientsRequestSchema)` to create a new message.
 */
export const ListApiClientsRequestSchema: GenMessage<ListApiClientsRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 11);

/**
 * Request message for the Iam.CreateApiClient rpc.
 *
 * @generated from message blueapi.iam.v1.CreateApiClientRequest
 */
export type CreateApiClientRequest = Message<"blueapi.iam.v1.CreateApiClientRequest"> & {
  /**
   * Required. The descriptive name of the API client to create.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message blueapi.iam.v1.CreateApiClientRequest.
 * Use `create(CreateApiClientRequestSchema)` to create a new message.
 */
export const CreateApiClientRequestSchema: GenMessage<CreateApiClientRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 12);

/**
 * Request message for the Iam.DeleteApiClient rpc.
 *
 * @generated from message blueapi.iam.v1.DeleteApiClientRequest
 */
export type DeleteApiClientRequest = Message<"blueapi.iam.v1.DeleteApiClientRequest"> & {
  /**
   * Required. The client id to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.DeleteApiClientRequest.
 * Use `create(DeleteApiClientRequestSchema)` to create a new message.
 */
export const DeleteApiClientRequestSchema: GenMessage<DeleteApiClientRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 13);

/**
 * Request message for the Iam.ListPermissions rpc.
 *
 * @generated from message blueapi.iam.v1.ListPermissionsRequest
 */
export type ListPermissionsRequest = Message<"blueapi.iam.v1.ListPermissionsRequest"> & {
  /**
   * Optional. The subuser to query. If empty (default), query all available permissions. If set to a valid subuser, query that subuser's permissions, if allowed. You can also set this field to `me` to query your own permissions.
   *
   * @generated from field: string subUser = 1;
   */
  subUser: string;
};

/**
 * Describes the message blueapi.iam.v1.ListPermissionsRequest.
 * Use `create(ListPermissionsRequestSchema)` to create a new message.
 */
export const ListPermissionsRequestSchema: GenMessage<ListPermissionsRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 14);

/**
 * Response message for the Iam.ListPermissions rpc.
 *
 * @generated from message blueapi.iam.v1.ListPermissionsResponse
 */
export type ListPermissionsResponse = Message<"blueapi.iam.v1.ListPermissionsResponse"> & {
  /**
   * @generated from field: repeated blueapi.api.Permission permissions = 1;
   */
  permissions: Permission[];
};

/**
 * Describes the message blueapi.iam.v1.ListPermissionsResponse.
 * Use `create(ListPermissionsResponseSchema)` to create a new message.
 */
export const ListPermissionsResponseSchema: GenMessage<ListPermissionsResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 15);

/**
 * Request message for the Iam.ListRoles rpc.
 *
 * @generated from message blueapi.iam.v1.ListRolesRequest
 */
export type ListRolesRequest = Message<"blueapi.iam.v1.ListRolesRequest"> & {
  /**
   * Optional. If not set, all roles will be returned.
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;
};

/**
 * Describes the message blueapi.iam.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema: GenMessage<ListRolesRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 16);

/**
 * Response message for the Iam.ListRoles rpc.
 *
 * @generated from message blueapi.iam.v1.ListRolesResponse
 */
export type ListRolesResponse = Message<"blueapi.iam.v1.ListRolesResponse"> & {
  /**
   * @generated from field: repeated blueapi.api.Role roles = 1;
   */
  roles: Role[];
};

/**
 * Describes the message blueapi.iam.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema: GenMessage<ListRolesResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 17);

/**
 * Request message for the Iam.CreateRole rpc.
 *
 * @generated from message blueapi.iam.v1.CreateRoleRequest
 */
export type CreateRoleRequest = Message<"blueapi.iam.v1.CreateRoleRequest"> & {
  /**
   * Required. The name of the role to create. Role names should have at least 6 characters in length and 32 characters maximum. It should also be alphanumeric. Hyphens and underscores are allowed in between. The regular expression used for validation is `^[A-Za-z0-9][A-Za-z0-9_-]*[A-Za-z0-9]$`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The namespace where this role will belong.
   *
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * Required. The list of permissions to attach to this role.
   *
   * @generated from field: repeated string permissions = 3;
   */
  permissions: string[];
};

/**
 * Describes the message blueapi.iam.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema: GenMessage<CreateRoleRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 18);

/**
 * Request message for the Iam.UpdateRole rpc.
 *
 * @generated from message blueapi.iam.v1.UpdateRoleRequest
 */
export type UpdateRoleRequest = Message<"blueapi.iam.v1.UpdateRoleRequest"> & {
  /**
   * Required. The new namespace.
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * Required. The role name to update.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Optional. If set, update the current name to this.
   *
   * @generated from field: string newName = 3;
   */
  newName: string;

  /**
   * Required. The list of permissions to attach to this role.
   *
   * @generated from field: repeated string permissions = 4;
   */
  permissions: string[];
};

/**
 * Describes the message blueapi.iam.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export const UpdateRoleRequestSchema: GenMessage<UpdateRoleRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 19);

/**
 * Request message for the Iam.DeleteRole rpc.
 *
 * @generated from message blueapi.iam.v1.DeleteRoleRequest
 */
export type DeleteRoleRequest = Message<"blueapi.iam.v1.DeleteRoleRequest"> & {
  /**
   * Required. The parent namespace.
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * Required. The role name to delete.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message blueapi.iam.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 20);

/**
 * Request message for the Iam.ListUserRoleMappings rpc.
 *
 * @generated from message blueapi.iam.v1.ListUserRoleMappingsRequest
 */
export type ListUserRoleMappingsRequest = Message<"blueapi.iam.v1.ListUserRoleMappingsRequest"> & {
  /**
   * Optional. The subuser to query. Defaults to caller if not set.
   *
   * @generated from field: string subUser = 1;
   */
  subUser: string;
};

/**
 * Describes the message blueapi.iam.v1.ListUserRoleMappingsRequest.
 * Use `create(ListUserRoleMappingsRequestSchema)` to create a new message.
 */
export const ListUserRoleMappingsRequestSchema: GenMessage<ListUserRoleMappingsRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 21);

/**
 * Response message for the Iam.ListUserRoleMappings rpc.
 *
 * @generated from message blueapi.iam.v1.ListUserRoleMappingsResponse
 */
export type ListUserRoleMappingsResponse = Message<"blueapi.iam.v1.ListUserRoleMappingsResponse"> & {
  /**
   * @generated from field: repeated blueapi.api.UserRoleMapping userRoleMappings = 1;
   */
  userRoleMappings: UserRoleMapping[];
};

/**
 * Describes the message blueapi.iam.v1.ListUserRoleMappingsResponse.
 * Use `create(ListUserRoleMappingsResponseSchema)` to create a new message.
 */
export const ListUserRoleMappingsResponseSchema: GenMessage<ListUserRoleMappingsResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 22);

/**
 * @generated from message blueapi.iam.v1.MapRole
 */
export type MapRole = Message<"blueapi.iam.v1.MapRole"> & {
  /**
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * @generated from field: string role = 2;
   */
  role: string;
};

/**
 * Describes the message blueapi.iam.v1.MapRole.
 * Use `create(MapRoleSchema)` to create a new message.
 */
export const MapRoleSchema: GenMessage<MapRole> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 23);

/**
 * Request message for the Iam.CreateUserRoleMapping rpc.
 *
 * @generated from message blueapi.iam.v1.CreateUserRoleMappingRequest
 */
export type CreateUserRoleMappingRequest = Message<"blueapi.iam.v1.CreateUserRoleMappingRequest"> & {
  /**
   * Optional. The subuser to map the roles. Defaults to caller if not set.
   *
   * @generated from field: string subUser = 1;
   */
  subUser: string;

  /**
   * Required. The roles to map to the user. Limited to 5 items.
   *
   * @generated from field: repeated blueapi.iam.v1.MapRole roles = 2;
   */
  roles: MapRole[];
};

/**
 * Describes the message blueapi.iam.v1.CreateUserRoleMappingRequest.
 * Use `create(CreateUserRoleMappingRequestSchema)` to create a new message.
 */
export const CreateUserRoleMappingRequestSchema: GenMessage<CreateUserRoleMappingRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 24);

/**
 * Response message for the Iam.CreateUserRoleMapping rpc.
 *
 * @generated from message blueapi.iam.v1.CreateUserRoleMappingResponse
 */
export type CreateUserRoleMappingResponse = Message<"blueapi.iam.v1.CreateUserRoleMappingResponse"> & {
  /**
   * @generated from field: repeated string success = 1;
   */
  success: string[];

  /**
   * @generated from field: repeated string failed = 2;
   */
  failed: string[];

  /**
   * @generated from field: repeated string filters = 3;
   */
  filters: string[];
};

/**
 * Describes the message blueapi.iam.v1.CreateUserRoleMappingResponse.
 * Use `create(CreateUserRoleMappingResponseSchema)` to create a new message.
 */
export const CreateUserRoleMappingResponseSchema: GenMessage<CreateUserRoleMappingResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 25);

/**
 * Request message for the Iam.UpdateUserRoleMapping rpc.
 *
 * @generated from message blueapi.iam.v1.UpdateUserRoleMappingRequest
 */
export type UpdateUserRoleMappingRequest = Message<"blueapi.iam.v1.UpdateUserRoleMappingRequest"> & {
  /**
   * Optional. The subuser to map the roles. Defaults to caller if not set.
   *
   * @generated from field: string subUser = 1;
   */
  subUser: string;

  /**
   * Required. The roles to map to the user. Limited to 5 items. Setting `role` to empty will remove the mapping.
   *
   * @generated from field: repeated blueapi.iam.v1.MapRole roles = 2;
   */
  roles: MapRole[];
};

/**
 * Describes the message blueapi.iam.v1.UpdateUserRoleMappingRequest.
 * Use `create(UpdateUserRoleMappingRequestSchema)` to create a new message.
 */
export const UpdateUserRoleMappingRequestSchema: GenMessage<UpdateUserRoleMappingRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 26);

/**
 * Response message for the Iam.UpdateUserRoleMapping rpc.
 *
 * @generated from message blueapi.iam.v1.UpdateUserRoleMappingResponse
 */
export type UpdateUserRoleMappingResponse = Message<"blueapi.iam.v1.UpdateUserRoleMappingResponse"> & {
  /**
   * @generated from field: repeated string success = 1;
   */
  success: string[];

  /**
   * @generated from field: repeated string failed = 2;
   */
  failed: string[];

  /**
   * @generated from field: repeated string filters = 3;
   */
  filters: string[];
};

/**
 * Describes the message blueapi.iam.v1.UpdateUserRoleMappingResponse.
 * Use `create(UpdateUserRoleMappingResponseSchema)` to create a new message.
 */
export const UpdateUserRoleMappingResponseSchema: GenMessage<UpdateUserRoleMappingResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 27);

/**
 * Request message for the Iam.ListIdentityProviders rpc.
 *
 * @generated from message blueapi.iam.v1.ListIdentityProvidersRequest
 */
export type ListIdentityProvidersRequest = Message<"blueapi.iam.v1.ListIdentityProvidersRequest"> & {
};

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersRequest.
 * Use `create(ListIdentityProvidersRequestSchema)` to create a new message.
 */
export const ListIdentityProvidersRequestSchema: GenMessage<ListIdentityProvidersRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 28);

/**
 * Response message for the Iam.ListIdentityProviders rpc.
 *
 * @generated from message blueapi.iam.v1.ListIdentityProvidersResponse
 */
export type ListIdentityProvidersResponse = Message<"blueapi.iam.v1.ListIdentityProvidersResponse"> & {
  /**
   * @generated from field: repeated blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider data = 1;
   */
  data: ListIdentityProvidersResponse_IdentityProvider[];
};

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersResponse.
 * Use `create(ListIdentityProvidersResponseSchema)` to create a new message.
 */
export const ListIdentityProvidersResponseSchema: GenMessage<ListIdentityProvidersResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 29);

/**
 * @generated from message blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider
 */
export type ListIdentityProvidersResponse_IdentityProvider = Message<"blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * @generated from field: blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.samlInfo saml = 4;
   */
  saml?: ListIdentityProvidersResponse_IdentityProvider_samlInfo;
};

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.
 * Use `create(ListIdentityProvidersResponse_IdentityProviderSchema)` to create a new message.
 */
export const ListIdentityProvidersResponse_IdentityProviderSchema: GenMessage<ListIdentityProvidersResponse_IdentityProvider> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 29, 0);

/**
 * @generated from message blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.samlInfo
 */
export type ListIdentityProvidersResponse_IdentityProvider_samlInfo = Message<"blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.samlInfo"> & {
  /**
   * @generated from field: string metadata = 1;
   */
  metadata: string;
};

/**
 * Describes the message blueapi.iam.v1.ListIdentityProvidersResponse.IdentityProvider.samlInfo.
 * Use `create(ListIdentityProvidersResponse_IdentityProvider_samlInfoSchema)` to create a new message.
 */
export const ListIdentityProvidersResponse_IdentityProvider_samlInfoSchema: GenMessage<ListIdentityProvidersResponse_IdentityProvider_samlInfo> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 29, 0, 0);

/**
 * Request message for the Iam.CreateIdentityProvider rpc.
 *
 * @generated from message blueapi.iam.v1.CreateIdentityProviderRequest
 */
export type CreateIdentityProviderRequest = Message<"blueapi.iam.v1.CreateIdentityProviderRequest"> & {
  /**
   * Required. The IdP name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Value is `saml`.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Required. The contents of the metadata file from your IdP.
   *
   * @generated from field: string metadata = 3;
   */
  metadata: string;
};

/**
 * Describes the message blueapi.iam.v1.CreateIdentityProviderRequest.
 * Use `create(CreateIdentityProviderRequestSchema)` to create a new message.
 */
export const CreateIdentityProviderRequestSchema: GenMessage<CreateIdentityProviderRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 30);

/**
 * Request message for the Iam.DeleteIdentityProvider rpc.
 *
 * @generated from message blueapi.iam.v1.DeleteIdentityProviderRequest
 */
export type DeleteIdentityProviderRequest = Message<"blueapi.iam.v1.DeleteIdentityProviderRequest"> & {
  /**
   * Required. The IdP id to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.DeleteIdentityProviderRequest.
 * Use `create(DeleteIdentityProviderRequestSchema)` to create a new message.
 */
export const DeleteIdentityProviderRequestSchema: GenMessage<DeleteIdentityProviderRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 31);

/**
 * @generated from message blueapi.iam.v1.IpFilter
 */
export type IpFilter = Message<"blueapi.iam.v1.IpFilter"> & {
  /**
   * IP filter item id. Note that this name is transcient and is not fixed. However, you can use any of its permutations to endpoints that accept it, such as the `DELETE:/iam/v?/ipfilters/{id}` endpoint, without issues.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Can be `global`, `rootuser`, or `subuser`.
   *
   * @generated from field: string scope = 2;
   */
  scope: string;

  /**
   * The target of the filter. If global scope, this is usually empty. Rootuser name for rootuser scope, and subuser name for subuser scope. For subuser targets, format is `rootuser/subuser`.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * The type of IP filter. It could be `whitelist` or `blacklist`.
   *
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * The IP filter value. Should be in CIDR format.
   *
   * @generated from field: string value = 5;
   */
  value: string;
};

/**
 * Describes the message blueapi.iam.v1.IpFilter.
 * Use `create(IpFilterSchema)` to create a new message.
 */
export const IpFilterSchema: GenMessage<IpFilter> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 32);

/**
 * Request message for the Iam.ListIpFilters rpc.
 *
 * @generated from message blueapi.iam.v1.ListIpFiltersRequest
 */
export type ListIpFiltersRequest = Message<"blueapi.iam.v1.ListIpFiltersRequest"> & {
};

/**
 * Describes the message blueapi.iam.v1.ListIpFiltersRequest.
 * Use `create(ListIpFiltersRequestSchema)` to create a new message.
 */
export const ListIpFiltersRequestSchema: GenMessage<ListIpFiltersRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 33);

/**
 * Request message for the Iam.CreateIpFilter rpc.
 *
 * @generated from message blueapi.iam.v1.CreateIpFilterRequest
 */
export type CreateIpFilterRequest = Message<"blueapi.iam.v1.CreateIpFilterRequest"> & {
  /**
   * Required. The IP input to filter, either blacklist or whitelist. Should be in CIDR format (i.e. `1.2.3.4/32`).
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * Optional. Can be `whitelist` or `blacklist`. Defaults to `blacklist` if empty.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Optional. If `rootUser` is valid and `subUser` is empty, filter is for this rootuser. If both `rootUser` and `subUser` inputs are empty, filter is at global scope.
   *
   * @generated from field: string rootUser = 3;
   */
  rootUser: string;

  /**
   * Optional. If `subuser` is valid, filter is for this subuser; `rootUser` value is discarded. If both `rootUser` and `subUser` inputs are empty, filter is at global scope.
   *
   * @generated from field: string subUser = 4;
   */
  subUser: string;
};

/**
 * Describes the message blueapi.iam.v1.CreateIpFilterRequest.
 * Use `create(CreateIpFilterRequestSchema)` to create a new message.
 */
export const CreateIpFilterRequestSchema: GenMessage<CreateIpFilterRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 34);

/**
 * Request message for the Iam.DeleteIpFilter rpc.
 *
 * @generated from message blueapi.iam.v1.DeleteIpFilterRequest
 */
export type DeleteIpFilterRequest = Message<"blueapi.iam.v1.DeleteIpFilterRequest"> & {
  /**
   * The IP filter id to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.DeleteIpFilterRequest.
 * Use `create(DeleteIpFilterRequestSchema)` to create a new message.
 */
export const DeleteIpFilterRequestSchema: GenMessage<DeleteIpFilterRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 35);

/**
 * @generated from message blueapi.iam.v1.PartnerToken
 */
export type PartnerToken = Message<"blueapi.iam.v1.PartnerToken"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message blueapi.iam.v1.PartnerToken.
 * Use `create(PartnerTokenSchema)` to create a new message.
 */
export const PartnerTokenSchema: GenMessage<PartnerToken> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 36);

/**
 * Request message for the Iam.CreatePartnerToken rpc.
 *
 * @generated from message blueapi.iam.v1.CreatePartnerTokenRequest
 */
export type CreatePartnerTokenRequest = Message<"blueapi.iam.v1.CreatePartnerTokenRequest"> & {
  /**
   * Required. Partner id or audience for the token.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.iam.v1.CreatePartnerTokenRequest.
 * Use `create(CreatePartnerTokenRequestSchema)` to create a new message.
 */
export const CreatePartnerTokenRequestSchema: GenMessage<CreatePartnerTokenRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 37);

/**
 * Request message for the Iam.RefreshPartnerToken rpc.
 *
 * @generated from message blueapi.iam.v1.RefreshPartnerTokenRequest
 */
export type RefreshPartnerTokenRequest = Message<"blueapi.iam.v1.RefreshPartnerTokenRequest"> & {
  /**
   * Required. Partner id or audience for the token.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. The previous (old) token to be refreshed.
   *
   * @generated from field: string token = 2;
   */
  token: string;
};

/**
 * Describes the message blueapi.iam.v1.RefreshPartnerTokenRequest.
 * Use `create(RefreshPartnerTokenRequestSchema)` to create a new message.
 */
export const RefreshPartnerTokenRequestSchema: GenMessage<RefreshPartnerTokenRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 38);

/**
 * Request message for Iam.VerifyUserForResetPassword rpc.
 *
 * @generated from message blueapi.iam.v1.VerifyUserForResetPasswordRequest
 */
export type VerifyUserForResetPasswordRequest = Message<"blueapi.iam.v1.VerifyUserForResetPasswordRequest"> & {
  /**
   * @generated from field: string user = 1;
   */
  user: string;
};

/**
 * Describes the message blueapi.iam.v1.VerifyUserForResetPasswordRequest.
 * Use `create(VerifyUserForResetPasswordRequestSchema)` to create a new message.
 */
export const VerifyUserForResetPasswordRequestSchema: GenMessage<VerifyUserForResetPasswordRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 39);

/**
 * Response message for Iam.VerifyUserForResetPassword rpc.
 *
 * @generated from message blueapi.iam.v1.VerifyUserForResetPasswordResponse
 */
export type VerifyUserForResetPasswordResponse = Message<"blueapi.iam.v1.VerifyUserForResetPasswordResponse"> & {
  /**
   * @generated from field: bool doesUserExists = 1;
   */
  doesUserExists: boolean;
};

/**
 * Describes the message blueapi.iam.v1.VerifyUserForResetPasswordResponse.
 * Use `create(VerifyUserForResetPasswordResponseSchema)` to create a new message.
 */
export const VerifyUserForResetPasswordResponseSchema: GenMessage<VerifyUserForResetPasswordResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 40);

/**
 * Request for message Iam.ValidateVerificationCode rpc.
 *
 * @generated from message blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordRequest
 */
export type ValidateResetPasswordLinkAndChangePasswordRequest = Message<"blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordRequest"> & {
  /**
   * @generated from field: string originalEncodedCode = 1;
   */
  originalEncodedCode: string;

  /**
   * @generated from field: string userInputEncodedCode = 2;
   */
  userInputEncodedCode: string;
};

/**
 * Describes the message blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordRequest.
 * Use `create(ValidateResetPasswordLinkAndChangePasswordRequestSchema)` to create a new message.
 */
export const ValidateResetPasswordLinkAndChangePasswordRequestSchema: GenMessage<ValidateResetPasswordLinkAndChangePasswordRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 41);

/**
 * Response for message Iam.ValidateVerificationCode rpc.
 *
 * @generated from message blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordResponse
 */
export type ValidateResetPasswordLinkAndChangePasswordResponse = Message<"blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordResponse"> & {
  /**
   * @generated from field: bool isPasswordUpdated = 1;
   */
  isPasswordUpdated: boolean;

  /**
   * @generated from field: bool isResetPasswordLinkValid = 2;
   */
  isResetPasswordLinkValid: boolean;

  /**
   * @generated from field: string errorMessage = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message blueapi.iam.v1.ValidateResetPasswordLinkAndChangePasswordResponse.
 * Use `create(ValidateResetPasswordLinkAndChangePasswordResponseSchema)` to create a new message.
 */
export const ValidateResetPasswordLinkAndChangePasswordResponseSchema: GenMessage<ValidateResetPasswordLinkAndChangePasswordResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 42);

/**
 * Request message for the Iam.MFAUsersInfoRequest rpc.
 *
 * @generated from message blueapi.iam.v1.MFAUsersInfoRequest
 */
export type MFAUsersInfoRequest = Message<"blueapi.iam.v1.MFAUsersInfoRequest"> & {
  /**
   * Optional. If non empty: list users by status. Otherwise will list all MFA users.
   *
   * @generated from field: string status = 1;
   */
  status: string;
};

/**
 * Describes the message blueapi.iam.v1.MFAUsersInfoRequest.
 * Use `create(MFAUsersInfoRequestSchema)` to create a new message.
 */
export const MFAUsersInfoRequestSchema: GenMessage<MFAUsersInfoRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 43);

/**
 * @generated from message blueapi.iam.v1.MFAUser
 */
export type MFAUser = Message<"blueapi.iam.v1.MFAUser"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * @generated from field: string status = 4;
   */
  status: string;

  /**
   * @generated from field: string createdAt = 5;
   */
  createdAt: string;
};

/**
 * Describes the message blueapi.iam.v1.MFAUser.
 * Use `create(MFAUserSchema)` to create a new message.
 */
export const MFAUserSchema: GenMessage<MFAUser> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 44);

/**
 * Response message for the MFAUsersInfoResponse rpc.
 *
 * @generated from message blueapi.iam.v1.MFAUsersInfoResponse
 */
export type MFAUsersInfoResponse = Message<"blueapi.iam.v1.MFAUsersInfoResponse"> & {
  /**
   * @generated from field: repeated blueapi.iam.v1.MFAUser users = 1;
   */
  users: MFAUser[];
};

/**
 * Describes the message blueapi.iam.v1.MFAUsersInfoResponse.
 * Use `create(MFAUsersInfoResponseSchema)` to create a new message.
 */
export const MFAUsersInfoResponseSchema: GenMessage<MFAUsersInfoResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 45);

/**
 * Request message for the Iam.GetSubUserMetadata rpc.
 *
 * @generated from message blueapi.iam.v1.GetSubUserRequest
 */
export type GetSubUserRequest = Message<"blueapi.iam.v1.GetSubUserRequest"> & {
  /**
   * Required. The parent ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. The sub-user ID
   *
   * @generated from field: string subId = 2;
   */
  subId: string;
};

/**
 * Describes the message blueapi.iam.v1.GetSubUserRequest.
 * Use `create(GetSubUserRequestSchema)` to create a new message.
 */
export const GetSubUserRequestSchema: GenMessage<GetSubUserRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 46);

/**
 * Request message for ripple account password recovery
 *
 * @generated from message blueapi.iam.v1.SendRipplePasswordResetCodeRequest
 */
export type SendRipplePasswordResetCodeRequest = Message<"blueapi.iam.v1.SendRipplePasswordResetCodeRequest"> & {
  /**
   * Required. Ripple account email address
   *
   * @generated from field: string email = 1;
   */
  email: string;
};

/**
 * Describes the message blueapi.iam.v1.SendRipplePasswordResetCodeRequest.
 * Use `create(SendRipplePasswordResetCodeRequestSchema)` to create a new message.
 */
export const SendRipplePasswordResetCodeRequestSchema: GenMessage<SendRipplePasswordResetCodeRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 47);

/**
 * Request message for resetting ripple password
 *
 * @generated from message blueapi.iam.v1.ResetRipplePasswordRequest
 */
export type ResetRipplePasswordRequest = Message<"blueapi.iam.v1.ResetRipplePasswordRequest"> & {
  /**
   * Required. Reset code from email 
   *
   * @generated from field: string resetCode = 1;
   */
  resetCode: string;

  /**
   * Required. Atleast 8 characters
   *
   * @generated from field: string newPassword = 2;
   */
  newPassword: string;
};

/**
 * Describes the message blueapi.iam.v1.ResetRipplePasswordRequest.
 * Use `create(ResetRipplePasswordRequestSchema)` to create a new message.
 */
export const ResetRipplePasswordRequestSchema: GenMessage<ResetRipplePasswordRequest> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 48);

/**
 * @generated from message blueapi.iam.v1.ResetRipplePasswordResponse
 */
export type ResetRipplePasswordResponse = Message<"blueapi.iam.v1.ResetRipplePasswordResponse"> & {
  /**
   * Ripple account information of the reseted password
   *
   * @generated from field: string userName = 1;
   */
  userName: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;
};

/**
 * Describes the message blueapi.iam.v1.ResetRipplePasswordResponse.
 * Use `create(ResetRipplePasswordResponseSchema)` to create a new message.
 */
export const ResetRipplePasswordResponseSchema: GenMessage<ResetRipplePasswordResponse> = /*@__PURE__*/
  messageDesc(file_iam_v1_iam, 49);

/**
 * IAM service definition.
 *
 * @generated from service blueapi.iam.v1.Iam
 */
export const Iam: GenService<{
  /**
   * Gets user information about the caller. This call includes all of the user metadata.
   * See [https://alphauslabs.github.io/blueapi/] for the list of supported attributes.
   *
   * @generated from rpc blueapi.iam.v1.Iam.WhoAmI
   */
  whoAmI: {
    methodKind: "unary";
    input: typeof WhoAmIRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Lists all subusers.
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListUsers
   */
  listUsers: {
    methodKind: "server_streaming";
    input: typeof ListUsersRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Gets subuser information. This call includes all of the subuser metadata. See
   * [https://alphauslabs.github.io/blueapi/] for the list of supported attributes.
   * If the `{name}` parameter is `me` or `-`, returns the caller information, which
   * is equivalent to `WhoAmI()` or `GET:/iam/v*\/whoami`.
   *
   * @generated from rpc blueapi.iam.v1.Iam.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Creates a subuser.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Deletes a subuser.
   *
   * @generated from rpc blueapi.iam.v1.Iam.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof DeleteUserRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Creates a new root user for a billing group or access group.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateGroupRootUser
   */
  createGroupRootUser: {
    methodKind: "unary";
    input: typeof CreateGroupRootUserRequestSchema;
    output: typeof GroupRootUserSchema;
  },
  /**
   * WORK-IN-PROGRESS: Retrieves all the existing group root users asscoiated with the organization.
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListGroupRootUsers
   */
  listGroupRootUsers: {
    methodKind: "server_streaming";
    input: typeof ListGroupRootUsersRequestSchema;
    output: typeof GroupRootUserSchema;
  },
  /**
   * WORK-IN-PROGRESS: Retrieves a group root user.
   *
   * @generated from rpc blueapi.iam.v1.Iam.GetGroupRootUser
   */
  getGroupRootUser: {
    methodKind: "unary";
    input: typeof GetGroupRootRequestSchema;
    output: typeof GroupRootUserSchema;
  },
  /**
   * WORK-IN-PROGRESS: Deletes an existing group root user.
   *
   * @generated from rpc blueapi.iam.v1.Iam.DeleteGroupRootUser
   */
  deleteGroupRootUser: {
    methodKind: "unary";
    input: typeof DeleteGroupRootUserRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Retrieves the features available to a user on an Alphaus product.
   *
   * For a list of valid feature flags, see our documentation at https://labs.alphaus.cloud/docs/blueapi/apis/iam/.
   *
   * @generated from rpc blueapi.iam.v1.Iam.GetFeatureFlags
   */
  getFeatureFlags: {
    methodKind: "unary";
    input: typeof GetFeatureFlagsRequestSchema;
    output: typeof FeatureFlagsSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates the features available to a user on an Alphaus product.
   *
   * For a list of valid feature flags, see our documentation at https://labs.alphaus.cloud/docs/blueapi/apis/iam/.
   *
   * @generated from rpc blueapi.iam.v1.Iam.UpdateFeatureFlags
   */
  updateFeatureFlags: {
    methodKind: "unary";
    input: typeof UpdateFeatureFlagsRequestSchema;
    output: typeof FeatureFlagsSchema;
  },
  /**
   * Lists all API clients belonging to the caller.
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListApiClients
   */
  listApiClients: {
    methodKind: "server_streaming";
    input: typeof ListApiClientsRequestSchema;
    output: typeof ApiClientSchema;
  },
  /**
   * Creates an API client for the caller.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateApiClient
   */
  createApiClient: {
    methodKind: "unary";
    input: typeof CreateApiClientRequestSchema;
    output: typeof ApiClientSchema;
  },
  /**
   * Deletes an API client belonging to the caller.
   *
   * @generated from rpc blueapi.iam.v1.Iam.DeleteApiClient
   */
  deleteApiClient: {
    methodKind: "unary";
    input: typeof DeleteApiClientRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Lists all permissions based on the input's scope. For reference, supported permissions can be found on [https://github.com/mobingi/rbac-permissions].
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListPermissions
   */
  listPermissions: {
    methodKind: "unary";
    input: typeof ListPermissionsRequestSchema;
    output: typeof ListPermissionsResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Lists all available roles.
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Creates a role. If your `permissions` list contains an `Admin` entry, all other entries will be discarded except `Admin`. Roles are root user-level. That means all roles created by the root user, or any subuser that has permissions to create roles, are available to all subusers.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof RoleSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates a role. If role name is different, rename mapped role name.
   *
   * @generated from rpc blueapi.iam.v1.Iam.UpdateRole
   */
  updateRole: {
    methodKind: "unary";
    input: typeof UpdateRoleRequestSchema;
    output: typeof RoleSchema;
  },
  /**
   * WORK-IN-PROGRESS: Deletes a role. Deleting a role will also remove all mappings.
   *
   * @generated from rpc blueapi.iam.v1.Iam.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Lists roles attached to the caller or the input.
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListUserRoleMappings
   */
  listUserRoleMappings: {
    methodKind: "unary";
    input: typeof ListUserRoleMappingsRequestSchema;
    output: typeof ListUserRoleMappingsResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Maps roles to a subuser. You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateUserRoleMapping
   */
  createUserRoleMapping: {
    methodKind: "unary";
    input: typeof CreateUserRoleMappingRequestSchema;
    output: typeof CreateUserRoleMappingResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates user-to-role mappings. You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.
   *
   * @generated from rpc blueapi.iam.v1.Iam.UpdateUserRoleMapping
   */
  updateUserRoleMapping: {
    methodKind: "unary";
    input: typeof UpdateUserRoleMappingRequestSchema;
    output: typeof UpdateUserRoleMappingResponseSchema;
  },
  /**
   * Lists all SSO Identity Providers (IdP).
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListIdentityProviders
   */
  listIdentityProviders: {
    methodKind: "unary";
    input: typeof ListIdentityProvidersRequestSchema;
    output: typeof ListIdentityProvidersResponseSchema;
  },
  /**
   * Registers an SSO Identity Provider (IdP).
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateIdentityProvider
   */
  createIdentityProvider: {
    methodKind: "unary";
    input: typeof CreateIdentityProviderRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Deletes an SSO Identity Provider (IdP).
   *
   * @generated from rpc blueapi.iam.v1.Iam.DeleteIdentityProvider
   */
  deleteIdentityProvider: {
    methodKind: "unary";
    input: typeof DeleteIdentityProviderRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists all IP filters. At the moment, this API is only available to root users.
   *
   * @generated from rpc blueapi.iam.v1.Iam.ListIpFilters
   */
  listIpFilters: {
    methodKind: "server_streaming";
    input: typeof ListIpFiltersRequestSchema;
    output: typeof IpFilterSchema;
  },
  /**
   * Creates an IP filter item for IP blacklisting or whitelisting. At the moment, this API is only available to root users.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreateIpFilter
   */
  createIpFilter: {
    methodKind: "unary";
    input: typeof CreateIpFilterRequestSchema;
    output: typeof IpFilterSchema;
  },
  /**
   * Deletes an IP filter item. At the moment, this API is only available to root users.
   *
   * @generated from rpc blueapi.iam.v1.Iam.DeleteIpFilter
   */
  deleteIpFilter: {
    methodKind: "unary";
    input: typeof DeleteIpFilterRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * BETA: Creates a partner token for custom integrations. Available only to Ripple and Cover users.
   *
   * @generated from rpc blueapi.iam.v1.Iam.CreatePartnerToken
   */
  createPartnerToken: {
    methodKind: "unary";
    input: typeof CreatePartnerTokenRequestSchema;
    output: typeof PartnerTokenSchema;
  },
  /**
   * BETA: Refreshes an expired partner token. Only partners are expected to call this API.
   *
   * @generated from rpc blueapi.iam.v1.Iam.RefreshPartnerToken
   */
  refreshPartnerToken: {
    methodKind: "unary";
    input: typeof RefreshPartnerTokenRequestSchema;
    output: typeof PartnerTokenSchema;
  },
  /**
   * WORK-IN-PROGRESS: Verify User Input For Reset Password
   *
   * @generated from rpc blueapi.iam.v1.Iam.VerifyUserForResetPassword
   */
  verifyUserForResetPassword: {
    methodKind: "unary";
    input: typeof VerifyUserForResetPasswordRequestSchema;
    output: typeof VerifyUserForResetPasswordResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Get Sub User Metadata for login user's organization based on user identity
   *
   * @generated from rpc blueapi.iam.v1.Iam.GetSubUserMetadata
   */
  getSubUserMetadata: {
    methodKind: "unary";
    input: typeof GetSubUserRequestSchema;
    output: typeof SubUserSchema;
  },
  /**
   * WORK-IN-PROGRESS: Validate reset password link and proceed to update password
   *
   * @generated from rpc blueapi.iam.v1.Iam.ValidateResetPasswordLinkAndChangePassword
   */
  validateResetPasswordLinkAndChangePassword: {
    methodKind: "unary";
    input: typeof ValidateResetPasswordLinkAndChangePasswordRequestSchema;
    output: typeof ValidateResetPasswordLinkAndChangePasswordResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: List MFA users info for login user's organization based on status.
   *
   * @generated from rpc blueapi.iam.v1.Iam.GetMFAUsers
   */
  getMFAUsers: {
    methodKind: "unary";
    input: typeof MFAUsersInfoRequestSchema;
    output: typeof MFAUsersInfoResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Send an email reset code
   *
   * @generated from rpc blueapi.iam.v1.Iam.SendRipplePasswordResetCode
   */
  sendRipplePasswordResetCode: {
    methodKind: "unary";
    input: typeof SendRipplePasswordResetCodeRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Reset ripple password using code from email
   *
   * @generated from rpc blueapi.iam.v1.Iam.ResetRipplePassword
   */
  resetRipplePassword: {
    methodKind: "unary";
    input: typeof ResetRipplePasswordRequestSchema;
    output: typeof ResetRipplePasswordResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_iam_v1_iam, 0);

