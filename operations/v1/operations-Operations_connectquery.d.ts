// Copied from {root}/google/longrunning/operations.proto

// @generated by protoc-gen-connect-query v2.1.1
// @generated from file operations/v1/operations.proto (package blueapi.operations.v1, syntax proto3)
/* eslint-disable */

import { Operations } from "./operations_pb";

/**
 * Gets the latest state of a long-running operation. You can use this method to
 * poll the operation result at intervals.
 *
 * @generated from rpc blueapi.operations.v1.Operations.GetOperation
 */
export const getOperation: typeof Operations["method"]["getOperation"];
/**
 * Deletes a long-running operation. This method indicates that the client is no
 * longer interested in the operation result. It does not cancel the operation.
 *
 * @generated from rpc blueapi.operations.v1.Operations.DeleteOperation
 */
export const deleteOperation: typeof Operations["method"]["deleteOperation"];
/**
 * Starts asynchronous cancellation on a long-running operation. The server makes
 * a best effort to cancel the operation, but success is not guaranteed. On successful
 * cancellation, the operation is not deleted; instead, it becomes an operation with
 * a value of [google.rpc.Status.code][google.rpc.Status.code] 1, corresponding
 * to `Code.CANCELLED`.
 *
 * @generated from rpc blueapi.operations.v1.Operations.CancelOperation
 */
export const cancelOperation: typeof Operations["method"]["cancelOperation"];
/**
 * Waits for the specified long-running operation until it is done or reaches
 * at most a specified timeout, returning the latest state. If the operation
 * is already done, the latest state is immediately returned. If the timeout
 * specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
 * timeout is used. If the server does not support this method, it returns
 * `google.rpc.Code.UNIMPLEMENTED`.
 * Note that this method is on a best-effort basis. It may return the latest
 * state before the specified timeout (including immediately), meaning, even an
 * immediate response is no guarantee that the operation is done.
 * At the moment, Blue's default RPC timeout is around one hour.
 *
 * @generated from rpc blueapi.operations.v1.Operations.WaitOperation
 */
export const waitOperation: typeof Operations["method"]["waitOperation"];
