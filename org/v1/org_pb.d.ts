// @generated by protoc-gen-es v2.7.0
// @generated from file org/v1/org.proto (package blueapi.org.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Org, OrgSchema } from "../../api/ripple/org_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file org/v1/org.proto.
 */
export declare const file_org_v1_org: GenFile;

/**
 * Request message for the Organization.CreateOrg rpc.
 *
 * @generated from message blueapi.org.v1.CreateOrgRequest
 */
export declare type CreateOrgRequest = Message<"blueapi.org.v1.CreateOrgRequest"> & {
  /**
   * Required. Organization's email
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * Required. Organization's description or company name
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Optional. User can decide to let the system generates the password.
   *
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * To be used for onboarding profile
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string role = 5;
   */
  role: string;

  /**
   * @generated from field: string usage = 6;
   */
  usage: string;

  /**
   * @generated from field: string intention = 7;
   */
  intention: string;

  /**
   * @generated from field: bool isAuth0Signup = 8;
   */
  isAuth0Signup: boolean;

  /**
   * Optional. Customer Id from AWS marketplace
   *
   * @generated from field: string customerId = 9;
   */
  customerId: string;

  /**
   * Optional. User locale. Default value is en if not supplied.
   *
   * @generated from field: string locale = 10;
   */
  locale: string;

  /**
   * Optional. Auth0 user id for users registering using social login.
   *
   * @generated from field: string auth0UserId = 11;
   */
  auth0UserId: string;
};

/**
 * Describes the message blueapi.org.v1.CreateOrgRequest.
 * Use `create(CreateOrgRequestSchema)` to create a new message.
 */
export declare const CreateOrgRequestSchema: GenMessage<CreateOrgRequest>;

/**
 * Response message for the Organization.CreateOrg rpc.
 *
 * @generated from message blueapi.org.v1.CreateOrgResponse
 */
export declare type CreateOrgResponse = Message<"blueapi.org.v1.CreateOrgResponse"> & {
  /**
   * @generated from field: blueapi.api.ripple.Org org = 1;
   */
  org?: Org;

  /**
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message blueapi.org.v1.CreateOrgResponse.
 * Use `create(CreateOrgResponseSchema)` to create a new message.
 */
export declare const CreateOrgResponseSchema: GenMessage<CreateOrgResponse>;

/**
 * Request message for the Organization.SendVerification rpc.
 *
 * @generated from message blueapi.org.v1.SendVerificationRequest
 */
export declare type SendVerificationRequest = Message<"blueapi.org.v1.SendVerificationRequest"> & {
};

/**
 * Describes the message blueapi.org.v1.SendVerificationRequest.
 * Use `create(SendVerificationRequestSchema)` to create a new message.
 */
export declare const SendVerificationRequestSchema: GenMessage<SendVerificationRequest>;

/**
 * Request message for the Organization.VerifyOrg rpc.
 *
 * @generated from message blueapi.org.v1.VerifyOrgRequest
 */
export declare type VerifyOrgRequest = Message<"blueapi.org.v1.VerifyOrgRequest"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;
};

/**
 * Describes the message blueapi.org.v1.VerifyOrgRequest.
 * Use `create(VerifyOrgRequestSchema)` to create a new message.
 */
export declare const VerifyOrgRequestSchema: GenMessage<VerifyOrgRequest>;

/**
 * Request message for the Organization.GetOrg rpc.
 *
 * @generated from message blueapi.org.v1.GetOrgRequest
 */
export declare type GetOrgRequest = Message<"blueapi.org.v1.GetOrgRequest"> & {
};

/**
 * Describes the message blueapi.org.v1.GetOrgRequest.
 * Use `create(GetOrgRequestSchema)` to create a new message.
 */
export declare const GetOrgRequestSchema: GenMessage<GetOrgRequest>;

/**
 * Request message for the Organization.UpdateMetadata rpc.
 *
 * @generated from message blueapi.org.v1.UpdateMetadataRequest
 */
export declare type UpdateMetadataRequest = Message<"blueapi.org.v1.UpdateMetadataRequest"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message blueapi.org.v1.UpdateMetadataRequest.
 * Use `create(UpdateMetadataRequestSchema)` to create a new message.
 */
export declare const UpdateMetadataRequestSchema: GenMessage<UpdateMetadataRequest>;

/**
 * Request message for the Organization.UpdatePassword rpc.
 *
 * @generated from message blueapi.org.v1.UpdatePasswordRequest
 */
export declare type UpdatePasswordRequest = Message<"blueapi.org.v1.UpdatePasswordRequest"> & {
  /**
   * @generated from field: string oldPassword = 1;
   */
  oldPassword: string;

  /**
   * @generated from field: string newPassword = 2;
   */
  newPassword: string;
};

/**
 * Describes the message blueapi.org.v1.UpdatePasswordRequest.
 * Use `create(UpdatePasswordRequestSchema)` to create a new message.
 */
export declare const UpdatePasswordRequestSchema: GenMessage<UpdatePasswordRequest>;

/**
 * Request message for the Organization.DeleteOrg rpc.
 *
 * @generated from message blueapi.org.v1.DeleteOrgRequest
 */
export declare type DeleteOrgRequest = Message<"blueapi.org.v1.DeleteOrgRequest"> & {
};

/**
 * Describes the message blueapi.org.v1.DeleteOrgRequest.
 * Use `create(DeleteOrgRequestSchema)` to create a new message.
 */
export declare const DeleteOrgRequestSchema: GenMessage<DeleteOrgRequest>;

/**
 * Organization service definition.
 *
 * @generated from service blueapi.org.v1.Organization
 */
export declare const Organization: GenService<{
  /**
   * Creates the organization account.
   *
   * @generated from rpc blueapi.org.v1.Organization.CreateOrg
   */
  createOrg: {
    methodKind: "unary";
    input: typeof CreateOrgRequestSchema;
    output: typeof CreateOrgResponseSchema;
  },
  /**
   * WORK-IN-PROGRESS: Sends (or resends) the verification email. Only valid for unverified
   * organizations. The verification key will be valid for a day.
   *
   * @generated from rpc blueapi.org.v1.Organization.SendVerification
   */
  sendVerification: {
    methodKind: "unary";
    input: typeof SendVerificationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Verifies an organization using the key received from the verification email.
   * The verification key is only valid for a day.
   *
   * @generated from rpc blueapi.org.v1.Organization.VerifyOrg
   */
  verifyOrg: {
    methodKind: "unary";
    input: typeof VerifyOrgRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets information about the caller's organization.
   *
   * @generated from rpc blueapi.org.v1.Organization.GetOrg
   */
  getOrg: {
    methodKind: "unary";
    input: typeof GetOrgRequestSchema;
    output: typeof OrgSchema;
  },
  /**
   * WORK-IN-PROGRESS: Updates organization metadata. See [https://alphauslabs.github.io/blueapi/]
   * for the list of supported attributes.
   *
   * @generated from rpc blueapi.org.v1.Organization.UpdateMetadata
   */
  updateMetadata: {
    methodKind: "unary";
    input: typeof UpdateMetadataRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates the organization password.
   *
   * @generated from rpc blueapi.org.v1.Organization.UpdatePassword
   */
  updatePassword: {
    methodKind: "unary";
    input: typeof UpdatePasswordRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WORK-IN-PROGRESS: Deletes the organization.
   *
   * @generated from rpc blueapi.org.v1.Organization.DeleteOrg
   */
  deleteOrg: {
    methodKind: "unary";
    input: typeof DeleteOrgRequestSchema;
    output: typeof EmptySchema;
  },
}>;

