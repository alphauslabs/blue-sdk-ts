// @generated by protoc-gen-es v2.7.0
// @generated from file prism/v1/prism.proto (package blueapi.prism.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file prism/v1/prism.proto.
 */
export declare const file_prism_v1_prism: GenFile;

/**
 * @generated from message blueapi.prism.v1.TestRequest
 */
export declare type TestRequest = Message<"blueapi.prism.v1.TestRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.TestRequest.
 * Use `create(TestRequestSchema)` to create a new message.
 */
export declare const TestRequestSchema: GenMessage<TestRequest>;

/**
 * @generated from message blueapi.prism.v1.TestResponse
 */
export declare type TestResponse = Message<"blueapi.prism.v1.TestResponse"> & {
  /**
   * @generated from field: string response = 1;
   */
  response: string;
};

/**
 * Describes the message blueapi.prism.v1.TestResponse.
 * Use `create(TestResponseSchema)` to create a new message.
 */
export declare const TestResponseSchema: GenMessage<TestResponse>;

/**
 * @generated from message blueapi.prism.v1.CreateProjectRequest
 */
export declare type CreateProjectRequest = Message<"blueapi.prism.v1.CreateProjectRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;
};

/**
 * Describes the message blueapi.prism.v1.CreateProjectRequest.
 * Use `create(CreateProjectRequestSchema)` to create a new message.
 */
export declare const CreateProjectRequestSchema: GenMessage<CreateProjectRequest>;

/**
 * @generated from message blueapi.prism.v1.GetProjectRequest
 */
export declare type GetProjectRequest = Message<"blueapi.prism.v1.GetProjectRequest"> & {
  /**
   * Required project ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.GetProjectRequest.
 * Use `create(GetProjectRequestSchema)` to create a new message.
 */
export declare const GetProjectRequestSchema: GenMessage<GetProjectRequest>;

/**
 * @generated from message blueapi.prism.v1.GetProjectResponse
 */
export declare type GetProjectResponse = Message<"blueapi.prism.v1.GetProjectResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message blueapi.prism.v1.GetProjectResponse.
 * Use `create(GetProjectResponseSchema)` to create a new message.
 */
export declare const GetProjectResponseSchema: GenMessage<GetProjectResponse>;

/**
 * @generated from message blueapi.prism.v1.DeleteProjectRequest
 */
export declare type DeleteProjectRequest = Message<"blueapi.prism.v1.DeleteProjectRequest"> & {
  /**
   * Required project ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.DeleteProjectRequest.
 * Use `create(DeleteProjectRequestSchema)` to create a new message.
 */
export declare const DeleteProjectRequestSchema: GenMessage<DeleteProjectRequest>;

/**
 * @generated from message blueapi.prism.v1.ListProjectsRequest
 */
export declare type ListProjectsRequest = Message<"blueapi.prism.v1.ListProjectsRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListProjectsRequest.
 * Use `create(ListProjectsRequestSchema)` to create a new message.
 */
export declare const ListProjectsRequestSchema: GenMessage<ListProjectsRequest>;

/**
 * @generated from message blueapi.prism.v1.Project
 */
export declare type Project = Message<"blueapi.prism.v1.Project"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string created_at = 3;
   */
  createdAt: string;

  /**
   * @generated from field: string last_update = 4;
   */
  lastUpdate: string;

  /**
   * @generated from field: string email = 5;
   */
  email: string;
};

/**
 * Describes the message blueapi.prism.v1.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export declare const ProjectSchema: GenMessage<Project>;

/**
 * @generated from message blueapi.prism.v1.CreateOrganizationRequest
 */
export declare type CreateOrganizationRequest = Message<"blueapi.prism.v1.CreateOrganizationRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * List of domains associated with the organization.
   *
   * @generated from field: repeated string domains = 3;
   */
  domains: string[];

  /**
   * @generated from field: string timezone = 4;
   */
  timezone: string;
};

/**
 * Describes the message blueapi.prism.v1.CreateOrganizationRequest.
 * Use `create(CreateOrganizationRequestSchema)` to create a new message.
 */
export declare const CreateOrganizationRequestSchema: GenMessage<CreateOrganizationRequest>;

/**
 * @generated from message blueapi.prism.v1.GetOrganizationRequest
 */
export declare type GetOrganizationRequest = Message<"blueapi.prism.v1.GetOrganizationRequest"> & {
  /**
   * Required organization ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.GetOrganizationRequest.
 * Use `create(GetOrganizationRequestSchema)` to create a new message.
 */
export declare const GetOrganizationRequestSchema: GenMessage<GetOrganizationRequest>;

/**
 * @generated from message blueapi.prism.v1.GetOrganizationResponse
 */
export declare type GetOrganizationResponse = Message<"blueapi.prism.v1.GetOrganizationResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: string timezone = 4;
   */
  timezone: string;
};

/**
 * Describes the message blueapi.prism.v1.GetOrganizationResponse.
 * Use `create(GetOrganizationResponseSchema)` to create a new message.
 */
export declare const GetOrganizationResponseSchema: GenMessage<GetOrganizationResponse>;

/**
 * @generated from message blueapi.prism.v1.UpdateOrganizationRequest
 */
export declare type UpdateOrganizationRequest = Message<"blueapi.prism.v1.UpdateOrganizationRequest"> & {
  /**
   * Required organization ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;
};

/**
 * Describes the message blueapi.prism.v1.UpdateOrganizationRequest.
 * Use `create(UpdateOrganizationRequestSchema)` to create a new message.
 */
export declare const UpdateOrganizationRequestSchema: GenMessage<UpdateOrganizationRequest>;

/**
 * @generated from message blueapi.prism.v1.DeleteOrganizationRequest
 */
export declare type DeleteOrganizationRequest = Message<"blueapi.prism.v1.DeleteOrganizationRequest"> & {
  /**
   * Required organization ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.DeleteOrganizationRequest.
 * Use `create(DeleteOrganizationRequestSchema)` to create a new message.
 */
export declare const DeleteOrganizationRequestSchema: GenMessage<DeleteOrganizationRequest>;

/**
 * @generated from message blueapi.prism.v1.VerifyUserRequest
 */
export declare type VerifyUserRequest = Message<"blueapi.prism.v1.VerifyUserRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.VerifyUserRequest.
 * Use `create(VerifyUserRequestSchema)` to create a new message.
 */
export declare const VerifyUserRequestSchema: GenMessage<VerifyUserRequest>;

/**
 * @generated from message blueapi.prism.v1.VerifyUserResponse
 */
export declare type VerifyUserResponse = Message<"blueapi.prism.v1.VerifyUserResponse"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string org = 2;
   */
  org: string;

  /**
   * @generated from field: bool isOwner = 3;
   */
  isOwner: boolean;
};

/**
 * Describes the message blueapi.prism.v1.VerifyUserResponse.
 * Use `create(VerifyUserResponseSchema)` to create a new message.
 */
export declare const VerifyUserResponseSchema: GenMessage<VerifyUserResponse>;

/**
 * @generated from message blueapi.prism.v1.GetTeamRequest
 */
export declare type GetTeamRequest = Message<"blueapi.prism.v1.GetTeamRequest"> & {
  /**
   * Required team ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.GetTeamRequest.
 * Use `create(GetTeamRequestSchema)` to create a new message.
 */
export declare const GetTeamRequestSchema: GenMessage<GetTeamRequest>;

/**
 * @generated from message blueapi.prism.v1.GetTeamResponse
 */
export declare type GetTeamResponse = Message<"blueapi.prism.v1.GetTeamResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message blueapi.prism.v1.GetTeamResponse.
 * Use `create(GetTeamResponseSchema)` to create a new message.
 */
export declare const GetTeamResponseSchema: GenMessage<GetTeamResponse>;

/**
 * @generated from message blueapi.prism.v1.ListTeamsRequest
 */
export declare type ListTeamsRequest = Message<"blueapi.prism.v1.ListTeamsRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListTeamsRequest.
 * Use `create(ListTeamsRequestSchema)` to create a new message.
 */
export declare const ListTeamsRequestSchema: GenMessage<ListTeamsRequest>;

/**
 * @generated from message blueapi.prism.v1.Team
 */
export declare type Team = Message<"blueapi.prism.v1.Team"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string org = 3;
   */
  org: string;

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string last_update = 5;
   */
  lastUpdate: string;

  /**
   * @generated from field: string email = 6;
   */
  email: string;
};

/**
 * Describes the message blueapi.prism.v1.Team.
 * Use `create(TeamSchema)` to create a new message.
 */
export declare const TeamSchema: GenMessage<Team>;

/**
 * @generated from message blueapi.prism.v1.ListTeamMembersRequest
 */
export declare type ListTeamMembersRequest = Message<"blueapi.prism.v1.ListTeamMembersRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListTeamMembersRequest.
 * Use `create(ListTeamMembersRequestSchema)` to create a new message.
 */
export declare const ListTeamMembersRequestSchema: GenMessage<ListTeamMembersRequest>;

/**
 * @generated from message blueapi.prism.v1.Member
 */
export declare type Member = Message<"blueapi.prism.v1.Member"> & {
  /**
   * @generated from field: string org = 1;
   */
  org: string;

  /**
   * @generated from field: string team = 2;
   */
  team: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt: string;

  /**
   * @generated from field: string last_update = 7;
   */
  lastUpdate: string;
};

/**
 * Describes the message blueapi.prism.v1.Member.
 * Use `create(MemberSchema)` to create a new message.
 */
export declare const MemberSchema: GenMessage<Member>;

/**
 * @generated from message blueapi.prism.v1.ListProjectToTeamRequest
 */
export declare type ListProjectToTeamRequest = Message<"blueapi.prism.v1.ListProjectToTeamRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListProjectToTeamRequest.
 * Use `create(ListProjectToTeamRequestSchema)` to create a new message.
 */
export declare const ListProjectToTeamRequestSchema: GenMessage<ListProjectToTeamRequest>;

/**
 * @generated from message blueapi.prism.v1.ListProjectToTeamResponse
 */
export declare type ListProjectToTeamResponse = Message<"blueapi.prism.v1.ListProjectToTeamResponse"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * @generated from field: string project_name = 2;
   */
  projectName: string;

  /**
   * @generated from field: string team_id = 3;
   */
  teamId: string;

  /**
   * @generated from field: string team_name = 4;
   */
  teamName: string;
};

/**
 * Describes the message blueapi.prism.v1.ListProjectToTeamResponse.
 * Use `create(ListProjectToTeamResponseSchema)` to create a new message.
 */
export declare const ListProjectToTeamResponseSchema: GenMessage<ListProjectToTeamResponse>;

/**
 * @generated from message blueapi.prism.v1.ListProductsRequest
 */
export declare type ListProductsRequest = Message<"blueapi.prism.v1.ListProductsRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListProductsRequest.
 * Use `create(ListProductsRequestSchema)` to create a new message.
 */
export declare const ListProductsRequestSchema: GenMessage<ListProductsRequest>;

/**
 * @generated from message blueapi.prism.v1.Product
 */
export declare type Product = Message<"blueapi.prism.v1.Product"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string last_update = 5;
   */
  lastUpdate: string;
};

/**
 * Describes the message blueapi.prism.v1.Product.
 * Use `create(ProductSchema)` to create a new message.
 */
export declare const ProductSchema: GenMessage<Product>;

/**
 * @generated from message blueapi.prism.v1.CreateProductRequest
 */
export declare type CreateProductRequest = Message<"blueapi.prism.v1.CreateProductRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;
};

/**
 * Describes the message blueapi.prism.v1.CreateProductRequest.
 * Use `create(CreateProductRequestSchema)` to create a new message.
 */
export declare const CreateProductRequestSchema: GenMessage<CreateProductRequest>;

/**
 * @generated from message blueapi.prism.v1.CreateTeamRequest
 */
export declare type CreateTeamRequest = Message<"blueapi.prism.v1.CreateTeamRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;
};

/**
 * Describes the message blueapi.prism.v1.CreateTeamRequest.
 * Use `create(CreateTeamRequestSchema)` to create a new message.
 */
export declare const CreateTeamRequestSchema: GenMessage<CreateTeamRequest>;

/**
 * @generated from message blueapi.prism.v1.DeleteProductRequest
 */
export declare type DeleteProductRequest = Message<"blueapi.prism.v1.DeleteProductRequest"> & {
  /**
   * Required product ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.DeleteProductRequest.
 * Use `create(DeleteProductRequestSchema)` to create a new message.
 */
export declare const DeleteProductRequestSchema: GenMessage<DeleteProductRequest>;

/**
 * @generated from message blueapi.prism.v1.AssignProjectToTeamRequest
 */
export declare type AssignProjectToTeamRequest = Message<"blueapi.prism.v1.AssignProjectToTeamRequest"> & {
  /**
   * Indicates whether a new project was created as part of the assignment.
   *
   * @generated from field: bool create_new = 1;
   */
  createNew: boolean;

  /**
   * Should not be empty if create_new is true.
   *
   * @generated from field: string project_email = 2;
   */
  projectEmail: string;

  /**
   * Should not be empty if create_new is true.
   *
   * @generated from field: string project_name = 3;
   */
  projectName: string;

  /**
   * @generated from field: string team_id = 4;
   */
  teamId: string;

  /**
   * Required. Comma-separated list of project IDs to assign to the team.
   *
   * @generated from field: string project_ids = 5;
   */
  projectIds: string;
};

/**
 * Describes the message blueapi.prism.v1.AssignProjectToTeamRequest.
 * Use `create(AssignProjectToTeamRequestSchema)` to create a new message.
 */
export declare const AssignProjectToTeamRequestSchema: GenMessage<AssignProjectToTeamRequest>;

/**
 * @generated from message blueapi.prism.v1.AssignProjectToTeamResponse
 */
export declare type AssignProjectToTeamResponse = Message<"blueapi.prism.v1.AssignProjectToTeamResponse"> & {
  /**
   * @generated from field: string team_id = 1;
   */
  teamId: string;

  /**
   * @generated from field: string team_name = 2;
   */
  teamName: string;

  /**
   * Comma-separated list of project IDs that were assigned.
   *
   * @generated from field: string project_ids = 3;
   */
  projectIds: string;

  /**
   * Comma-separated list of project names that were assigned.
   *
   * @generated from field: string project_names = 4;
   */
  projectNames: string;
};

/**
 * Describes the message blueapi.prism.v1.AssignProjectToTeamResponse.
 * Use `create(AssignProjectToTeamResponseSchema)` to create a new message.
 */
export declare const AssignProjectToTeamResponseSchema: GenMessage<AssignProjectToTeamResponse>;

/**
 * @generated from message blueapi.prism.v1.DeleteTeamRequest
 */
export declare type DeleteTeamRequest = Message<"blueapi.prism.v1.DeleteTeamRequest"> & {
  /**
   * Required team ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message blueapi.prism.v1.DeleteTeamRequest.
 * Use `create(DeleteTeamRequestSchema)` to create a new message.
 */
export declare const DeleteTeamRequestSchema: GenMessage<DeleteTeamRequest>;

/**
 * @generated from message blueapi.prism.v1.IntegrationStatus
 */
export declare type IntegrationStatus = Message<"blueapi.prism.v1.IntegrationStatus"> & {
  /**
   * "github", "slack"
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * "on", "off"
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string teamName = 4;
   */
  teamName: string;

  /**
   * @generated from field: string last_update = 5;
   */
  lastUpdate: string;
};

/**
 * Describes the message blueapi.prism.v1.IntegrationStatus.
 * Use `create(IntegrationStatusSchema)` to create a new message.
 */
export declare const IntegrationStatusSchema: GenMessage<IntegrationStatus>;

/**
 * @generated from message blueapi.prism.v1.GetIntegrationStatusResponse
 */
export declare type GetIntegrationStatusResponse = Message<"blueapi.prism.v1.GetIntegrationStatusResponse"> & {
  /**
   * @generated from field: repeated blueapi.prism.v1.IntegrationStatus status = 1;
   */
  status: IntegrationStatus[];
};

/**
 * Describes the message blueapi.prism.v1.GetIntegrationStatusResponse.
 * Use `create(GetIntegrationStatusResponseSchema)` to create a new message.
 */
export declare const GetIntegrationStatusResponseSchema: GenMessage<GetIntegrationStatusResponse>;

/**
 * @generated from message blueapi.prism.v1.ListReportSchedulesRequest
 */
export declare type ListReportSchedulesRequest = Message<"blueapi.prism.v1.ListReportSchedulesRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListReportSchedulesRequest.
 * Use `create(ListReportSchedulesRequestSchema)` to create a new message.
 */
export declare const ListReportSchedulesRequestSchema: GenMessage<ListReportSchedulesRequest>;

/**
 * @generated from message blueapi.prism.v1.ReportSchedule
 */
export declare type ReportSchedule = Message<"blueapi.prism.v1.ReportSchedule"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string schedule = 3;
   */
  schedule: string;

  /**
   * Supported values: "on", "off"
   *
   * @generated from field: string status = 4;
   */
  status: string;

  /**
   * @generated from field: string schedule_cron = 5;
   */
  scheduleCron: string;

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt: string;

  /**
   * @generated from field: string last_update = 7;
   */
  lastUpdate: string;

  /**
   * @generated from field: string workflow_id = 8;
   */
  workflowId: string;
};

/**
 * Describes the message blueapi.prism.v1.ReportSchedule.
 * Use `create(ReportScheduleSchema)` to create a new message.
 */
export declare const ReportScheduleSchema: GenMessage<ReportSchedule>;

/**
 * @generated from message blueapi.prism.v1.UpdateOrgTimezoneRequest
 */
export declare type UpdateOrgTimezoneRequest = Message<"blueapi.prism.v1.UpdateOrgTimezoneRequest"> & {
  /**
   * Required organization ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Timezone in IANA format, e.g., "Asia/Kuala_Lumpur".
   *
   * @generated from field: string timezone = 2;
   */
  timezone: string;
};

/**
 * Describes the message blueapi.prism.v1.UpdateOrgTimezoneRequest.
 * Use `create(UpdateOrgTimezoneRequestSchema)` to create a new message.
 */
export declare const UpdateOrgTimezoneRequestSchema: GenMessage<UpdateOrgTimezoneRequest>;

/**
 * @generated from message blueapi.prism.v1.ListIntegrationStatusRequest
 */
export declare type ListIntegrationStatusRequest = Message<"blueapi.prism.v1.ListIntegrationStatusRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListIntegrationStatusRequest.
 * Use `create(ListIntegrationStatusRequestSchema)` to create a new message.
 */
export declare const ListIntegrationStatusRequestSchema: GenMessage<ListIntegrationStatusRequest>;

/**
 * @generated from message blueapi.prism.v1.UpdateWorkflowRequest
 */
export declare type UpdateWorkflowRequest = Message<"blueapi.prism.v1.UpdateWorkflowRequest"> & {
  /**
   * Required workflow name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Allowed values are "on" and "off".
   *
   * @generated from field: string status = 2;
   */
  status: string;
};

/**
 * Describes the message blueapi.prism.v1.UpdateWorkflowRequest.
 * Use `create(UpdateWorkflowRequestSchema)` to create a new message.
 */
export declare const UpdateWorkflowRequestSchema: GenMessage<UpdateWorkflowRequest>;

/**
 * @generated from message blueapi.prism.v1.ListWorkflowsRequest
 */
export declare type ListWorkflowsRequest = Message<"blueapi.prism.v1.ListWorkflowsRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListWorkflowsRequest.
 * Use `create(ListWorkflowsRequestSchema)` to create a new message.
 */
export declare const ListWorkflowsRequestSchema: GenMessage<ListWorkflowsRequest>;

/**
 * @generated from message blueapi.prism.v1.Workflow
 */
export declare type Workflow = Message<"blueapi.prism.v1.Workflow"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Allowed values are "on" and "off".
   *
   * @generated from field: string status = 2;
   */
  status: string;
};

/**
 * Describes the message blueapi.prism.v1.Workflow.
 * Use `create(WorkflowSchema)` to create a new message.
 */
export declare const WorkflowSchema: GenMessage<Workflow>;

/**
 * @generated from message blueapi.prism.v1.ListActivitiesRequest
 */
export declare type ListActivitiesRequest = Message<"blueapi.prism.v1.ListActivitiesRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.ListActivitiesRequest.
 * Use `create(ListActivitiesRequestSchema)` to create a new message.
 */
export declare const ListActivitiesRequestSchema: GenMessage<ListActivitiesRequest>;

/**
 * @generated from message blueapi.prism.v1.Activity
 */
export declare type Activity = Message<"blueapi.prism.v1.Activity"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string created_at = 3;
   */
  createdAt: string;
};

/**
 * Describes the message blueapi.prism.v1.Activity.
 * Use `create(ActivitySchema)` to create a new message.
 */
export declare const ActivitySchema: GenMessage<Activity>;

/**
 * @generated from message blueapi.prism.v1.JoinOrganizationRequest
 */
export declare type JoinOrganizationRequest = Message<"blueapi.prism.v1.JoinOrganizationRequest"> & {
  /**
   * Required.
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * Required user email.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * Optional user name.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Optional "google", "github"
   *
   * @generated from field: string social = 4;
   */
  social: string;
};

/**
 * Describes the message blueapi.prism.v1.JoinOrganizationRequest.
 * Use `create(JoinOrganizationRequestSchema)` to create a new message.
 */
export declare const JoinOrganizationRequestSchema: GenMessage<JoinOrganizationRequest>;

/**
 * @generated from message blueapi.prism.v1.GenerateOrganizationCodeRequest
 */
export declare type GenerateOrganizationCodeRequest = Message<"blueapi.prism.v1.GenerateOrganizationCodeRequest"> & {
};

/**
 * Describes the message blueapi.prism.v1.GenerateOrganizationCodeRequest.
 * Use `create(GenerateOrganizationCodeRequestSchema)` to create a new message.
 */
export declare const GenerateOrganizationCodeRequestSchema: GenMessage<GenerateOrganizationCodeRequest>;

/**
 * @generated from message blueapi.prism.v1.GenerateOrganizationCodeResponse
 */
export declare type GenerateOrganizationCodeResponse = Message<"blueapi.prism.v1.GenerateOrganizationCodeResponse"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * Describes the message blueapi.prism.v1.GenerateOrganizationCodeResponse.
 * Use `create(GenerateOrganizationCodeResponseSchema)` to create a new message.
 */
export declare const GenerateOrganizationCodeResponseSchema: GenMessage<GenerateOrganizationCodeResponse>;

/**
 * @generated from message blueapi.prism.v1.ShareGDriveRequest
 */
export declare type ShareGDriveRequest = Message<"blueapi.prism.v1.ShareGDriveRequest"> & {
  /**
   * @generated from field: string drivePath = 1;
   */
  drivePath: string;
};

/**
 * Describes the message blueapi.prism.v1.ShareGDriveRequest.
 * Use `create(ShareGDriveRequestSchema)` to create a new message.
 */
export declare const ShareGDriveRequestSchema: GenMessage<ShareGDriveRequest>;

/**
 * Prism service definition.
 *
 * @generated from service blueapi.prism.v1.Prism
 */
export declare const Prism: GenService<{
  /**
   * Test endpoint only.
   *
   * @generated from rpc blueapi.prism.v1.Prism.Test
   */
  test: {
    methodKind: "unary";
    input: typeof TestRequestSchema;
    output: typeof TestResponseSchema;
  },
  /**
   * WIP: Creates a new project.
   *
   * @generated from rpc blueapi.prism.v1.Prism.CreateProject
   */
  createProject: {
    methodKind: "unary";
    input: typeof CreateProjectRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WIP: Gets information about a project by ID.
   *
   * @generated from rpc blueapi.prism.v1.Prism.GetProject
   */
  getProject: {
    methodKind: "unary";
    input: typeof GetProjectRequestSchema;
    output: typeof GetProjectResponseSchema;
  },
  /**
   * WIP: Deletes a project by ID.
   *
   * @generated from rpc blueapi.prism.v1.Prism.DeleteProject
   */
  deleteProject: {
    methodKind: "unary";
    input: typeof DeleteProjectRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * WIP: Lists all projects 
   *
   * @generated from rpc blueapi.prism.v1.Prism.ListProjects
   */
  listProjects: {
    methodKind: "server_streaming";
    input: typeof ListProjectsRequestSchema;
    output: typeof ProjectSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.CreateOrganization
   */
  createOrganization: {
    methodKind: "unary";
    input: typeof CreateOrganizationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.GetOrganization
   */
  getOrganization: {
    methodKind: "unary";
    input: typeof GetOrganizationRequestSchema;
    output: typeof GetOrganizationResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.UpdateOrganization
   */
  updateOrganization: {
    methodKind: "unary";
    input: typeof UpdateOrganizationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.DeleteOrganization
   */
  deleteOrganization: {
    methodKind: "unary";
    input: typeof DeleteOrganizationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.VerifyUser
   */
  verifyUser: {
    methodKind: "unary";
    input: typeof VerifyUserRequestSchema;
    output: typeof VerifyUserResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.CreateTeam
   */
  createTeam: {
    methodKind: "unary";
    input: typeof CreateTeamRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.GetTeam
   */
  getTeam: {
    methodKind: "unary";
    input: typeof GetTeamRequestSchema;
    output: typeof GetTeamResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListTeams
   */
  listTeams: {
    methodKind: "server_streaming";
    input: typeof ListTeamsRequestSchema;
    output: typeof TeamSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListTeamMembers
   */
  listTeamMembers: {
    methodKind: "server_streaming";
    input: typeof ListTeamMembersRequestSchema;
    output: typeof MemberSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListProjectToTeam
   */
  listProjectToTeam: {
    methodKind: "server_streaming";
    input: typeof ListProjectToTeamRequestSchema;
    output: typeof ListProjectToTeamResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListProducts
   */
  listProducts: {
    methodKind: "server_streaming";
    input: typeof ListProductsRequestSchema;
    output: typeof ProductSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.CreateProduct
   */
  createProduct: {
    methodKind: "unary";
    input: typeof CreateProductRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.DeleteProduct
   */
  deleteProduct: {
    methodKind: "unary";
    input: typeof DeleteProductRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.AssignProjectToTeam
   */
  assignProjectToTeam: {
    methodKind: "unary";
    input: typeof AssignProjectToTeamRequestSchema;
    output: typeof AssignProjectToTeamResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.DeleteTeam
   */
  deleteTeam: {
    methodKind: "unary";
    input: typeof DeleteTeamRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.GetIntegrationStatus
   */
  getIntegrationStatus: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetIntegrationStatusResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListReportSchedules
   */
  listReportSchedules: {
    methodKind: "server_streaming";
    input: typeof ListReportSchedulesRequestSchema;
    output: typeof ReportScheduleSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.UpdateReportSchedule
   */
  updateReportSchedule: {
    methodKind: "unary";
    input: typeof ReportScheduleSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.CreateReportSchedule
   */
  createReportSchedule: {
    methodKind: "unary";
    input: typeof ReportScheduleSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.UpdateOrgTimezone
   */
  updateOrgTimezone: {
    methodKind: "unary";
    input: typeof UpdateOrgTimezoneRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListIntegrationStatus
   */
  listIntegrationStatus: {
    methodKind: "server_streaming";
    input: typeof ListIntegrationStatusRequestSchema;
    output: typeof IntegrationStatusSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.UpdateWorkflow
   */
  updateWorkflow: {
    methodKind: "unary";
    input: typeof UpdateWorkflowRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListWorkflows
   */
  listWorkflows: {
    methodKind: "server_streaming";
    input: typeof ListWorkflowsRequestSchema;
    output: typeof WorkflowSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ListActivities
   */
  listActivities: {
    methodKind: "server_streaming";
    input: typeof ListActivitiesRequestSchema;
    output: typeof ActivitySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.JoinOrganization
   */
  joinOrganization: {
    methodKind: "unary";
    input: typeof JoinOrganizationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.GenerateOrganizationCode
   */
  generateOrganizationCode: {
    methodKind: "unary";
    input: typeof GenerateOrganizationCodeRequestSchema;
    output: typeof GenerateOrganizationCodeResponseSchema;
  },
  /**
   * @generated from rpc blueapi.prism.v1.Prism.ShareGDrive
   */
  shareGDrive: {
    methodKind: "unary";
    input: typeof ShareGDriveRequestSchema;
    output: typeof EmptySchema;
  },
}>;

