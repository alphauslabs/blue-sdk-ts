// @generated by protoc-gen-es v2.7.0
// @generated from file vortex/v1/vortex.proto (package blueapi.vortex.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file vortex/v1/vortex.proto.
 */
export declare const file_vortex_v1_vortex: GenFile;

/**
 * @generated from message blueapi.vortex.v1.TestResponse
 */
export declare type TestResponse = Message<"blueapi.vortex.v1.TestResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message blueapi.vortex.v1.TestResponse.
 * Use `create(TestResponseSchema)` to create a new message.
 */
export declare const TestResponseSchema: GenMessage<TestResponse>;

/**
 * @generated from message blueapi.vortex.v1.CreateOrgRequest
 */
export declare type CreateOrgRequest = Message<"blueapi.vortex.v1.CreateOrgRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;
};

/**
 * Describes the message blueapi.vortex.v1.CreateOrgRequest.
 * Use `create(CreateOrgRequestSchema)` to create a new message.
 */
export declare const CreateOrgRequestSchema: GenMessage<CreateOrgRequest>;

/**
 * @generated from message blueapi.vortex.v1.CreateOrgResponse
 */
export declare type CreateOrgResponse = Message<"blueapi.vortex.v1.CreateOrgResponse"> & {
  /**
   * @generated from field: string orgId = 1;
   */
  orgId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;
};

/**
 * Describes the message blueapi.vortex.v1.CreateOrgResponse.
 * Use `create(CreateOrgResponseSchema)` to create a new message.
 */
export declare const CreateOrgResponseSchema: GenMessage<CreateOrgResponse>;

/**
 * @generated from message blueapi.vortex.v1.GetUserRequest
 */
export declare type GetUserRequest = Message<"blueapi.vortex.v1.GetUserRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;
};

/**
 * Describes the message blueapi.vortex.v1.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export declare const GetUserRequestSchema: GenMessage<GetUserRequest>;

/**
 * @generated from message blueapi.vortex.v1.GetUserResponse
 */
export declare type GetUserResponse = Message<"blueapi.vortex.v1.GetUserResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string orgId = 4;
   */
  orgId: string;
};

/**
 * Describes the message blueapi.vortex.v1.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export declare const GetUserResponseSchema: GenMessage<GetUserResponse>;

/**
 * @generated from message blueapi.vortex.v1.Prompt
 */
export declare type Prompt = Message<"blueapi.vortex.v1.Prompt"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * @generated from field: string fromContainerName = 2;
   */
  fromContainerName: string;

  /**
   * @generated from field: string riskLevel = 3;
   */
  riskLevel: string;
};

/**
 * Describes the message blueapi.vortex.v1.Prompt.
 * Use `create(PromptSchema)` to create a new message.
 */
export declare const PromptSchema: GenMessage<Prompt>;

/**
 * @generated from message blueapi.vortex.v1.ListPromptsRequest
 */
export declare type ListPromptsRequest = Message<"blueapi.vortex.v1.ListPromptsRequest"> & {
};

/**
 * Describes the message blueapi.vortex.v1.ListPromptsRequest.
 * Use `create(ListPromptsRequestSchema)` to create a new message.
 */
export declare const ListPromptsRequestSchema: GenMessage<ListPromptsRequest>;

/**
 * @generated from message blueapi.vortex.v1.InviteUserRequest
 */
export declare type InviteUserRequest = Message<"blueapi.vortex.v1.InviteUserRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;
};

/**
 * Describes the message blueapi.vortex.v1.InviteUserRequest.
 * Use `create(InviteUserRequestSchema)` to create a new message.
 */
export declare const InviteUserRequestSchema: GenMessage<InviteUserRequest>;

/**
 * @generated from message blueapi.vortex.v1.VerifyInvitedUserRequest
 */
export declare type VerifyInvitedUserRequest = Message<"blueapi.vortex.v1.VerifyInvitedUserRequest"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string orgId = 2;
   */
  orgId: string;

  /**
   * @generated from field: string code = 3;
   */
  code: string;
};

/**
 * Describes the message blueapi.vortex.v1.VerifyInvitedUserRequest.
 * Use `create(VerifyInvitedUserRequestSchema)` to create a new message.
 */
export declare const VerifyInvitedUserRequestSchema: GenMessage<VerifyInvitedUserRequest>;

/**
 * Vortex service definition.
 *
 * @generated from service blueapi.vortex.v1.Vortex
 */
export declare const Vortex: GenService<{
  /**
   * Test endpoint only
   *
   * @generated from rpc blueapi.vortex.v1.Vortex.Test
   */
  test: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof TestResponseSchema;
  },
  /**
   * Create an org in Vortex
   *
   * @generated from rpc blueapi.vortex.v1.Vortex.CreateOrg
   */
  createOrg: {
    methodKind: "unary";
    input: typeof CreateOrgRequestSchema;
    output: typeof CreateOrgResponseSchema;
  },
  /**
   * @generated from rpc blueapi.vortex.v1.Vortex.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof GetUserResponseSchema;
  },
  /**
   * @generated from rpc blueapi.vortex.v1.Vortex.ListPrompts
   */
  listPrompts: {
    methodKind: "server_streaming";
    input: typeof ListPromptsRequestSchema;
    output: typeof PromptSchema;
  },
  /**
   * @generated from rpc blueapi.vortex.v1.Vortex.InviteUser
   */
  inviteUser: {
    methodKind: "unary";
    input: typeof InviteUserRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc blueapi.vortex.v1.Vortex.VerifyInvitedUser
   */
  verifyInvitedUser: {
    methodKind: "unary";
    input: typeof VerifyInvitedUserRequestSchema;
    output: typeof EmptySchema;
  },
}>;

